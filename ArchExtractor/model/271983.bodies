class InfrastructureFactory
!!!267759.python!!!	getAEPackage(in self : , in inpPackagePath : string, out outAEPackage : AEPackage) : AEPackage
        outAEPackage = None
        if(inpPackagePath in self.itsAEPackageMap.keys()):
            outAEPackage = self.itsAEPackageMap[inpPackagePath]
        else:
            # Package does not exist so we have to create one
            leftPath, rightPath = os.path.split(inpPackagePath)
            newPackNameList = [rightPath]
            # Start to strip the given path and find the first appearance of 
            # matching path and existing package
            while (leftPath) and (leftPath not in self.itsAEPackageMap.keys()):
                leftPath, rightPath = os.path.split(leftPath)
                newPackNameList.insert(0, rightPath)
            # If leftPath is not empty then it exists in the package map
            rootPack = None
            if(leftPath):
                rootPack = self.itsAEPackageMap[leftPath]
            else:
                # else we have to create root package
                leftPath = newPackNameList.pop(0)
                rootPack = Infrastructure.AEPackage.AEPackage(leftPath)
                self.itsAEPackageMap[leftPath] = rootPack
                
            # continue creating the missed packages from the input path
            for newPackName in newPackNameList:
                newPack = Infrastructure.AEPackage.AEPackage(newPackName)
                leftPath = os.path.join(leftPath, newPackName)
                self.itsAEPackageMap[leftPath] = newPack
                rootPack.getItsAEPackageList().append(newPack)
                newPack.setItsParentPackage(rootPack)
                rootPack = newPack
            
            outAEPackage = rootPack

        return outAEPackage
!!!276335.python!!!	getAEModel(in self : , out outAEModel : AEModel)
        outAEModel = Infrastructure.AEModel.AEModel(self)
        
        return outAEModel
!!!276847.python!!!	getRootPackageList(in self : , out outRootPackageList : )
        outRootPackageList = []
        for pack in self.itsAEPackageMap.values():
            if(not pack.getItsParentPackage()):
                outRootPackageList.append(pack)
        return outRootPackageList
