class StkDataTypeFactory
!!!287087.python!!!	__init__(inout self : )
        #Initialize the STK DataTypes
        for methodName in dir(self):
            if methodName.startswith('getStk'):
                getattr(self, methodName)()
!!!284911.python!!!	getStkVoid(in self : )
        outDataType = self.getDataType('void')
        outDataType.lowerLimit = None
        outDataType.upperLimit = None        
        return outDataType
!!!285039.python!!!	getStkU1(in self : )
        outDataType = self.getDataType('U1')
        outDataType.lowerLimit = '0'
        outDataType.upperLimit = '1'
        return outDataType
!!!285167.python!!!	getStkU8(in self : )
        outDataType = self.getDataType('U8')
        outDataType.lowerLimit = '0'
        outDataType.upperLimit = '255'        
        return outDataType
!!!285295.python!!!	getStkS8(in self : )
        outDataType = self.getDataType('S8')
        outDataType.lowerLimit = '-126'
        outDataType.upperLimit = '127'        
        return outDataType
!!!285423.python!!!	getStkS16(in self : )
        outDataType = self.getDataType('S16')
        outDataType.lowerLimit = '-32766'
        outDataType.upperLimit = '32767'
        return outDataType
!!!286959.python!!!	getStkU16(in self : )
        outDataType = self.getDataType('U16')
        outDataType.lowerLimit = '0'
        outDataType.upperLimit = '65535'
        return outDataType
!!!285551.python!!!	getStkU32(in self : )
        outDataType = self.getDataType('U32')
        outDataType.lowerLimit = '0'
        outDataType.upperLimit = '4294967295'        
        return outDataType
!!!285679.python!!!	getStkS32(in self : )
        outDataType = self.getDataType('S32')
        self.lowerLimit = '-2147483646'
        self.upperLimit = '2147483647'
        return outDataType
