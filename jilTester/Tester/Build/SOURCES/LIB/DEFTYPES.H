/*============================================================================
  Project ......................... STANDARD
  Component ....................... deftypes.h
  File revision.................... $
  Last modification date .......... $Modtime:   04 Feb 2009 16:32:18  $
  -------------------------------------------------------------------------
  Copyright ... This software is JCAE property. Duplication or
                disclosure is prohibited without JCAE written permission
  ------------------------------------------------------------------------- 
    
  - This file should only contain data useful to the programmer to use
    this component
  - Component exported macros, constants and types are defined in this file
  - Component exported variables and functions are declared in this file 
    with the "extern" key word
  
  -------------------------------------------------------------------------
  deftypes.h file review :

  ==========================================================================*/

/*----- Definition pour mono-inclusion -----*/
#ifndef I_DEFTYPES_H
#define I_DEFTYPES_H (1)


/*-------------------------------------------------------------------------
  Included files to resolve specific definitions in this file

  #include <system_file_name.h>
  #include "project_file_name.h"
  -------------------------------------------------------------------------*/
#ifdef USE_LIBSTK
// This include file defines the starter-kit configuration
// (Needed to known what kind of CPU is used )
#include "lib_stk.h"
#endif

/*-------------------------------------------------------------------------
  Constant data

  #define cCMPConstantName   ((tType) ConstantValue)
  -------------------------------------------------------------------------*/

#define cFaux   ( (BOOL)(0==1) )
#define cVrai   ( (BOOL)(1==1) )
#define cFalse  ( (BOOL)(0==1) )
#define cTrue   ( (BOOL)(1==1) )


#ifndef NULL
    #define NULL                    0
#endif

/*-------------------------------------------------------------------------
  Exported Macro

  #define mCMPMacroName   (MacroDefinition)
  -------------------------------------------------------------------------*/ 

// standard macros 
#define mMin(x,y)     (((x) >= (y)) ? (y) : (x))
#define mMax(x,y)     (((x) >= (y)) ? (x) : (y))
#define mAbs(x)       (((x)>0)?(x):-(x))
#define mModulo(x,y)  ((x) % (y))

// | a - b | 
#define mDelta( x,y ) \
( ((x)<(y)) ? ((y)-(x)):((x)-(y)) )
 
// a/b and give the nearest value
#define mDiv( x,y ) \
(((x)+((y)>>1))/(y))

// concatenation x and y
#define mCat(x,y)     x ## y
// Warning generated by QAC on the use of this macro
//         <=4=(3409) Macro body not enclosed in ().
// We can not put () around the macro otherwise
// the concatanetion is not the same!


//recursive concatenation twice time
#define mXCat(x,y)    mCat(x,y)
// Warning generated by QAC on the use of this macro
//         <=4=(3410) Macro parameter not enclosed in ().
//         <=4=(3432) Single object in macro body not enclosed in ().
//
// We can not put () around the macro otherwise
// the concatanetion is not the same!

/*-------------------------------------------------------------------------
  Exported type

  struct  sCMPStructureName { ... };
  union   uCMPUnionName { ... };
  enum    eCMPEnumerationName { ... };
  typedef Expression tCMPTypeName;

  -------------------------------------------------------------------------*/

typedef unsigned char   U8;
typedef unsigned char   U1;
typedef signed   char   S8;
typedef unsigned short  U16;
typedef signed   short  S16;
typedef unsigned long   U32;
typedef signed   long   S32;

// The type REG defines the size of data registers of the micro.
// (data register of NEC K0 are 16 bits wide)
typedef U8  REG;


#if defined(COMPILATION_NATIVE) || defined(WIN32)
    // BOOL is also defined by windef.h it must defined it as windef
    typedef int BOOL;
#else
    typedef unsigned char BOOL;
#endif

#ifdef USE_FLOATING_POINT
typedef float  F32;
typedef double F64;
#endif



#ifndef DONT_KEEP_OLD_TYPE_COMPATIBILITY
// old type definition to keep compatibility with old project
// should be suppress forward
typedef unsigned char   tU8Bit;
typedef unsigned char   tU1Bit;
typedef signed   char   tS8Bit;
typedef unsigned short  tU16Bit;
typedef signed   short  tS16Bit;
typedef unsigned long   tU32Bit;
typedef signed   long   tS32Bit;

typedef	char            tChar;         //  1 byte
typedef unsigned char   tUChar;        //  1 byte
typedef signed short    tShort;        //  2 bytes
typedef unsigned short  tUShort;       //  2 bytes
typedef signed long     tLong;         //  4 bytes
typedef unsigned long   tULong;        //  4 bytes

    #if defined(COMPILATION_NATIVE) || defined(WIN32)
        // BOOL is also defined by windef.h it must defined it as windef
        typedef int tBooleen;
        typedef int tBoolean;
    #else
        typedef unsigned char   tBooleen;
        typedef unsigned char   tBoolean;
    #endif

#endif

/*-------------------------------------------------------------------------
  Exported data

  extern  tType   CMPVariableName;
  extern  tType*  pCMPVariableName; 
  -------------------------------------------------------------------------*/ 

/*-------------------------------------------------------------------------
  Constant exported data

  extern const tType  CMPVariableName;
  -------------------------------------------------------------------------*/ 

/*-------------------------------------------------------------------------
  Exported functions

  extern tReturnType CMPFunctionName(tTypeArgument1 ArgumentName1, ... );
  -------------------------------------------------------------------------*/ 

#endif   /* I_DEFTYPES_H */
