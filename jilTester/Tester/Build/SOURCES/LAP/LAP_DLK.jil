#ifndef _QAC_
//******************************************************************************
// Company:      Johnson Controls Inc.
// -----------------------------------------------------------------------------
// Copyright:    This software is JCI property.
//               Duplication or disclosure without JCI written authorization
//               is prohibited.
// -----------------------------------------------------------------------------
// Project:      X90_BCM
// Language:     ANSI-C
// -----------------------------------------------------------------------------
// Component:    LAP_DLK
// -----------------------------------------------------------------------------
// $Date:   Feb 25 2010 17:33:56  $
// $Archive::   J:/_PVCSRoot/Renault/X90_BCM/SOFTWARE/PVCS/archives/DEVELOPMENT/X90_BCM/K0/L7/CMP/LAP/DLK/LAP_DLK.jil-arc  $
// $Revision:   1.9  $
// -----------------------------------------------------------------------------
// $Log::   J:/_PVCSRoot/Renault/X90_BCM/SOFTWARE/PVCS/archives/DEVELOPMENT/X90_BCM/K0/L7/CMP/LAP/DLK/LAP_DLK.jil-arc  $
// 
//    Rev 1.9   Feb 25 2010 17:33:56   adzhelp
// Cm007212: HWP: Implementation of SC detection of Verlog LED and Doorlock LED in sleep mode
// 
//    Rev 1.8   Feb 04 2010 10:50:00   adzhelp
// Cm006968, Cm006760: Limitation for repeated crash unlock
// 
//    Rev 1.7   Oct 30 2009 10:45:26   amarinm1
// Cm006587: Produce new control - AutoRelock.
// 
//    Rev 1.6   Sep 23 2009 11:33:12   ailievb
// Cm006191: FLA: Need to manage crash memorization after reset.
// 
//    Rev 1.5   Jul 24 2009 09:11:54   adzhelp
// Cm005136: Callback connected to dedicated control from DAT_PIN: after inputs are available
// 
//    Rev 1.4   Jul 07 2009 09:35:16   ailievb
// Cm005136: DLK: The BCM does LOCK/UNLOCK the doors at BCM reset if the CDL button is in LOCK/UNLOCK position.
// 
//    Rev 1.3   May 27 2009 10:41:24   ailievb
// Cm003264:Implementation of the Doorlock functionality (Without SDO part)
// 
//    Rev 1.2   Apr 29 2009 14:44:40   ailievb
// Cm003264:Implementation of the Doorlock functionality (Without SDO part)
// 
//    Rev 1.1   Apr 16 2009 15:17:52   ailievb
// Added support of 1 Button RKE.
// Issue correction. 
// 
//    Rev 1.0   Mar 24 2009 09:38:00   ailievb
// Initial revision.
//******************************************************************************
#endif

/*-------------------------------------------------------------------------
  Includes non re entry
  -------------------------------------------------------------------------*/

#ifndef I_LAP_DLK_JIL
#define I_LAP_DLK_JIL (1)

/*--------------------------------------------------------------------------
  Included jil files

  #include "project_file_name.jil"
  --------------------------------------------------------------------------*/

/****************************************************************************
  Component declaration
  COMPONENT ComponentName
  {
    // All declaration needed
  };

/****************************************************************************/
Component LAP_DLK
{
//------------------------------------------------------------------------------
//    Task TaskName                           // Declaration of Task
//    {
//        Id            = "IdName";             --> this field is optional
//        Fct           = "FonctionName";       --> this field is optional
//        GraphGroup    = GraphGroupReference;  --> this field is optional
//        Resource      = ResourceReference;    --> this field is optional
//        Npg           = NpgReference;         --> this field is optional
//        Priority      = Priority;             --> this field is optional
//
//    };
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
//    Graph GraphName                         // Declaration of Graph
//    {
//        Id            = "IdName";             --> this field is optional
//        GraphGroup    = GraphGroupReference;  --> this field is optional
//        NbInstances   = NbInstances;          --> this field is optional
//    };
//------------------------------------------------------------------------------

    Graph DLKInputData 
	{
	};


    Graph DLKOutputData
	{
	};

    Graph DLKMotorCommand
	{
	};

    Graph DLKAirbagManagement
	{
	};

/*--------------------------------------------------------------------------
  Declaration of Signal 

  SIGNAL SignalName;
  --------------------------------------------------------------------------*/

   Signal CrashIsDetectedByAirbag;
   Signal CrashUnlockStarted;

/*--------------------------------------------------------------------------
  Declaration of Resource 

  RESOURCE ResourceName;
  --------------------------------------------------------------------------*/


//------------------------------------------------------------------------------
//    ProdControl { Name = "ControlName";};   // Declaration of Control produced
//------------------------------------------------------------------------------
//    ProdControl { Name = "cTOSSignalSomebodyMaintainActiveState"; };

//------------------------------------------------------------------------------
//    OnControl = CallBack                    // Declaration of Control consumed 
//    {
//         Ctrl = "ControlName";
//         Fct = "FonctionName";
//    }; 
//    
//    OnControl = CallBackActivateTask
//    {
//         Ctrl = "ControlName";
//         Task = TaskReference;
//    };
//
//    OnControl = CallBackSetSignal
//    {
//        Ctrl = "ControlName";
//        Signal = SignalReference;
//    }; 
//------------------------------------------------------------------------------
 
    ProdControl 
	{   
		Name = "RKE_LOCK_REQUEST";
	};

    ProdControl 
	{   
		Name = "RKE_UNLOCK_REQUEST";
	};
	
    ProdControl 
	{   
		Name = "RfLockAllForAlarm";
	};
    ProdControl 
	{   
		Name = "RfUnlockAllForAlarm";
	};
    
    ProdControl 
	{   
		Name = "AutoRelock";
	};
    
    ProdControl 
	{   
		Name = "CrashUnlockFinished";
	};
    OnControl = CallBack  
    {
        Ctrl = "LAPInitialize";
        Fct = "DLKInitialize";
    };

    OnControl = CallBack  
    {
        Ctrl = "IsAnybodyMaintainActiveState";
        Fct = "DLKIsAnybodyMaintainActiveState";
    };

    OnControl = CallBack  
    {
        Ctrl = "LAPEnterActiveState";
        Fct = "DLKEnterActiveState";
    };

    OnControl = CallBack  
    {
        Ctrl = "LAPLeaveActiveState";
        Fct = "DLKLeaveActiveState";
    };
	
    OnControl = CallBack  
    {
        Ctrl = "KeyIsAuthenticated";
        Fct = "DLKUpdateByVerlogOfKeyIsAuthenticated";
    };

    OnControl = SetSignal  
    {
        Ctrl = "AirbagUnlock";
        Signal = CrashIsDetectedByAirbag;
    };

    OnControl = CallBack  
    {
        Ctrl = "InputsReadAfterStartingStepState";
        Fct = "DLKLeaveStartingStepState";
    };

    OnControl = CallBack
    {
        Ctrl = "ProtectionLedVerlogSleepMode";
        Fct = "DLKProtectionSleepModeCallBack";
    };
    
//------------------------------------------------------------------------------
//    In                                      // Declaration of Data flow
//    {
//        Data = "DataName";
//        Type = U1 or U8, U16, U32, S8, S16, S32;
//        or
//        Type = U1Array or U8Array, ..., S32Array
//        {
//                Size = ItemNumber;
//        };
//    };
//
//    Out
//    {
//        ...(see In)
//    };
//------------------------------------------------------------------------------

};
/****************************************************************************
  End of component declaration
/****************************************************************************/

/*-------------------------------------------------------------------------
  End of includes non re entry
  -------------------------------------------------------------------------*/

#endif /* I_LAP_DLK_JIL */
