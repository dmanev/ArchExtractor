//******************************************************************************
// Company:      Johnson Controls Inc.
// -----------------------------------------------------------------------------
// Copyright:    This software is JCI property.
//               Duplication or disclosure without JCI written authorization
//               is prohibited.
// -----------------------------------------------------------------------------
// Project:      X90_BCM
// Language:     C
// -----------------------------------------------------------------------------
// Component:    <Comments about the component (role, algorithm, structure, 
//               limitations, defined tasks and events...)>
// -----------------------------------------------------------------------------
// $Date:   27 Oct 2008 09:22:26  $
// $Archive:   J:/_PVCSRoot/Renault/X90_BCM/SOFTWARE/PVCS/archives/DEVELOPMENT/TOOLS/CmpTestFramework/GRAPHDESIGNER/SqueletteHgrDebug.txt-arc  $
// $Revision:   1.0  $
// -----------------------------------------------------------------------------
/* $Log:   J:/_PVCSRoot/Renault/X90_BCM/SOFTWARE/PVCS/archives/DEVELOPMENT/TOOLS/CmpTestFramework/GRAPHDESIGNER/SqueletteHgrDebug.txt-arc  $

   Rev 1.0   27 Oct 2008 09:22:26   avidoly
Initial revision.

   Rev 1.2   10 Mar 2005 16:30:22   abarbae
PON URD42 DEV 2514 / PON URD42 BODY_SW 851 : Update component template for compatibility with VSS 
*/
//******************************************************************************

//------------------------------------------------------------------------------
//                      Function prototypes
//------------------------------------------------------------------------------

#ifndef DAT_TRP
   extern const tTOSSeqGraphType DATTrpAuthentication;
   extern const tTOSSeqGraphType DATTrpWriteAccess;
   extern const tTOSSeqGraphType DATTrpResynchronization;
   extern const tTOSSeqGraphType DATTrpTfcDiag; 
#endif

#ifdef DAT_TRP
   extern BOOL DATTrpAnswerChallengeReceivedOK(void);
   extern BOOL DATTrpAnswerReceivedNOKOrTimeOut(void);
   extern BOOL DATTrpAuhenticationServiceFinishedNOK(void);
   extern BOOL DATTrpAuhenticationServiceFinishedOK(void);
   extern BOOL DATTrpAuthentInNormalMode(void);
   extern void     DATTrpAuthenticationNotSuccess(void);
   extern void     DATTrpAuthenticationSuccess(void);
   extern void     DATTrpCalculateChallenge(void);
   extern BOOL DATTrpIdentifierReceivedOK(void);
   extern BOOL DATTrpInLearningModeAndLessThanMaxTrials(void);
   extern void     DATTrpIncreaseRetryCounters(void);
   extern BOOL DATTrpNewAuthenticationAuthorized(void);
   extern BOOL DATTrpNewTryAuthorized(void);
   extern void     DATTrpOnWakeUpControlNotSuccessful(void);
   extern BOOL DATTrpPage3InvertedDataReceivedOK(void);
   extern BOOL DATTrpPageWrittenOK(void);
   extern BOOL DATTrpReadAndCompareOK(void);
   extern void     DATTrpReadNOKAction(void);
   extern void     DATTrpResynchronizationNotSuccess(void);
   extern void     DATTrpResynchronizationSuccess(void);
   extern void     DATTrpSendDataToWrite(void);
   extern void     DATTrpSendInvertedReadCommand(void);
   extern void     DATTrpSendReadCommand(void);
   extern void     DATTrpSendSleepControl(void);
   extern void     DATTrpSendStartAuth(void);
   extern void     DATTrpSendWakeUpControl(void);
   extern void     DATTrpSendWriteCommand(void);
   extern BOOL DATTrpSleepFinished(void);
   extern void     DATTrpStartAuthenticationService(void);
   extern void     DATTrpStartWriteServiceForResync(void);
   extern void     DATTrpTfcDiagNotSuccess(void);
   extern void     DATTrpTfcDiagSuccess(void);
   extern BOOL DATTrpTfcResponceOK(void);
   extern BOOL DATTrpWakeUpFinished(void);
   extern BOOL DATTrpWriteCommandReceivedOK(void);
   extern void     DATTrpWriteNOKAction(void);
   extern void     DATTrpWriteNotSuccess(void);
   extern BOOL DATTrpWriteServiceFinishedNOK(void);
   extern BOOL DATTrpWriteServiceFinishedOK(void);
   extern void     DATTrpWriteSuccess(void);
   extern BOOL TOSSeqEvalVrai(void);
   extern void     TOSSeqNop(void);
   extern BOOL TOSSeqTrueEval(void); 
#endif

//------------------------------------------------------------------------------
//                      Component rules
//------------------------------------------------------------------------------

#ifdef DAT_TRP
  const tTOSSeqGraphType DATTrpAuthentication =
  {
#ifdef COMPILATION_NATIVE
    "DATTrpAuthentication",
    {
#endif
  /*   0*/  {TOSSeqEvalVrai,DATTrpSendSleepControl,cTOSSeqInvalidRule,mTOSSeqRuleNumber(1)},
  /*   1*/  {DATTrpSleepFinished,DATTrpSendWakeUpControl,mTOSSeqRuleNumber(16),mTOSSeqRuleNumber(2)},
  /*   2*/  {DATTrpWakeUpFinished,DATTrpSendStartAuth,mTOSSeqRuleNumber(14),mTOSSeqRuleNumber(3)},
  /*   3*/  {DATTrpIdentifierReceivedOK,DATTrpCalculateChallenge,mTOSSeqRuleNumber(13),mTOSSeqRuleNumber(4)},
  /*   4*/  {DATTrpAnswerChallengeReceivedOK,TOSSeqNop,mTOSSeqRuleNumber(12),mTOSSeqRuleNumber(5)},
  /*   5*/  {DATTrpAuthentInNormalMode,DATTrpAuthenticationSuccess,mTOSSeqRuleNumber(6),cTOSSeqInvalidRule},
  /*   6*/  {TOSSeqTrueEval,DATTrpSendInvertedReadCommand,cTOSSeqInvalidRule,mTOSSeqRuleNumber(7)},
  /*   7*/  {DATTrpPage3InvertedDataReceivedOK,DATTrpAuthenticationSuccess,mTOSSeqRuleNumber(8),cTOSSeqInvalidRule},
  /*   8*/  {DATTrpAnswerReceivedNOKOrTimeOut,TOSSeqNop,cTOSSeqInvalidRule,mTOSSeqRuleNumber(9)},
  /*   9*/  {DATTrpNewAuthenticationAuthorized,DATTrpIncreaseRetryCounters,mTOSSeqRuleNumber(11),mTOSSeqRuleNumber(10)},
  /*  10*/  {TOSSeqEvalVrai,DATTrpSendSleepControl,cTOSSeqInvalidRule,mTOSSeqRuleNumber(1)},
  /*  11*/  {TOSSeqEvalVrai,DATTrpAuthenticationNotSuccess,cTOSSeqInvalidRule,cTOSSeqInvalidRule},
  /*  12*/  {DATTrpAnswerReceivedNOKOrTimeOut,TOSSeqNop,cTOSSeqInvalidRule,mTOSSeqRuleNumber(9)},
  /*  13*/  {DATTrpAnswerReceivedNOKOrTimeOut,TOSSeqNop,cTOSSeqInvalidRule,mTOSSeqRuleNumber(9)},
  /*  14*/  {DATTrpAnswerReceivedNOKOrTimeOut,DATTrpOnWakeUpControlNotSuccessful,cTOSSeqInvalidRule,mTOSSeqRuleNumber(15)},
  /*  15*/  {TOSSeqEvalVrai,TOSSeqNop,cTOSSeqInvalidRule,mTOSSeqRuleNumber(9)},
  /*  16*/  {DATTrpAnswerReceivedNOKOrTimeOut,TOSSeqNop,cTOSSeqInvalidRule,mTOSSeqRuleNumber(9)}, 
#ifdef COMPILATION_NATIVE
    }
#endif
  };
#endif

#ifdef DAT_TRP
  const tTOSSeqGraphType DATTrpWriteAccess =
  {
#ifdef COMPILATION_NATIVE
    "DATTrpWriteAccess",
    {
#endif
  /*   0*/  {TOSSeqEvalVrai,DATTrpSendWriteCommand,cTOSSeqInvalidRule,mTOSSeqRuleNumber(1)},
  /*   1*/  {DATTrpWriteCommandReceivedOK,DATTrpSendDataToWrite,mTOSSeqRuleNumber(11),mTOSSeqRuleNumber(2)},
  /*   2*/  {DATTrpPageWrittenOK,DATTrpSendReadCommand,mTOSSeqRuleNumber(10),mTOSSeqRuleNumber(3)},
  /*   3*/  {DATTrpReadAndCompareOK,DATTrpWriteSuccess,mTOSSeqRuleNumber(4),cTOSSeqInvalidRule},
  /*   4*/  {DATTrpAnswerReceivedNOKOrTimeOut,DATTrpReadNOKAction,cTOSSeqInvalidRule,mTOSSeqRuleNumber(5)},
  /*   5*/  {DATTrpInLearningModeAndLessThanMaxTrials,DATTrpSendWriteCommand,mTOSSeqRuleNumber(6),mTOSSeqRuleNumber(1)},
  /*   6*/  {DATTrpNewTryAuthorized,DATTrpStartAuthenticationService,mTOSSeqRuleNumber(9),mTOSSeqRuleNumber(7)},
  /*   7*/  {DATTrpAuhenticationServiceFinishedOK,DATTrpSendWriteCommand,mTOSSeqRuleNumber(8),mTOSSeqRuleNumber(1)},
  /*   8*/  {DATTrpAuhenticationServiceFinishedNOK,DATTrpWriteNotSuccess,cTOSSeqInvalidRule,cTOSSeqInvalidRule},
  /*   9*/  {TOSSeqEvalVrai,DATTrpWriteNotSuccess,cTOSSeqInvalidRule,cTOSSeqInvalidRule},
  /*  10*/  {DATTrpAnswerReceivedNOKOrTimeOut,DATTrpWriteNOKAction,cTOSSeqInvalidRule,mTOSSeqRuleNumber(5)},
  /*  11*/  {DATTrpAnswerReceivedNOKOrTimeOut,TOSSeqNop,cTOSSeqInvalidRule,mTOSSeqRuleNumber(5)}, 
#ifdef COMPILATION_NATIVE
    }
#endif
  };
#endif

#ifdef DAT_TRP
  const tTOSSeqGraphType DATTrpResynchronization =
  {
#ifdef COMPILATION_NATIVE
    "DATTrpResynchronization",
    {
#endif
  /*   0*/  {TOSSeqEvalVrai,DATTrpStartWriteServiceForResync,cTOSSeqInvalidRule,mTOSSeqRuleNumber(1)},
  /*   1*/  {DATTrpWriteServiceFinishedOK,DATTrpResynchronizationSuccess,mTOSSeqRuleNumber(2),cTOSSeqInvalidRule},
  /*   2*/  {DATTrpWriteServiceFinishedNOK,DATTrpResynchronizationNotSuccess,cTOSSeqInvalidRule,cTOSSeqInvalidRule}, 
#ifdef COMPILATION_NATIVE
    }
#endif
  };
#endif

#ifdef DAT_TRP
  const tTOSSeqGraphType DATTrpTfcDiag =
  {
#ifdef COMPILATION_NATIVE
    "DATTrpTfcDiag",
    {
#endif
  /*   0*/  {TOSSeqEvalVrai,DATTrpSendStartAuth,cTOSSeqInvalidRule,mTOSSeqRuleNumber(1)},
  /*   1*/  {DATTrpTfcResponceOK,DATTrpTfcDiagSuccess,mTOSSeqRuleNumber(2),cTOSSeqInvalidRule},
  /*   2*/  {DATTrpAnswerReceivedNOKOrTimeOut,DATTrpTfcDiagNotSuccess,cTOSSeqInvalidRule,cTOSSeqInvalidRule}, 
#ifdef COMPILATION_NATIVE
    }
#endif
  };
#endif
 

//------------------------------------------------------------------------------
//                      End of generation
//------------------------------------------------------------------------------
