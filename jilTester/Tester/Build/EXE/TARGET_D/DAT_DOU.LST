###############################################################################
#                                                                             #
# IAR C/C++ Compiler V4.61A/W32 for 78K0 and 78K0S      15/Feb/2011  13:29:07 #
# Copyright 1992-2008 IAR Systems AB.                                         #
#                                                                             #
#    Core         =  78k0                                                     #
#    Code model   =  Standard                                                 #
#                 =                                                           #
#    Source file  =  D:\X90_BCM\DEVELOPMENT\X90_BCM\K0\L7\BUILD\SOURCES\DAT\D #
#                    AT_DOU.C                                                 #
#    Command line =  --code_model standard --core 78k0 -e                     #
#                    -DMEM_TYPE=__banked -DMEM_FAST=__saddr                   #
#                    -DCALLT_TYPE=__callt -DX90_PROJECT                       #
#                    --generate_callt_runtime_library_calls -r -Ohs           #
#                    "-IC:\Program Files\IAR Systems\Embedded Workbench       #
#                    5.0\78k\inc" "-IC:\Program Files\IAR Systems\Embedded    #
#                    Workbench 5.0\78k\inc\clib" -I. -I..\EXE\GEN\            #
#                    -I..\SOURCES\DAT -I..\SOURCES\LAP -I..\SOURCES\LDB_API   #
#                    -I..\SOURCES\LIB -I..\SOURCES\TOS -I.\LDB -DEMUL         #
#                    -DDEBUG -DUSE_LIBSTK -DDONT_KEEP_OLD_TYPE_COMPATIBILITY  #
#                    -l ..\EXE\TARGET_D\DAT_DOU.LST -o                        #
#                    ..\EXE\TARGET_D\DAT_DOU.R26                              #
#                    D:\X90_BCM\DEVELOPMENT\X90_BCM\K0\L7\BUILD\SOURCES\DAT\D #
#                    AT_DOU.C                                                 #
#    List file    =  ..\EXE\TARGET_D\DAT_DOU.LST                              #
#    Object file  =  ..\EXE\TARGET_D\DAT_DOU.R26                              #
#                                                                             #
#                                                                             #
###############################################################################

D:\X90_BCM\DEVELOPMENT\X90_BCM\K0\L7\BUILD\SOURCES\DAT\DAT_DOU.C
      1          /****************************************************************************
      2            Project ......................... STANDARD
      3            Component ....................... dat_Dou
      4            File revision.................... 
      5            Last modification date .......... 
      6            -------------------------------------------------------------------------
      7            Copyright ... This software is JCI property. Duplication or
      8                          disclosure is prohibited without JCI written permission
      9            ------------------------------------------------------------------------- 
     10          
     11            - Macros, constants et types which are not exported are defined in 
     12              this file
     13            - Variables and functions which are not exported are defined in this 
     14              file with the static keyword
     15            
     16            -------------------------------------------------------------------------
     17            Comments about the component (role, algorithm, structure, limitations,
     18                     defined tasks and events...)
     19            - Role :
     20            
     21            -------------------------------------------------------------------------
     22            dat_sor.c file review : 
     23          
     24             See PVCS Base
     25          
     26          *****************************************************************************/
     27          
     28          /*--------------------------------------------------------------------------
     29            Body Identification
     30            --------------------------------------------------------------------------*/
     31          #define dat_Dou  "dat_Dou"
     32          
     33          /*--------------------------------------------------------------------------
     34            Included files
     35          
     36            #include <system_file_name.h>
     37            #include "project_file_name.h"
     38            --------------------------------------------------------------------------*/
     39          #include "lib.h"
     40          #include "tos.h"
     41          
     42          #include "dat_Dou.h"
     43          
     44          /*--------------------------------------------------------------------------
     45            Local constants
     46          
     47            #define cConstantName   ((tType) ConstantValue)
     48            --------------------------------------------------------------------------*/
     49          
     50          /*--------------------------------------------------------------------------
     51            Local macros
     52          
     53            #define mMacroName   (MacroDefinition)
     54            --------------------------------------------------------------------------*/
     55          
     56          /*--------------------------------------------------------------------------
     57            Local types
     58          
     59            struct  sStructureName { ... };
     60            union   uUnionName { ... };
     61            enum    eEnumerationName { ... };
     62            typedef Expression tTypeName;
     63            --------------------------------------------------------------------------*/
     64          
     65          #define    cSleepState              (tDATDouState)0
     66          #define    cWakeUpState             (tDATDouState)1
     67          
     68          /*--------------------------------------------------------------------------
     69            Local data
     70          
     71            static  tType   VariableName;
     72            static  tType*  pVariableName; 
     73            --------------------------------------------------------------------------*/

   \                                 In  segment NEAR_Z, align 2, align-sorted
     74          static tTOSAlarm  PeriodicAlarm;
   \                     PeriodicAlarm:
   \   0000                  DS 4
   \   0004                  REQUIRE __INIT_NEAR_Z
     75          

   \                                 In  segment NEAR_Z, align 1, align-sorted
     76          static tDATDouState     Status;
   \                     Status:
   \   0000                  DS 1
   \   0001                  REQUIRE __INIT_NEAR_Z

   \                                 In  segment NEAR_Z, align 2, align-sorted
     77          static tMsg       OutputMsg;
   \                     OutputMsg:
   \   0000                  DS 4
   \   0004                  REQUIRE __INIT_NEAR_Z
     78          
     79          /*--------------------------------------------------------------------------
     80            Constant local Data
     81          
     82            static const tType  VariableName;
     83            --------------------------------------------------------------------------*/
     84          
     85          /*--------------------------------------------------------------------------
     86            Exported data
     87          
     88            tType   CMPVariableName;      (CMP: 3 characters to identify this component)
     89            tType*  pCMPVariableName;     (CMP: 3 characters to identify this component)
     90            --------------------------------------------------------------------------*/

   \                                 In  segment NEAR_Z, align 1, align-sorted
     91          U8 DATDouOutputBuffer[cDATDouOutputBufferSizeInBytes];
   \                     DATDouOutputBuffer:
   \   0000                  DS 4
   \   0004                  REQUIRE __INIT_NEAR_Z
     92          
     93          /*--------------------------------------------------------------------------
     94            Constant exported data
     95           
     96            const tType   CMPVariableName;(CMP: 3 characters to identify this component)
     97            --------------------------------------------------------------------------*/
     98          
     99          /*--------------------------------------------------------------------------
    100            Local function prototypes
    101            
    102            static tTypeRetour FunctionName(tTypeArgument1 ArgumentName1, ... );
    103            --------------------------------------------------------------------------*/
    104          
    105          /****************************************************************************
    106          *...........................................................................*
    107          *............................ LOCAL FUNCTIONS ..............................*
    108          *...........................................................................*
    109          ****************************************************************************/
    110          
    111          /****************************************************************************
    112          *...........................................................................*
    113          *........................... EXPORTED FUNCTIONS.............................*
    114          *...........................................................................*
    115          ****************************************************************************/
    116          /*============================================================================
    117            DESCRIPTION : Initialise DAT_SOR component
    118            
    119            PARAMETERS (Type,Name,Min,Max) :  none
    120          
    121            RETURN VALUE :  none
    122           
    123            DESIGN INFORMATION :  refer to Detailed Design Document
    124          ============================================================================*/

   \                                 In  segment CODE, align 1, keep-with-next
    125          void DATDouInit(const U8*pBuffer)
   \                     DATDouInit:
    126          {
   \   0000                  ; * Stack frame (at entry) *
   \   0000                  ; Param size: 0
   \   0000   B3             PUSH      BC
   \   0001   B5             PUSH      DE
   \   0002                  ; Total Auto size: 0
    127              mLIBmemcpy(DATDouOutputBuffer, pBuffer, cDATDouOutputBufferSizeInBytes);
   \   0002   D4             MOVW      DE,AX
   \   0003   16....         MOVW      HL,#DATDouOutputBuffer
   \   0006   A304           MOV       B,#4
   \                     ??DATDouInit_0:
   \   0008   85             MOV       A,[DE]
   \   0009   97             MOV       [HL],A
   \   000A   86             INCW      HL
   \   000B   84             INCW      DE
   \   000C   8BFA           DBNZ      B, ??DATDouInit_0
    128              OutputMsg.pBuffer = DATDouOutputBuffer;
   \   000E   10....         MOVW      AX,#DATDouOutputBuffer
   \   0011   03....         MOVW      OutputMsg,AX
    129              OutputMsg.Lng    = cDATDouOutputBufferSizeInBytes;
   \   0014   100400         MOVW      AX,#4
   \   0017   03....         MOVW      OutputMsg+2,AX
    130          
    131              Status      = cSleepState;
   \   001A   9E....         MOV       Status,A
    132              if(Status){} //to avoid a warning in release mode
    133          }
   \   001D   B4             POP       DE
   \   001E   B2             POP       BC
   \   001F   AF             RET       
   \   0020                  REQUIRE ?CL78K_V4_6_L00
    134          
    135          /*============================================================================
    136            DESCRIPTION : Write the lgical output buffer
    137            
    138            PARAMETERS (Type,Name,Min,Max) :  none
    139          
    140            RETURN VALUE :  none
    141           
    142            DESIGN INFORMATION :  refer to Detailed Design Document
    143          ============================================================================*/

   \                                 In  segment CODE, align 1, keep-with-next
    144          void DATDouRefreshOutputTask(void)
   \                     DATDouRefreshOutputTask:
    145          {
   \   0000                  ; * Stack frame (at entry) *
   \   0000                  ; Param size: 0
   \   0000   B5             PUSH      DE
   \   0001                  ; Total Auto size: 0
    146              DATPouPrepareRefresh();
   \   0001   16....         MOVW      HL,#LWRD(DATPouPrepareRefresh)
   \   0004   A4..           MOV       E,#BYTE3(DATPouPrepareRefresh)
   \   0006   ..             CALLT     [__T_?FAR_CALL_L07]
    147              LDBSendWithoutAddr(cLDBChannelDou,&OutputMsg);
   \   0007   10....         MOVW      AX,#OutputMsg
   \   000A   9A....         CALL      LDBDouSendWithoutAddr
    148          }
   \   000D   B4             POP       DE
   \   000E   AF             RET       
   \   000F                  REQUIRE ?CL78K_V4_6_L00
    149          
    150          /*============================================================================
    151            DESCRIPTION : This function is the call back called from 
    152                          the LDB after writing logical output
    153            
    154            PARAMETERS (Type,Name,Min,Max) :  none
    155          
    156            RETURN VALUE :  none
    157           
    158            DESIGN INFORMATION :  refer to Detailed Design Document
    159          ============================================================================*/

   \                                 In  segment CODE, align 1, keep-with-next
    160          void DATDouCallBackTxWithoutAddr(tStatus Statut)
   \                     DATDouCallBackTxWithoutAddr:
    161          {
   \   0000                  ; * Stack frame (at entry) *
   \   0000                  ; Param size: 0
   \   0000                  ; Total Auto size: 0
    162              mLIBassert(Statut == cLDBCorrect);
   \   0000   4D00           CMP       A,#0
   \   0002   AD03           BZ        ??DATDouCallBackEndCtrl_0
   \   0004   9A....         CALL      LIBAssertionFailed
    163              Statut = Statut;  // pour eviter un warning a la compilation sur cible
    164          }
   \                     ??DATDouCallBackEndCtrl_0:
   \   0007   AF             RET       
   \   0008                  REQUIRE ?CL78K_V4_6_L00
    165          
    166          
    167          /*============================================================================
    168            DESCRIPTION : 
    169            
    170            PARAMETERS (Type,Name,Min,Max) :  none
    171          
    172            RETURN VALUE :  none
    173           
    174            DESIGN INFORMATION :  refer to Detailed Design Document
    175          ============================================================================*/

   \                                 In  segment CODE, align 1, keep-with-next
    176          void DATDouEnterNominalMode(void)
   \                     DATDouEnterNominalMode:
    177          {
   \   0000                  ; * Stack frame (at entry) *
   \   0000                  ; Param size: 0
   \   0000   B3             PUSH      BC
   \   0001   B5             PUSH      DE
   \   0002                  ; Total Auto size: 0
    178              mLIBassert(Status != cWakeUpState);
   \   0002   8E....         MOV       A,Status
   \   0005   51             DEC       A
   \   0006   BD03           BNZ       ??DATDouCallBackEndCtrl_1
   \   0008   9A....         CALL      LIBAssertionFailed
    179              Status = cWakeUpState;
   \                     ??DATDouCallBackEndCtrl_1:
   \   000B   A101           MOV       A,#1
   \   000D   9E....         MOV       Status,A
    180          
    181              PeriodicAlarm.TaskID = cTOSTaskID_WriteLogical;
   \   0010   101000         MOVW      AX,#16
   \   0013   03....         MOVW      PeriodicAlarm,AX
    182              TOSSetRelAlarm(&PeriodicAlarm, 0, mTOSConvMsEnTickAlarm(cDATDouWritingPeriodeValueMs));
   \   0016   10....         MOVW      AX,#PeriodicAlarm
   \   0019   A302           MOV       B,#2
   \   001B   9A....         CALL      TOSSetRelAlarm_Interne
    183              LDBControl(cLDBChannelDou,cLDBDouEnterNominalMode);
   \   001E   A101           MOV       A,#1
   \   0020   16....         MOVW      HL,#LWRD(LDBDouControl)
   \   0023   A4..           MOV       E,#BYTE3(LDBDouControl)
   \   0025   ..             CALLT     [__T_?FAR_CALL_L07]
    184          }
   \   0026   B4             POP       DE
   \   0027   B2             POP       BC
   \   0028   AF             RET       
   \   0029                  REQUIRE ?CL78K_V4_6_L00
    185          
    186          /*============================================================================
    187            DESCRIPTION : Start the output alarm
    188            
    189            PARAMETERS (Type,Name,Min,Max) :  none
    190          
    191            RETURN VALUE :  none
    192           
    193            DESIGN INFORMATION :  refer to Detailed Design Document
    194          ============================================================================*/

   \                                 In  segment CODE, align 1, keep-with-next
    195          void DATDouEnterSleepMode(void)
   \                     DATDouEnterSleepMode:
    196          {
   \   0000                  ; * Stack frame (at entry) *
   \   0000                  ; Param size: 0
   \   0000   B5             PUSH      DE
   \   0001                  ; Total Auto size: 0
    197              mLIBassert(Status == cWakeUpState);
   \   0001   8E....         MOV       A,Status
   \   0004   51             DEC       A
   \   0005   AD03           BZ        ??DATDouCallBackEndCtrl_2
   \   0007   9A....         CALL      LIBAssertionFailed
    198              TOSCancelAlarm(&PeriodicAlarm);
   \                     ??DATDouCallBackEndCtrl_2:
   \   000A   10....         MOVW      AX,#PeriodicAlarm
   \   000D   9A....         CALL      TOSCancelAlarm
    199          
    200          #ifdef DATDOU_UPDATE_OUTPUT_BEFORE_SLEEPING
    201              DATDouRefreshOutputTask();
   \   0010   16....         MOVW      HL,#LWRD(DATPouPrepareRefresh)
   \   0013   A4..           MOV       E,#BYTE3(DATPouPrepareRefresh)
   \   0015   ..             CALLT     [__T_?FAR_CALL_L07]
   \   0016   10....         MOVW      AX,#OutputMsg
   \   0019   9A....         CALL      LDBDouSendWithoutAddr
    202          #endif
    203              Status = cSleepState;
   \   001C   A100           MOV       A,#0
   \   001E   9E....         MOV       Status,A
    204              LDBControl(cLDBChannelDou,cLDBDouEnterSleepMode);
   \   0021   A102           MOV       A,#2
   \   0023   16....         MOVW      HL,#LWRD(LDBDouControl)
   \   0026   A4..           MOV       E,#BYTE3(LDBDouControl)
   \   0028   ..             CALLT     [__T_?FAR_CALL_L07]
    205          }
   \   0029   B4             POP       DE
   \   002A   AF             RET       
   \   002B                  REQUIRE ?CL78K_V4_6_L00
    206          
    207          /*============================================================================
    208            DESCRIPTION : Control callback
    209            
    210            PARAMETERS (Type,Name,Min,Max) :  none
    211          
    212            RETURN VALUE :  none
    213           
    214            DESIGN INFORMATION :  refer to Detailed Design Document
    215          ============================================================================*/

   \                                 In  segment CODE, align 1, keep-with-next
    216          void DATDouCallBackEndCtrl(tCtrl Ctrl, tStatus Statut)
   \                     DATDouCallBackEndCtrl:
    217          {
   \   0000                  ; * Stack frame (at entry) *
   \   0000                  ; Param size: 0
   \   0000                  ; Total Auto size: 0
    218              mLIBassert(Statut == cLDBCorrect);
   \   0000   63             MOV       A,B
   \   0001   4D00           CMP       A,#0
   \   0003   AD03           BZ        ??DATDouCallBackEndCtrl_3
   \   0005   9A....         CALL      LIBAssertionFailed
    219              Statut = Statut;  // pour eviter un warning a la compilation sur cible
    220              Ctrl = Ctrl;      // pour eviter un warning a la compilation sur cible
    221          }
   \                     ??DATDouCallBackEndCtrl_3:
   \   0008   AF             RET       
   \   0009                  REQUIRE ?CL78K_V4_6_L00

   \                                 In  segment CLTVEC, align 2
   \                     __T_?FAR_CALL_L07:
   \   0000   ....           DW       ?FAR_CALL_L07
    222          
    223          

   Segment part sizes:

     Function/Label              Bytes
     --------------              -----
     PeriodicAlarm                  4
     Status                         1
     OutputMsg                      4
     DATDouOutputBuffer             4
     DATDouInit                    32
     DATDouRefreshOutputTask       15
     DATDouCallBackTxWithoutAddr    8
     DATDouEnterNominalMode        41
     DATDouEnterSleepMode          43
     DATDouCallBackEndCtrl          9
     __T_?FAR_CALL_L07              2

 
   2 bytes in segment CLTVEC
 148 bytes in segment CODE
  13 bytes in segment NEAR_Z
 
 148 bytes of CODE memory (+ 2 bytes shared)
  13 bytes of DATA memory

Errors: none
Warnings: none
