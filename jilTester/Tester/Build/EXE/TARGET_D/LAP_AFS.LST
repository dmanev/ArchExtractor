###############################################################################
#                                                                             #
# IAR C/C++ Compiler V4.61A/W32 for 78K0 and 78K0S      15/Feb/2011  13:29:32 #
# Copyright 1992-2008 IAR Systems AB.                                         #
#                                                                             #
#    Core         =  78k0                                                     #
#    Code model   =  Standard                                                 #
#                 =                                                           #
#    Source file  =  D:\X90_BCM\DEVELOPMENT\X90_BCM\K0\L7\BUILD\SOURCES\LAP\L #
#                    AP_AFS.C                                                 #
#    Command line =  --code_model standard --core 78k0 -e                     #
#                    -DMEM_TYPE=__banked -DMEM_FAST=__saddr                   #
#                    -DCALLT_TYPE=__callt -DX90_PROJECT                       #
#                    --generate_callt_runtime_library_calls -r -Ohs           #
#                    "-IC:\Program Files\IAR Systems\Embedded Workbench       #
#                    5.0\78k\inc" "-IC:\Program Files\IAR Systems\Embedded    #
#                    Workbench 5.0\78k\inc\clib" -I. -I..\EXE\GEN\            #
#                    -I..\SOURCES\DAT -I..\SOURCES\LAP -I..\SOURCES\LDB_API   #
#                    -I..\SOURCES\LIB -I..\SOURCES\TOS -I.\LDB -DEMUL         #
#                    -DDEBUG -DUSE_LIBSTK -DDONT_KEEP_OLD_TYPE_COMPATIBILITY  #
#                    -l ..\EXE\TARGET_D\LAP_AFS.LST -o                        #
#                    ..\EXE\TARGET_D\LAP_AFS.R26                              #
#                    D:\X90_BCM\DEVELOPMENT\X90_BCM\K0\L7\BUILD\SOURCES\LAP\L #
#                    AP_AFS.C                                                 #
#    List file    =  ..\EXE\TARGET_D\LAP_AFS.LST                              #
#    Object file  =  ..\EXE\TARGET_D\LAP_AFS.R26                              #
#                                                                             #
#                                                                             #
###############################################################################

D:\X90_BCM\DEVELOPMENT\X90_BCM\K0\L7\BUILD\SOURCES\LAP\LAP_AFS.C
      1          #ifndef _QAC_
      2          //******************************************************************************
      3          // Company:      Johnson Controls Inc.
      4          // -----------------------------------------------------------------------------
      5          // Copyright:    This software is JCI property.
      6          //               Duplication or disclosure without JCI written authorization
      7          //               is prohibited.
      8          // -----------------------------------------------------------------------------
      9          // Project:      X90_BCM
     10          // Language:     ANSI-C
     11          // -----------------------------------------------------------------------------
     12          // Component:    LAP_AFS.C
     13          // -----------------------------------------------------------------------------
     14          // $Date:   Oct 12 2010 10:21:24  $
     15          // $Archive:   J:/_PVCSRoot/Renault/X90_BCM/SOFTWARE/PVCS/archives/DEVELOPMENT/X90_BCM/K0/L7/CMP/LAP/LAP_ASF/LAP_AFS.C-arc  $
     16          // $Revision:   1.65  $
     17          // -----------------------------------------------------------------------------
     18          // $Log::   J:/_PVCSRoot/Renault/X90_BCM/SOFTWARE/PVCS/archives/DEVELOPMENT/X90_BCM/K0/L7/CMP/LAP/LAP_ASF/LAP_AFS.C-arc  $
     19          // 
     20          //    Rev 1.65   Oct 12 2010 10:21:24   amanevd
     21          // Cm011994: It should be possible to accept erase afs code routine even if code_apv_dispo=0
     22          // 
     23          //    Rev 1.64   Oct 12 2010 10:14:54   amanevd
     24          // Cm011994: LAP_AFS.C reverted to rev. 1.60
     25          // 
     26          //    Rev 1.63   Jul 09 2010 14:12:50   adzhelp
     27          // Cm009623: NOP instructions removed
     28          // 
     29          //    Rev 1.62   Jun 30 2010 14:37:26   adzhelp
     30          // Cm009623: UNLOCK_DOORS added in '21 DD'
     31          // 
     32          //    Rev 1.61   Jun 29 2010 16:20:50   adzhelp
     33          // Cm009573: Unlock driver door activated together with unlock doors
     34          // 
     35          //    Rev 1.60   Jun 18 2010 08:45:58   adzhelp
     36          // Cm009329: Frequency for buzzer I/O Control changed from 4khz to 2.4khz
     37          // 
     38          //    Rev 1.59   Mar 25 2010 12:14:38   adzhelp
     39          // Cm007976: QAC Corrections - no binary change
     40          // 
     41          //    Rev 1.58   Mar 24 2010 17:38:00   adzhelp
     42          // Cm007976: NRC when no bootloader
     43          // 
     44          //    Rev 1.57   Mar 24 2010 09:45:36   adzhelp
     45          // Cm007976: $21$80 is filled from lastest application logzone except for version ID and serial number
     46          // 
     47          //    Rev 1.56   Mar 22 2010 13:27:02   amanevd
     48          // Cm007919: Diag value of VERLOGON modified
     49          // 
     50          //    Rev 1.55   Mar 08 2010 14:13:34   adzhelp
     51          // Cm007695: Clearing of faults by TOS control
     52          // 
     53          //    Rev 1.54   Feb 22 2010 13:58:26   amanevd
     54          // Cm007543: Calls to LIB_CFD functions are changed
     55          // 
     56          //    Rev 1.53   Feb 20 2010 14:54:28   amanevd
     57          // Cm007539: Virgin Key Test status request correction
     58          // 
     59          //    Rev 1.52   Feb 17 2010 11:49:02   adzhelp
     60          // Cm007126: Negative response for IOControl on the Horn output during Acitvate State
     61          // 
     62          //    Rev 1.51   Feb 17 2010 10:07:58   adzhelp
     63          // Cm007541: Byte #12 of $61$A2 set to 0 instead of APV checksum
     64          // 
     65          //    Rev 1.50   Feb 15 2010 16:08:30   adzhelp
     66          // Cm006878: VERLOG_ALGO is byte number #3, bit 0
     67          // 
     68          //    Rev 1.49   Feb 11 2010 17:27:12   amanevd
     69          // Cm006997: Implementation of recent prsFS_IMMO-675 and prsFS_IMMO-676
     70          // 
     71          //    Rev 1.48   Jan 29 2010 18:05:22   amanevd
     72          // Cm007116 & Cm007043: ValidateLearningInAfterSaleMode
     73          // control is sent always but negative responce '0x22' is returned in some circumstances
     74          // 
     75          //    Rev 1.47   Jan 29 2010 15:23:44   amanevd
     76          // Cm006878: In function LAPAfsTreatWriteDataByLocalIdentifierService
     77          // 8-th byte is included as 'nothing to do case'
     78          // 
     79          //    Rev 1.46   Jan 28 2010 10:56:58   adzhelp
     80          // Cm007172: Configuration BOOTLADER_IS_SUPPORTED updated
     81          // 
     82          //    Rev 1.45   Jan 26 2010 15:07:18   adzhelp
     83          // Cm007172: Request $21$80 gets ECU Reference from Log Zone
     84          // 
     85          //    Rev 1.44   Jan 21 2010 08:52:24   amanevd
     86          // Cm006997: prsFS_IMMO-675 and prsFS_IMMO-676 put back to initial condition
     87          // 
     88          //    Rev 1.43   Nov 23 2009 17:24:30   akodzhh
     89          // Cm006728: LAP_AFS: Update for QAC warnings removal and justification.
     90          // 
     91          //    Rev 1.42   Nov 13 2009 11:29:12   akodzhh
     92          // Cm005566: Component test - ccov justification comments added.
     93          // 
     94          //    Rev 1.41   Nov 04 2009 16:24:28   adzhelp
     95          // Cm005566: Implementation of HW Protection
     96          // 
     97          //    Rev 1.40   Oct 27 2009 15:31:40   adzhelp
     98          // Cm006382: Service SecurityAccess implemented
     99          // 
    100          //    Rev 1.39   Oct 27 2009 15:25:14   adzhelp
    101          // Cm005566: EEP_DefAckVerlog removed
    102          // 
    103          //    Rev 1.38   Oct 19 2009 16:04:48   amarinm1
    104          // Cm005858: Code review corrections for DAT_BUZ, only a macro name changed.
    105          // 
    106          //    Rev 1.37   Oct 08 2009 10:31:28   akodzhh
    107          // Cm006459: BCM Serial Number now defined in $21$80.
    108          // 
    109          //    Rev 1.36   Oct 06 2009 16:46:02   akodzhh
    110          // Cm005566: EEPROM stored faults renamed - update 21 94 and 14 FF.
    111          // 
    112          //    Rev 1.35   Oct 05 2009 14:21:46   amanevd
    113          // Cm006322: Impossible to exit Plant mode when IGN ON and not all keys learnt
    114          // 
    115          //    Rev 1.34   Oct 05 2009 13:20:20   akodzhh
    116          // Cm006299: DIAG : Start Permanent Authentication - set status 00h when successful.
    117          // 
    118          //    Rev 1.33   Sep 25 2009 10:32:56   akodzhh
    119          // Cm005557: Exit the BCM After Sale learning with Abandon param - check for Ignition is removed.
    120          // 
    121          //    Rev 1.32   Sep 23 2009 13:29:34   akodzhh
    122          // Cm005225: IO control of HORN_RL output is inhibited while cycle alarm is activated.
    123          // 
    124          //    Rev 1.31   Sep 23 2009 12:20:08   adzhelp
    125          // Cm003277: Implementation of read log zone request (ID F0...FF)
    126          // 
    127          //    Rev 1.30   Sep 21 2009 14:55:50   akodzhh
    128          // Cm005581: 21 DD updated - add RR_WIPER_RR_FOG_LAMP, HORN_RL, DEFROSTER outputs state.
    129          // 
    130          //    Rev 1.29   Sep 21 2009 11:04:46   akodzhh
    131          // Cm005207: Add SDO, KEY_BUTTON config params (21 D0, 3B D0).
    132          // 
    133          //    Rev 1.28   Sep 18 2009 16:47:34   akodzhh
    134          // Cm006292: Accept 3B D0 for CALVERDI parameter - add check.
    135          // 
    136          //    Rev 1.27   Sep 18 2009 16:20:52   akodzhh
    137          // Cm006292: Accept 3B D0 for CALVERDI parameter.
    138          // 
    139          //    Rev 1.26   Sep 15 2009 18:36:32   akodzhh
    140          // Cm005064: 21 DB - set reserved data bytes 12,13 to 0xFF.
    141          // 
    142          //    Rev 1.25   Sep 15 2009 13:41:14   akodzhh
    143          // Cm005127: Use logical state ENGINE_RPM(running or not)instead of input state DI_ENGINE_RPM(request 21DC).
    144          // 
    145          //    Rev 1.24   03 Sep 2009 16:34:40   akodzhh
    146          // Cm005525: Update "protected state" in $21$DB whit VERLOGON flag instead of EEP_CAR_SECURE.
    147          // 
    148          //    Rev 1.23   Sep 02 2009 11:55:20   akodzhh
    149          // Cm004994: BAT_LIGHT_TEMPO activation on PWM_ROOMLAMP IOControl request is removed.
    150          // 
    151          //    Rev 1.22   Sep 01 2009 14:05:10   amanevd
    152          // Cm005142: Status of Confidential Diagnostic routines included
    153          // 
    154          //    Rev 1.21   Aug 31 2009 15:59:42   amanevd
    155          // Cm005142: Transfer of Confidential Diagnostic to LIB_CFD
    156          // 
    157          //    Rev 1.20   Aug 07 2009 18:09:48   amanevd
    158          // Cm005142: Implementation of Confidential Diagnostic
    159          // 
    160          //    Rev 1.19   03 Aug 2009 12:12:30   akodzhh
    161          // Cm004744: Write RR_Wiper\RR_Fog config parameters in mutual exclusion - $3B$D0.
    162          // 
    163          //    Rev 1.18   03 Aug 2009 10:33:56   akodzhh
    164          // Cm005567: Routine TestVirginKey is started only if IGN is On.
    165          // 
    166          //    Rev 1.17   Jul 31 2009 17:14:14   akodzhh
    167          // Cm005725: SRBLI Status request - check is added for supported RoutineID.
    168          // 
    169          //    Rev 1.16   Jul 31 2009 15:44:50   akodzhh
    170          // Cm005750: write EEP_CALALARM param only when EEP_CAR_SECURE is Off.
    171          // 
    172          //    Rev 1.15   17 Jul 2009 11:31:04   akodzhh
    173          // Cm005756: IOBLID timeout adjusted, code review 1.5 issues fixed.
    174          // 
    175          //    Rev 1.14   Jul 17 2009 10:53:00   amanevd
    176          // Cm004914: AFS code is either erased on Routine request or after Ignition counting reaches N_MISE_APC
    177          // 
    178          //    Rev 1.13   Jul 15 2009 10:06:24   adzhelp
    179          // Cm005586: DATTrpDiagKeyFrequency used instead of DATTrpFrequencyOfPresentKey
    180          // 
    181          //    Rev 1.12   Jul 10 2009 11:03:56   akodzhh
    182          // Cm005586: IMMO: No update of "Frequency of presented key" in $21$DB Diagnostic request.
    183          // 
    184          //    Rev 1.11   06 Jul 2009 16:21:48   akodzhh
    185          // Cm005168: Wrong content of the 3th,11th byte of the BCM System Faults Status reading frame.
    186          // 
    187          //    Rev 1.10   May 07 2009 21:05:56   akodzhh
    188          // Cm004970: IMMO/DIAG: Stop routine for permanent authentication wont work.
    189          // 
    190          //    Rev 1.9   07 May 2009 15:23:40   akodzhh
    191          // Cm004930: Response Routine in progress instead TerminatedOk for Start Permanent Authentication request.
    192          // 
    193          //    Rev 1.8   May 04 2009 17:46:04   akodzhh
    194          // Cm003128: PWM_ROOMLAMP output state reading; $21 $DB - use EEP_CAR_SECURE for protected vehicle param (RELAIS_DEM).
    195          // 
    196          //    Rev 1.7   May 04 2009 17:18:20   akodzhh
    197          // Cm004909: In $21 $DB diag request, ETAT_VEH_CONDA_DECONDA not managed.
    198          // 
    199          //    Rev 1.6   May 04 2009 15:59:08   akodzhh
    200          // Cm004897: The permanent authentication ($31 $A6) routine must be managed in Diag AFS session ($C0) and not in Diag DEV Session ($A0).
    201          // 
    202          //    Rev 1.5   Apr 29 2009 13:57:14   adzhelp
    203          // Cm003128: MEM_TYPE attribute added to service and static functions
    204          //
    205          //    Rev 1.4   16 Apr 2009 17:33:18   akodzhh
    206          // Cm003128: Analogic values CLR #78. OPEN_DOOR_LED/Alarm output shared - ensure diag control. 
    207          // Due to Eeprom mapping changes. Erase AFS code treatment.
    208          // 
    209          //    Rev 1.3   Mar 30 2009 16:51:24   akodzhh
    210          // Cm003128: Write Calibr Params($3B$D1)- removed range checks for the values written; TPS_COM_MOTEUR step fixed; Read DI_ENGINE_RPM (replace ENGINE_RPM).
    211          // 
    212          //    Rev 1.2   20 Mar 2009 18:07:56   akodzhh
    213          // Cm003128 - fixes for some data names and $3B$D1 frame
    214          // 
    215          //    Rev 1.1   Mar 13 2009 18:47:04   akodzhh
    216          // Cm003128 - Implementation of the Diagnostic functionality - LAP_AFS -  macros for control SerialIO update, little fixes.
    217          // 
    218          //    Rev 1.0   Feb 18 2009 14:49:26   akodzhh
    219          // Initial revision.
    220          //******************************************************************************
    221          #endif
    222          
    223          //------------------------------------------------------------------------------
    224          // Body Identification
    225          //------------------------------------------------------------------------------
    226          #define lap_afs   "lap_afs"
    227          
    228          //------------------------------------------------------------------------------
    229          // Included files to resolve specific definitions in this file
    230          //------------------------------------------------------------------------------
    231          
    232          #include "lib.h"
    233          #include "lib_cfd.h"
    234          #include "tos.h"
    235          #include "dat.h"
    236          #include "lap_kwp.h"
    237          #include "lap_kwpp.h"
    238          #include "lap_afs.h"
    239          #include "lap_afsp.h"
    240          #include "lap_afs.hgr"

   \                                 In  segment CONST, align 2
   \   tTOSSeqRuleType const __near LAPAfsIOControlByLocalID[2]
   \                     LAPAfsIOControlByLocalID:
   \   0000   ........       DW TOSSeqTrueEval, StartActivationTimeOut
   \   0004   FF01           DB 255, 1
   \   0006   ........       DW IOCBLIDTimeOutIsElapsed, FreeActuator
   \   000A   FFFF           DB 255, 255
    241          
    242          #ifdef BOOTLOADER_IS_SUPPORTED
    243              #include "LIB_BOO.h"
    244          #endif
    245          
    246          //------------------------------------------------------------------------------
    247          // Local constants
    248          //------------------------------------------------------------------------------
    249          #define cRoomLampDiagRatio  (U8)100
    250          #define cDiagBuzzFrequency  (U16)2400U     // 2.4kHZ
    251          
    252          // common constants
    253          #define c8Bits  8
    254          #define c7Bits  7
    255          #define c6Bits  6
    256          #define c5Bits  5
    257          #define c4Bits  4
    258          #define c3Bits  3
    259          #define c2Bits  2
    260          #define c1Bits  1
    261          #define c16Bits  16
    262          #define c24Bits  24
    263          
    264          #define cLSBMask       (U8)0xFFU
    265          
    266          #define cByte0  0
    267          #define cByte1  1
    268          #define cByte2  2
    269          #define cByte3  3
    270          #define cByte4  4
    271          
    272          // Eeprom data
    273          #define cEEP_ECUReferenceLength     5
    274          #define cEEP_PieNumberLength        5
    275          #define cEEP_PieIndexLength         2
    276          #define cEEP_SerialNumberLength     3
    277          
    278          #define cEEP_SerialNumberIndex      23
    279          #define cVersionIndex               16
    280          #define cIdentLastLogZone           ((U8)0xFEU)
    281          
    282          #define cCLRDIOptionByte  (U8)0xFF
    283          #define cVIN_Lgth           19
    284          #define cDataOffset       (U8)2
    285          
    286          #define cSupplierCode1  (U8)0x30U
    287          #define cSupplierCode2  (U8)0x32U
    288          #define cSupplierCode3  (U8)0x31U
    289          
    290          #define cReservedValue  (U8)0xFFU
    291          
    292          #define cMaskIndexOfKeyRecognized   (U8)0x0FU 
    293          #define cMaskLearningModeInProgress (U8)0x07U
    294          #define cMaskDiagKeyFrequency       (U8)0x07U
    295          #define cMaskFlashingFrequency      (U8)0x03U  
    296          
    297          #define cByteOutputStateBuzzer  7
    298          #define cByteSTATUS_CLIGN       7
    299          #define cByteTENSION_BATTERIE   14
    300          #define cByte18                 18
    301          
    302          
    303          //------------------------------------------------------------------------------
    304          // Local macros
    305          //------------------------------------------------------------------------------
    306          #define mInitAfsTabIdentifierServiceSupported()   \
    307          {                                                 \
    308              cLAPKwpIdReadDataByLocalIdentifier,                \
    309              cLAPKwpIdWriteDataByLocalIdentifier,               \
    310              cLAPKwpIdInputOutputControlByLocalIdentifier,      \
    311              cAPVIdLearningModeControl,                      \
    312              cLAPKwpIdStartRoutineByLocalIdentifier,            \
    313              cLAPKwpIdStopRoutineByLocalIdentifier,             \
    314              cLAPKwpIdClearDiagnosticInformation,               \
    315              cLAPKwpIdSecurityAccess                            \
    316          }
    317          
    318          #define mInitAfsTabServiceSupported()                 \
    319          {                                                     \
    320              LAPAfsTreatReadDataByLocalIdentifierService,           \
    321              LAPAfsTreatWriteDataByLocalIdentifierService,          \
    322              LAPAfsTreatInputOutputControlByLocalIdentifierService, \
    323              LAPAfsTreatLearningModeControlService,                 \
    324              LAPAfsTreatStartRoutineByLocalIdentifierService,       \
    325              LAPAfsTreatStopRoutineByLocalIdentifierService,        \
    326              LAPAfsTreatClearDiagnosticInformation,                 \
    327              LAPAfsTreatSecurityAccessService                       \
    328          }
    329          
    330          #define mIsECU_LOG_ID(ID)   ((U8)((ID)&(U8)0xF0)==(U8)0xF0)
    331          
    332          //------------------------------------------------------------------------------
    333          // Local types
    334          //------------------------------------------------------------------------------
    335          
    336          //------------------------------------------------------------------------------
    337          // Local data
    338          //------------------------------------------------------------------------------

   \                                 In  segment NEAR_Z, align 1, align-sorted
    339          static U8     u8RoutineRequestInProgress;
   \                     u8RoutineRequestInProgress:
   \   0000                  DS 1
   \   0001                  REQUIRE __INIT_NEAR_Z

   \                                 In  segment NEAR_Z, align 1, align-sorted
    340          static U8     u8OutputRequestInProgress;
   \                     u8OutputRequestInProgress:
   \   0000                  DS 1
   \   0001                  REQUIRE __INIT_NEAR_Z

   \                                 In  segment NEAR_Z, align 2, align-sorted
    341          static tTOSTempo  OutputControlTimeOut;
   \                     OutputControlTimeOut:
   \   0000                  DS 2
   \   0002                  REQUIRE __INIT_NEAR_Z

   \                                 In  segment NEAR_Z, align 2, align-sorted
    342          static tTOSTempo  OutputControlTimeOutValue;
   \                     OutputControlTimeOutValue:
   \   0000                  DS 2
   \   0002                  REQUIRE __INIT_NEAR_Z
    343          
    344          
    345          //------------------------------------------------------------------------------
    346          // Constant local data
    347          //------------------------------------------------------------------------------

   \                                 In  segment CONST, align 1
    348          static const U8 TableIOCBLIDIdentifier[cNbOutputToControl]=
   \                     TableIOCBLIDIdentifier:
   \   0000   80818283       DB 128, 129, 130, 131, 132, 135, 137, 138, 139, 140, 142, 147, 158, 143
   \          8487898A
   \          8B8C8E93
   \          9E8F    
   \   000E   90859D         DB 144, 133, 157
    349          {
    350              // TOR output
    351              cOutputLockDoors,    
    352              cOutputUnlockDoors,  
    353              cOutputUnlockDrDoor, 
    354              cOutputDiRight,      
    355              cOutputDiLeft,       
    356              cOutputFrWiper,      
    357              cOutputRrWiper,      
    358              cOutputBatLightTempo,
    359              cOutputDoorlockLed,  
    360              cOutputVerlogLed,    
    361              cOutputDefrosterRl,  
    362              cOutputHornRl,
    363              cOutputRrFogLamp,    
    364              // Serial port
    365              cOutputDataImmobilzer,
    366              cOutputVerlog,        
    367              // PWM
    368              cOutputPwmRoomLamp,
    369              cOutputBuzzer
    370          };
    371              

   \                                 In  segment CONST, align 2
    372          static const U16 TableTorIndex[cNbTorToControl]=
   \                     TableTorIndex:
   \   0000   03000301       DW 3, 259, 771, 1795, 1539, 1027, 1283, 515, 768, 512, 257, 514, 1283
   \          03030307
   \          03060304
   \          03050302
   \          00030002
   \          01010202
   \          0305    
    373          {    
    374              // TOR output
    375              ((U16)cDATPouLOCK_DOORSByteIndex           | (U16)((U16)cDATPouLOCK_DOORSBitIndex           << c8BitsShift)),
    376              ((U16)cDATPouUNLOCK_DOORSByteIndex         | (U16)((U16)cDATPouUNLOCK_DOORSBitIndex         << c8BitsShift)),
    377              ((U16)cDATPouUNLOCK_DRIVER_DOORByteIndex   | (U16)((U16)cDATPouUNLOCK_DRIVER_DOORBitIndex   << c8BitsShift)),
    378              ((U16)cDATPouDI_RIGHTByteIndex             | (U16)((U16)cDATPouDI_RIGHTBitIndex             << c8BitsShift)),
    379              ((U16)cDATPouDI_LEFTByteIndex              | (U16)((U16)cDATPouDI_LEFTBitIndex              << c8BitsShift)),
    380              ((U16)cDATPouFRONT_WIPERByteIndex          | (U16)((U16)cDATPouFRONT_WIPERBitIndex          << c8BitsShift)),
    381              ((U16)cDATPouRR_WIPER_RR_FOG_LAMPByteIndex | (U16)((U16)cDATPouRR_WIPER_RR_FOG_LAMPBitIndex << c8BitsShift)),
    382              ((U16)cDATPouBAT_LIGHT_TEMPOByteIndex      | (U16)((U16)cDATPouBAT_LIGHT_TEMPOBitIndex      << c8BitsShift)),
    383              ((U16)cDATPouOPEN_DOOR_LEDByteIndex        | (U16)((U16)cDATPouOPEN_DOOR_LEDBitIndex        << c8BitsShift)),
    384              ((U16)cDATPouVERLOG_LEDByteIndex           | (U16)((U16)cDATPouVERLOG_LEDBitIndex           << c8BitsShift)),
    385              ((U16)cDATPouDEFROSTERByteIndex            | (U16)((U16)cDATPouDEFROSTERBitIndex            << c8BitsShift)),
    386              ((U16)cDATPouHORN_RLByteIndex              | (U16)((U16)cDATPouHORN_RLBitIndex              << c8BitsShift)),
    387              ((U16)cDATPouRR_WIPER_RR_FOG_LAMPByteIndex | (U16)((U16)cDATPouRR_WIPER_RR_FOG_LAMPBitIndex << c8BitsShift)) 
    388          };
    389          
    390          #define cPAlaStateActivated     (U8)2   // prsFS_ASA-450
    391          
    392          //------------------------------------------------------------------------------
    393          // Exported data
    394          //------------------------------------------------------------------------------
    395          
    396          //------------------------------------------------------------------------------
    397          // Constant exported data
    398          //------------------------------------------------------------------------------
    399          //QACJ 3211: akodzhh: Identifier is exported and used in LAP_KWP to init AFS session

   \                                 In  segment CONST, align 1
    400          const U8 TabIdentifierServiceSupportedInAfsSession[cNbServicesSupportedInAFS] =
   \                     TabIdentifierServiceSupportedInAfsSession:
   \   0000   213B3080       DB 33, 59, 48, 128, 49, 50, 20, 39
   \          31321427
    401                    mInitAfsTabIdentifierServiceSupported();
    402          //QACJ 3211: akodzhh: Identifier is exported and used in LAP_KWP to init AFS session

   \                                 In  segment CONST, align 2
    403          const tLAPKwpServiceFunction TabServiceSupportedInAfsSession[cNbServicesSupportedInAFS] =
   \                     TabServiceSupportedInAfsSession:
   \   0000   ........       DD LAPAfsTreatReadDataByLocalIdentifierService
   \   0004   ........       DD LAPAfsTreatWriteDataByLocalIdentifierService
   \   0008   ........       DD LAPAfsTreatInputOutputControlByLocalIdentifierService
   \   000C   ........       DD LAPAfsTreatLearningModeControlService
   \   0010   ........       DD LAPAfsTreatStartRoutineByLocalIdentifierService
   \   0014   ........       DD LAPAfsTreatStopRoutineByLocalIdentifierService
   \   0018   ........       DD LAPAfsTreatClearDiagnosticInformation
   \   001C   ........       DD LAPAfsTreatSecurityAccessService
    404                    mInitAfsTabServiceSupported();
    405          
    406          //------------------------------------------------------------------------------
    407          // Local function prototypes
    408          //------------------------------------------------------------------------------
    409          static MEM_TYPE BOOL IsFragileOutput      (const U8 u8OutputRequestP);
    410          static MEM_TYPE BOOL IsCpeOutput          (const U8 u8OutputRequestP);
    411          static MEM_TYPE U8   WriteOuputByDiag     (const U8 u8OutputIndexP, const U8 u8ControlTypeP);
    412          static MEM_TYPE U8   DeactiveOutputControl(const U8 u8OutputIndexP);
    413          static MEM_TYPE U8   ReadIOCBILStatus     (const U8 u8OutputIndexP);
    414          
    415          #ifdef BOOTLOADER_IS_SUPPORTED
    416          static MEM_TYPE U8   ReadECU_LOG(U8* const pu8RespLengthP);
    417          #endif
    418          
    419          #ifdef X90_PROJECT
    420          static MEM_TYPE void FreeActuator_Static(void);
    421          #endif
    422          
    423          //==============================================================================
    424          //=========================== LOCAL FUNCTIONS ==================================
    425          //==============================================================================
    426          
    427          //==============================================================================
    428          // DESCRIPTION:         IsFragileOutput
    429          //
    430          // PARAMETERS:          U8
    431          //
    432          // RETURN VALUE:        BOOL
    433          //
    434          // DESIGN INFORMATION:  refer to Detailed Design Document
    435          //==============================================================================
    436          static MEM_TYPE BOOL IsFragileOutput(const U8 u8OutputRequestP)
    437          {
    438              return((TableIOCBLIDIdentifier[u8OutputRequestP] == cOutputLockDoors   )||
    439                     (TableIOCBLIDIdentifier[u8OutputRequestP] == cOutputUnlockDoors )||
    440                     (TableIOCBLIDIdentifier[u8OutputRequestP] == cOutputUnlockDrDoor)||
    441                     (TableIOCBLIDIdentifier[u8OutputRequestP] == cOutputDiRight     )||
    442                     (TableIOCBLIDIdentifier[u8OutputRequestP] == cOutputDiLeft      ));
    443                     
    444          }
    445          
    446          //==============================================================================
    447          // DESCRIPTION:         IsCpeOutput
    448          //
    449          // PARAMETERS:          U8
    450          //
    451          // RETURN VALUE:        BOOL
    452          //
    453          // DESIGN INFORMATION:  refer to Detailed Design Document
    454          //==============================================================================
    455          static MEM_TYPE BOOL IsCpeOutput(const U8 u8OutputRequestP)
    456          {
    457              return((TableIOCBLIDIdentifier[u8OutputRequestP] == cOutputLockDoors   )||
    458                     (TableIOCBLIDIdentifier[u8OutputRequestP] == cOutputUnlockDoors )||
    459                     (TableIOCBLIDIdentifier[u8OutputRequestP] == cOutputUnlockDrDoor));
    460                     
    461          }
    462          
    463          //==============================================================================
    464          // DESCRIPTION:         WriteOuputByDiag
    465          //
    466          // PARAMETERS:          U8  u8OutputIndexP
    467          //                      U8  u8ControlTypeP
    468          //
    469          // RETURN VALUE:        U8
    470          //
    471          // DESIGN INFORMATION:  refer to Detailed Design Document
    472          //==============================================================================

   \                                 In  segment BCODE, align 1, keep-with-next
    473          static MEM_TYPE U8 WriteOuputByDiag( const U8 u8OutputIndexP, const U8 u8ControlTypeP)
   \                     WriteOuputByDiag:
    474          {
   \   0000                  ; * Stack frame (at entry) *
   \   0000                  ; Param size: 0
   \   0000   B3             PUSH      BC
   \   0001                  ; Total Auto size: 4
   \   0001   B7             PUSH      HL
   \   0002   B7             PUSH      HL
   \   0003   72             MOV       C,A
    475              U8   u8RequestStatusL;
    476              BOOL bIsFragileOutput;
    477          
    478              u8RequestStatusL = cLAPKwpServiceIsCorrect;
   \   0004   891C           MOVW      AX,SP
   \   0006   D6             MOVW      HL,AX
   \   0007   A100           MOV       A,#0
   \   0009   97             MOV       [HL],A
    479          
    480              if(u8OutputIndexP <cNbTorToControl)
   \   000A   62             MOV       A,C
   \   000B   4D0D           CMP       A,#13
   \   000D   8D03           BC        $+5
   \   000F   9B....         BR        N:??LAPAfsTreatSecurityAccessService_0
    481              { //TOR output
    482                  bIsFragileOutput = IsFragileOutput(u8OutputIndexP);
   \   0012   70             MOV       X,A
   \   0013   A100           MOV       A,#0
   \   0015   D6             MOVW      HL,AX
   \   0016   891C           MOVW      AX,SP
   \   0018   E6             XCHW      AX,HL
   \   0019   BE03           MOV       [HL+0x03],A
   \   001B   60             MOV       A,X
   \   001C   BE02           MOV       [HL+0x02],A
   \   001E   AE03           MOV       A,[HL+0x03]
   \   0020   CA....         ADDW      AX,#TableIOCBLIDIdentifier
   \   0023   D6             MOVW      HL,AX
   \   0024   87             MOV       A,[HL]
   \   0025   4D80           CMP       A,#128
   \   0027   AD10           BZ        ??LAPAfsTreatSecurityAccessService_1
   \   0029   4D81           CMP       A,#129
   \   002B   AD0C           BZ        ??LAPAfsTreatSecurityAccessService_1
   \   002D   4D82           CMP       A,#130
   \   002F   AD08           BZ        ??LAPAfsTreatSecurityAccessService_1
   \   0031   4D83           CMP       A,#131
   \   0033   AD04           BZ        ??LAPAfsTreatSecurityAccessService_1
   \   0035   4D84           CMP       A,#132
   \   0037   BD0D           BNZ       ??LAPAfsTreatSecurityAccessService_2
   \                     ??LAPAfsTreatSecurityAccessService_1:
   \   0039   63             MOV       A,B
   \   003A   41             INC       A
   \   003B   BD09           BNZ       ??LAPAfsTreatSecurityAccessService_2
    483                  if((bIsFragileOutput == cTrue) &&
    484                     (u8ControlTypeP == cIOCBLID_PermanentActivationParam))
    485                  {
    486                      u8RequestStatusL = cLAPKwpInvalidFormat;
   \   003D   891C           MOVW      AX,SP
   \   003F   D6             MOVW      HL,AX
   \   0040   A112           MOV       A,#18
   \                     ??WriteOuputByDiag_0:
   \   0042   97             MOV       [HL],A
   \   0043   9B....         BR        N:??LAPAfsTreatSecurityAccessService_3
    487                  }
    488                  else
    489                  {   // output shared with Alarm - stop Alarm
    490                      if(   (u8OutputIndexP == cDoorlockLedIndex)
    491                          &&(mDATRead(U1Bit,IsAlaDiagEnabled, Default ) == cFalse) )
   \                     ??LAPAfsTreatSecurityAccessService_2:
   \   0046   62             MOV       A,C
   \   0047   4D08           CMP       A,#8
   \   0049   BD76           BNZ       ??LAPAfsTreatSecurityAccessService_4
   \   004B   8E....         MOV       A,bIsAlaDiagEnabled
   \   004E   4D00           CMP       A,#0
   \   0050   BD03           BNZ       ??LAPAfsTreatSecurityAccessService_5
    492                      {            
    493                          TOSSendControl(cTOSControlAlaDiagEnable);
   \   0052   A11B           MOV       A,#27
   \   0054   ..             CALLT     [__T_TOSSendControl]
    494                      }
    495                      
    496                      if(   (u8OutputIndexP == cHornRlIndex)
    497                          &&(mDATRead(U8Bit,EEP_PerimeterAlarmState, Default ) == cPAlaStateActivated) )
    498                      {
    499                          // prsFS_ASA-452 IO control of horn is inhibited 
    500                          u8RequestStatusL = cLAPKwpConditionNotCorrect;
    501                      }
    502                      else
    503                      {
    504                          mDATWriteTable(U1Bit,DATPouDiagBuffer,TableTorIndex[u8OutputIndexP],1,Default);
   \                     ??LAPAfsTreatSecurityAccessService_5:
   \   0055   891C           MOVW      AX,SP
   \   0057   D6             MOVW      HL,AX
   \   0058   AE02           MOV       A,[HL+0x02]
   \   005A   70             MOV       X,A
   \   005B   AE03           MOV       A,[HL+0x03]
   \   005D   21             CLR1      CY
   \   005E   30             XCH       A,X
   \   005F   27             ROLC      A,0x1
   \   0060   30             XCH       A,X
   \   0061   27             ROLC      A,0x1
   \   0062   CA....         ADDW      AX,#TableTorIndex
   \   0065   D6             MOVW      HL,AX
   \   0066   87             MOV       A,[HL]
   \   0067   70             MOV       X,A
   \   0068   AE01           MOV       A,[HL+0x01]
   \   006A   75             MOV       D,A
   \   006B   60             MOV       A,X
   \   006C   35             XCH       A,D
   \   006D   72             MOV       C,A
   \   006E   65             MOV       A,D
   \   006F   74             MOV       E,A
   \   0070   100100         MOVW      AX,#1
   \   0073   75             MOV       D,A
   \   0074   ..             CALLT     [__T_?I_LSH_L02]
   \   0075   60             MOV       A,X
   \   0076   73             MOV       B,A
   \   0077   100100         MOVW      AX,#1
   \   007A   ..             CALLT     [__T_?I_LSH_L02]
   \   007B   60             MOV       A,X
   \   007C   7DFF           XOR       A,#255
   \   007E   72             MOV       C,A
   \   007F   C4             MOVW      AX,DE
   \   0080   CA....         ADDW      AX,#S:DATPouDiagBuffer
   \   0083   D6             MOVW      HL,AX
   \   0084   87             MOV       A,[HL]
   \   0085   615A           AND       A,C
   \   0087   616B           OR        A,B
   \   0089   97             MOV       [HL],A
    505                          mDATWriteTable(U1Bit,DATPouDiagMaskBuffer,TableTorIndex[u8OutputIndexP],1,Default);
   \   008A   891C           MOVW      AX,SP
   \   008C   D6             MOVW      HL,AX
   \   008D   AE02           MOV       A,[HL+0x02]
   \   008F   70             MOV       X,A
   \   0090   AE03           MOV       A,[HL+0x03]
   \   0092   21             CLR1      CY
   \   0093   30             XCH       A,X
   \   0094   27             ROLC      A,0x1
   \   0095   30             XCH       A,X
   \   0096   27             ROLC      A,0x1
   \   0097   CA....         ADDW      AX,#TableTorIndex
   \   009A   D6             MOVW      HL,AX
   \   009B   87             MOV       A,[HL]
   \   009C   70             MOV       X,A
   \   009D   AE01           MOV       A,[HL+0x01]
   \   009F   D6             MOVW      HL,AX
   \   00A0   891C           MOVW      AX,SP
   \   00A2   80             INCW      AX
   \   00A3   E6             XCHW      AX,HL
   \   00A4   72             MOV       C,A
   \   00A5   60             MOV       A,X
   \   00A6   97             MOV       [HL],A
   \   00A7   100100         MOVW      AX,#1
   \   00AA   ..             CALLT     [__T_?I_LSH_L02]
   \   00AB   60             MOV       A,X
   \   00AC   73             MOV       B,A
   \   00AD   100100         MOVW      AX,#1
   \   00B0   ..             CALLT     [__T_?I_LSH_L02]
   \   00B1   60             MOV       A,X
   \   00B2   7DFF           XOR       A,#255
   \   00B4   72             MOV       C,A
   \   00B5   C4             MOVW      AX,DE
   \   00B6   CA....         ADDW      AX,#S:DATPouDiagMaskBuffer
   \   00B9   D6             MOVW      HL,AX
   \   00BA   87             MOV       A,[HL]
   \   00BB   615A           AND       A,C
   \   00BD   616B           OR        A,B
   \   00BF   FA81           BR        ??WriteOuputByDiag_0
    506                      }
   \                     ??LAPAfsTreatSecurityAccessService_4:
   \   00C1   4D0B           CMP       A,#11
   \   00C3   BD90           BNZ       ??LAPAfsTreatSecurityAccessService_5
   \   00C5   8E....         MOV       A,DATDbkMirrors+66
   \   00C8   4D02           CMP       A,#2
   \   00CA   BD89           BNZ       ??LAPAfsTreatSecurityAccessService_5
   \   00CC   891C           MOVW      AX,SP
   \   00CE   D6             MOVW      HL,AX
   \   00CF   A122           MOV       A,#34
   \   00D1   9B....         BR        N:??WriteOuputByDiag_0
    507                      
    508                  }
    509              }
    510              else if(u8OutputIndexP <(cNbTorToControl+cNbSerialLineToControl))
   \                     ??LAPAfsTreatSecurityAccessService_0:
   \   00D4   4D0F           CMP       A,#15
   \   00D6   9D35           BNC       ??LAPAfsTreatSecurityAccessService_6
    511              {// Serial Line Output
    512                  
    513                  if( u8OutputIndexP == cNbTorToControl)
   \   00D8   4D0D           CMP       A,#13
   \   00DA   A101           MOV       A,#1
   \   00DC   BD1A           BNZ       ??LAPAfsTreatSecurityAccessService_7
    514                  {
    515                      mDATWrite(U1Bit,DO_DATA_IMMOBILIZERDiagEnabled, cTrue, Default);
   \   00DE   9E....         MOV       bDO_DATA_IMMOBILIZERDiagEnabled,A
   \   00E1   A10C           MOV       A,#12
   \   00E3   ..             CALLT     [__T_DATTrpControl]
    516                      mDATWrite(U1Bit,DO_DATA_IMMOBILIZERDiag   ,1,Default);
   \   00E4   8E....         MOV       A,bDO_DATA_IMMOBILIZERDiagEnabled
   \   00E7   4D00           CMP       A,#0
   \   00E9   BD03           BNZ       ??LAPAfsTreatSecurityAccessService_8
   \   00EB   9A....         CALL      LIBAssertionFailed
   \                     ??LAPAfsTreatSecurityAccessService_8:
   \   00EE   A103           MOV       A,#3
   \                     ??WriteOuputByDiag_1:
   \   00F0   16....         MOVW      HL,#LWRD(LDBDouControl)
   \   00F3   A4..           MOV       E,#BYTE3(LDBDouControl)
   \   00F5   ..             CALLT     [__T_?FAR_CALL_L07]
   \   00F6   FA41           BR        ??LAPAfsTreatSecurityAccessService_3
    517                  }
    518                  else
    519                  {
    520                      mDATWrite(U1Bit,DO_VERLOGDiagEnabled, cTrue, Default);
   \                     ??LAPAfsTreatSecurityAccessService_7:
   \   00F8   9E....         MOV       bDO_VERLOGDiagEnabled,A
    521                      mDATWrite(U1Bit,DO_VERLOGDiag        ,1,Default);
   \   00FB   9E....         MOV       bDO_VERLOG,A
   \   00FE   8E....         MOV       A,bDO_VERLOGProtected
   \   0101   4D00           CMP       A,#0
   \   0103   BD04           BNZ       ??LAPAfsTreatSecurityAccessService_9
   \   0105   A105           MOV       A,#5
   \   0107   FAE7           BR        ??WriteOuputByDiag_1
   \                     ??LAPAfsTreatSecurityAccessService_9:
   \   0109   A106           MOV       A,#6
   \   010B   FAE3           BR        ??WriteOuputByDiag_1
    522                  }
    523                  
    524              }
    525              else if(u8OutputIndexP < cNbOutputToControl)
   \                     ??LAPAfsTreatSecurityAccessService_6:
   \   010D   4D11           CMP       A,#17
   \   010F   9D25           BNC       ??LAPAfsTreatSecurityAccessService_10
    526              {
    527                  if(u8OutputIndexP == (cNbTorToControl+cNbSerialLineToControl))
   \   0111   4D0F           CMP       A,#15
   \   0113   BD19           BNZ       ??LAPAfsTreatSecurityAccessService_11
    528                  {   //PWM output declard is the room lamp
    529                      mDATWrite(U1Bit,PWM_ROOMLAMPDiagMask, 1, Default); 
   \   0115   16....         MOVW      HL,#u8DATPwmDiagMask
   \   0118   7182           SET1      [HL].0
    530                      mDATWrite(U8Bit,PWM_ROOMLAMPDiagRatio, cRoomLampDiagRatio, Default);
   \   011A   A064           MOV       X,#100
   \   011C   60             MOV       A,X
   \   011D   74             MOV       E,A
   \   011E   02....         MOVW      AX,DATPwmHardBuffer
   \   0121   D2             MOVW      BC,AX
   \   0122   64             MOV       A,E
   \   0123   70             MOV       X,A
   \   0124   A100           MOV       A,#0
   \   0126   16....         MOVW      HL,#LWRD(DATPwmWriteDiagOutput)
   \   0129   A4..           MOV       E,#BYTE3(DATPwmWriteDiagOutput)
   \   012B   ..             CALLT     [__T_?FAR_CALL_L07]
   \   012C   FA0B           BR        ??LAPAfsTreatSecurityAccessService_3
    531                  }
    532                  else
    533                  {   
    534                      mDATWrite(U16Bit,DATBuzDiagBuzz, cDiagBuzzFrequency, Default);
   \                     ??LAPAfsTreatSecurityAccessService_11:
   \   012E   106009         MOVW      AX,#2400
   \   0131   9A....         CALL      DATBuzDiagBuzzStart
   \   0134   FA03           BR        ??LAPAfsTreatSecurityAccessService_3
    535                  }
    536              }
    537              //CCOV: akodzhh: can't be covered, no other outputs
    538              else
    539              {   // no other outputs
    540                  mLIBassert(cFalse);
   \                     ??LAPAfsTreatSecurityAccessService_10:
   \   0136   9A....         CALL      LIBAssertionFailed
    541              }
    542              return(u8RequestStatusL);
   \                     ??LAPAfsTreatSecurityAccessService_3:
   \   0139   891C           MOVW      AX,SP
   \   013B   D6             MOVW      HL,AX
   \   013C   87             MOV       A,[HL]
   \   013D   B2             POP       BC
   \   013E   B2             POP       BC
   \   013F   B2             POP       BC
   \   0140   AF             RET       
   \   0141                  REQUIRE ?CL78K_V4_6_L00
    543          }
    544          
    545          //==============================================================================
    546          // DESCRIPTION:         DeactiveOutputControl
    547          //
    548          // PARAMETERS:          U8  u8OutputIndexP
    549          //
    550          // RETURN VALUE:        U8  u8RequestStatusL
    551          //
    552          // DESIGN INFORMATION:  refer to Detailed Design Document
    553          //==============================================================================
    554          //QACJ 3208: akodzhh: Return value is intentionally ignored in two cases

   \                                 In  segment BCODE, align 1, keep-with-next
    555          static MEM_TYPE U8 DeactiveOutputControl(const U8 u8OutputIndexP)
   \                     DeactiveOutputControl:
    556          {
   \   0000                  ; * Stack frame (at entry) *
   \   0000                  ; Param size: 0
   \   0000   B3             PUSH      BC
   \   0001   B1             PUSH      AX
   \   0002                  ; Total Auto size: 6
   \   0002   A105           MOV       A,#5
   \   0004   B7             PUSH      HL
   \   0005   B7             PUSH      HL
    557              const U8 u8RequestStatusL = cLAPKwpServiceIsCorrect;
    558              tTOSSeqGraphStateType IOControlGraphState;
    559          
    560              IOControlGraphState = TOSSeqGraphState(cTOSSeqLAPAfsIOControlByLocalID);
    561          
    562              if( IOControlGraphState == cTOSSeqActiveGraph)
   \   0006   ..             CALLT     [__T_TOSSeqGraphState]
   \   0007   51             DEC       A
   \   0008   BD03           BNZ       ??LAPAfsTreatSecurityAccessService_12
    563              {
    564                  TOSSeqDeactivateGraph(cTOSSeqLAPAfsIOControlByLocalID);
   \   000A   A105           MOV       A,#5
   \   000C   ..             CALLT     [__T_TOSSeqDeactivateGraph]
    565              }
    566          
    567              if(u8OutputIndexP < cNbTorToControl)
   \                     ??LAPAfsTreatSecurityAccessService_12:
   \   000D   891C           MOVW      AX,SP
   \   000F   D6             MOVW      HL,AX
   \   0010   AE05           MOV       A,[HL+0x05]
   \   0012   4D0D           CMP       A,#13
   \   0014   8D03           BC        $+5
   \   0016   9B....         BR        N:??LAPAfsTreatSecurityAccessService_13
    568              { //TOR output
    569          
    570                  if(mDATReadTable(U1Bit,DATPouDiagBuffer,TableTorIndex[u8OutputIndexP],Default) == 1)
   \   0019   A002           MOV       X,#2
   \   001B   3188           MULU      X
   \   001D   CA....         ADDW      AX,#TableTorIndex
   \   0020   D6             MOVW      HL,AX
   \   0021   87             MOV       A,[HL]
   \   0022   70             MOV       X,A
   \   0023   AE01           MOV       A,[HL+0x01]
   \   0025   B6             POP       HL
   \   0026   B1             PUSH      AX
   \   0027   891C           MOVW      AX,SP
   \   0029   D6             MOVW      HL,AX
   \   002A   87             MOV       A,[HL]
   \   002B   74             MOV       E,A
   \   002C   A500           MOV       D,#0
   \   002E   AE01           MOV       A,[HL+0x01]
   \   0030   72             MOV       C,A
   \   0031   C4             MOVW      AX,DE
   \   0032   CA....         ADDW      AX,#S:DATPouDiagBuffer
   \   0035   D6             MOVW      HL,AX
   \   0036   87             MOV       A,[HL]
   \   0037   70             MOV       X,A
   \   0038   A100           MOV       A,#0
   \   003A   9A....         CALL      ?SI_RSH_L02
   \   003D   60             MOV       A,X
   \   003E   310F64         BF        A.0, ??LAPAfsTreatSecurityAccessService_14
    571                  {
    572                      mDATWriteTable(U1Bit,DATPouDiagBuffer,TableTorIndex[u8OutputIndexP],0,Default);
   \   0041   891C           MOVW      AX,SP
   \   0043   D6             MOVW      HL,AX
   \   0044   87             MOV       A,[HL]
   \   0045   70             MOV       X,A
   \   0046   AE01           MOV       A,[HL+0x01]
   \   0048   D6             MOVW      HL,AX
   \   0049   891C           MOVW      AX,SP
   \   004B   80             INCW      AX
   \   004C   80             INCW      AX
   \   004D   E6             XCHW      AX,HL
   \   004E   72             MOV       C,A
   \   004F   60             MOV       A,X
   \   0050   97             MOV       [HL],A
   \   0051   100000         MOVW      AX,#0
   \   0054   ..             CALLT     [__T_?I_LSH_L02]
   \   0055   60             MOV       A,X
   \   0056   73             MOV       B,A
   \   0057   100100         MOVW      AX,#1
   \   005A   ..             CALLT     [__T_?I_LSH_L02]
   \   005B   60             MOV       A,X
   \   005C   7DFF           XOR       A,#255
   \   005E   72             MOV       C,A
   \   005F   C4             MOVW      AX,DE
   \   0060   CA....         ADDW      AX,#S:DATPouDiagBuffer
   \   0063   D6             MOVW      HL,AX
   \   0064   87             MOV       A,[HL]
   \   0065   615A           AND       A,C
   \   0067   616B           OR        A,B
   \   0069   97             MOV       [HL],A
    573                      mDATWriteTable(U1Bit,DATPouDiagMaskBuffer,TableTorIndex[u8OutputIndexP],0,Default);
   \   006A   891C           MOVW      AX,SP
   \   006C   D6             MOVW      HL,AX
   \   006D   87             MOV       A,[HL]
   \   006E   70             MOV       X,A
   \   006F   AE01           MOV       A,[HL+0x01]
   \   0071   D6             MOVW      HL,AX
   \   0072   891C           MOVW      AX,SP
   \   0074   80             INCW      AX
   \   0075   80             INCW      AX
   \   0076   E6             XCHW      AX,HL
   \   0077   72             MOV       C,A
   \   0078   60             MOV       A,X
   \   0079   97             MOV       [HL],A
   \   007A   100000         MOVW      AX,#0
   \   007D   ..             CALLT     [__T_?I_LSH_L02]
   \   007E   60             MOV       A,X
   \   007F   73             MOV       B,A
   \   0080   100100         MOVW      AX,#1
   \   0083   ..             CALLT     [__T_?I_LSH_L02]
   \   0084   60             MOV       A,X
   \   0085   7DFF           XOR       A,#255
   \   0087   72             MOV       C,A
   \   0088   C4             MOVW      AX,DE
   \   0089   CA....         ADDW      AX,#S:DATPouDiagMaskBuffer
   \   008C   D6             MOVW      HL,AX
   \   008D   87             MOV       A,[HL]
   \   008E   615A           AND       A,C
   \   0090   616B           OR        A,B
   \   0092   97             MOV       [HL],A
    574          
    575                      if(  (u8OutputIndexP == cDoorlockLedIndex)
    576                         &&(mDATRead(U1Bit,IsAlaDiagEnabled, Default ) == cTrue) )
   \   0093   891C           MOVW      AX,SP
   \   0095   D6             MOVW      HL,AX
   \   0096   AE05           MOV       A,[HL+0x05]
   \   0098   4D08           CMP       A,#8
   \   009A   BD09           BNZ       ??LAPAfsTreatSecurityAccessService_14
   \   009C   8E....         MOV       A,bIsAlaDiagEnabled
   \   009F   51             DEC       A
   \   00A0   BD03           BNZ       ??LAPAfsTreatSecurityAccessService_14
    577                      {            
    578                          TOSSendControl(cTOSControlAlaDiagDisable);
   \   00A2   A11C           MOV       A,#28
   \   00A4   ..             CALLT     [__T_TOSSendControl]
    579                      }
    580                  }
    581          
    582                  u8OutputRequestInProgress = cNoOutputControl;
   \                     ??LAPAfsTreatSecurityAccessService_14:
   \   00A5   A1FF           MOV       A,#255
   \   00A7   9E....         MOV       u8OutputRequestInProgress,A
    583                  LAPKwpSetServiceIsFinished();
   \   00AA   A103           MOV       A,#3
   \   00AC   9E....         MOV       u8LAPKwpRequestStatus,A
   \   00AF   FA63           BR        ??LAPAfsTreatSecurityAccessService_15
    584              }
    585              else if(u8OutputIndexP <(cNbTorToControl+cNbSerialLineToControl))
   \                     ??LAPAfsTreatSecurityAccessService_13:
   \   00B1   4D0F           CMP       A,#15
   \   00B3   9D36           BNC       ??LAPAfsTreatSecurityAccessService_16
    586              {// Serial Line Output
    587          
    588                  if( u8OutputIndexP == cNbTorToControl)
   \   00B5   4D0D           CMP       A,#13
   \   00B7   BD18           BNZ       ??LAPAfsTreatSecurityAccessService_17
    589                  {
    590                      if(mDATRead(U1Bit, DO_DATA_IMMOBILIZERDiagEnabled, Default) == cTrue)
   \   00B9   8E....         MOV       A,bDO_DATA_IMMOBILIZERDiagEnabled
   \   00BC   51             DEC       A
   \   00BD   BDE6           BNZ       ??LAPAfsTreatSecurityAccessService_14
    591                      {
    592                          mDATWrite(U1Bit,DO_DATA_IMMOBILIZERDiag, 0, Default);
   \   00BF   A104           MOV       A,#4
   \   00C1   16....         MOVW      HL,#LWRD(LDBDouControl)
   \   00C4   A4..           MOV       E,#BYTE3(LDBDouControl)
   \   00C6   ..             CALLT     [__T_?FAR_CALL_L07]
    593                          mDATWrite(U1Bit,DO_DATA_IMMOBILIZERDiagEnabled, cFalse, Default);
   \   00C7   A100           MOV       A,#0
   \   00C9   9E....         MOV       bDO_DATA_IMMOBILIZERDiagEnabled,A
   \   00CC   A10D           MOV       A,#13
   \   00CE   ..             CALLT     [__T_DATTrpControl]
   \   00CF   FAD4           BR        ??LAPAfsTreatSecurityAccessService_14
    594                      }
    595                     
    596                  }
    597                  else
    598                  {
    599                      if(mDATRead(U1Bit, DO_VERLOGDiagEnabled,Default) == cTrue)
   \                     ??LAPAfsTreatSecurityAccessService_17:
   \   00D1   8E....         MOV       A,bDO_VERLOGDiagEnabled
   \   00D4   51             DEC       A
   \   00D5   BDCE           BNZ       ??LAPAfsTreatSecurityAccessService_14
    600                      {
    601                          mDATWrite(U1Bit,DO_VERLOGDiag, 0, Default);
   \   00D7   A100           MOV       A,#0
   \   00D9   9E....         MOV       bDO_VERLOG,A
   \   00DC   A106           MOV       A,#6
   \   00DE   16....         MOVW      HL,#LWRD(LDBDouControl)
   \   00E1   A4..           MOV       E,#BYTE3(LDBDouControl)
   \   00E3   ..             CALLT     [__T_?FAR_CALL_L07]
    602                          mDATWrite(U1Bit,DO_VERLOGDiagEnabled, cFalse, Default);
   \   00E4   A100           MOV       A,#0
   \   00E6   9E....         MOV       bDO_VERLOGDiagEnabled,A
   \   00E9   FABA           BR        ??LAPAfsTreatSecurityAccessService_14
    603                      }
    604                  }
    605          
    606                  u8OutputRequestInProgress = cNoOutputControl;
    607                  LAPKwpSetServiceIsFinished();
    608          
    609              }
    610              else if(u8OutputIndexP < cNbOutputToControl)
   \                     ??LAPAfsTreatSecurityAccessService_16:
   \   00EB   4D11           CMP       A,#17
   \   00ED   9D22           BNC       ??LAPAfsTreatSecurityAccessService_18
    611              { 
    612                  if(u8OutputIndexP == (cNbTorToControl+cNbSerialLineToControl))
   \   00EF   4D0F           CMP       A,#15
   \   00F1   BD19           BNZ       ??LAPAfsTreatSecurityAccessService_19
    613                  {//PWM output
    614                      mDATWrite(U1Bit,PWM_ROOMLAMPDiagMask, 0, Default); 
   \   00F3   16....         MOVW      HL,#u8DATPwmDiagMask
   \   00F6   7183           CLR1      [HL].0
   \   00F8   8E....         MOV       A,DATPwmSoftBuffer+2
   \   00FB   74             MOV       E,A
   \   00FC   02....         MOVW      AX,DATPwmSoftBuffer
   \   00FF   D2             MOVW      BC,AX
   \   0100   64             MOV       A,E
   \   0101   70             MOV       X,A
   \   0102   A100           MOV       A,#0
   \   0104   16....         MOVW      HL,#LWRD(DATPwmWriteOutput)
   \   0107   A4..           MOV       E,#BYTE3(DATPwmWriteOutput)
   \   0109   ..             CALLT     [__T_?FAR_CALL_L07]
   \   010A   FA99           BR        ??LAPAfsTreatSecurityAccessService_14
    615                  }
    616                  else // Buzzer
    617                  {
    618                      mDATControl(DATBuzDiagBuzz, Stop);
   \                     ??LAPAfsTreatSecurityAccessService_19:
   \   010C   9A....         CALL      DATBuzDiagBuzzStop
   \   010F   FA94           BR        ??LAPAfsTreatSecurityAccessService_14
    619                  }
    620          
    621                  u8OutputRequestInProgress = cNoOutputControl;
    622                  LAPKwpSetServiceIsFinished();
    623              }
    624              //CCOV: akodzhh: can't be covered, no other outputs
    625              else
    626              {
    627                  mLIBassert(cFalse);
   \                     ??LAPAfsTreatSecurityAccessService_18:
   \   0111   9A....         CALL      LIBAssertionFailed
    628              }
    629              return(u8RequestStatusL);
   \                     ??LAPAfsTreatSecurityAccessService_15:
   \   0114   A100           MOV       A,#0
   \   0116   B2             POP       BC
   \   0117   B2             POP       BC
   \   0118   B2             POP       BC
   \   0119   B2             POP       BC
   \   011A   AF             RET       
   \   011B                  REQUIRE ?CL78K_V4_6_L00
    630          }
    631          
    632          //==============================================================================
    633          // DESCRIPTION:         ReadIOCBILStatus
    634          //
    635          // PARAMETERS:          U8  u8OutputIndexP
    636          //
    637          // RETURN VALUE:        U8
    638          //
    639          // DESIGN INFORMATION:  refer to Detailed Design Document
    640          //==============================================================================

   \                                 In  segment BCODE, align 1, keep-with-next
    641          static MEM_TYPE U8 ReadIOCBILStatus(const U8 u8OutputIndexP)
   \                     ReadIOCBILStatus:
    642          {
   \   0000                  ; * Stack frame (at entry) *
   \   0000                  ; Param size: 0
   \   0000   B3             PUSH      BC
   \   0001                  ; Total Auto size: 0
   \   0001   73             MOV       B,A
    643              U8    u8RequestStatusL;
    644              BOOL  bOutputIsActiveL;
    645          
    646              u8RequestStatusL = cIOCBLID_RoutineIsFinishedID;
   \   0002   A402           MOV       E,#2
    647          
    648              if(u8OutputIndexP <cNbTorToControl)
   \   0004   4D0D           CMP       A,#13
   \   0006   9D22           BNC       ??LAPAfsTreatSecurityAccessService_20
    649              { //TOR output
    650          
    651                  bOutputIsActiveL = mDATReadTable(U1Bit,DATPouDiagMaskBuffer,TableTorIndex[u8OutputIndexP],Default);
   \   0008   A002           MOV       X,#2
   \   000A   3188           MULU      X
   \   000C   CA....         ADDW      AX,#TableTorIndex
   \   000F   D6             MOVW      HL,AX
   \   0010   AE01           MOV       A,[HL+0x01]
   \   0012   72             MOV       C,A
   \   0013   87             MOV       A,[HL]
   \   0014   16....         MOVW      HL,#S:DATPouDiagMaskBuffer
   \   0017   73             MOV       B,A
   \   0018   AB             MOV       A,[HL+B]
   \   0019   70             MOV       X,A
   \   001A   A100           MOV       A,#0
   \   001C   9A....         CALL      ?SI_RSH_L02
   \   001F   60             MOV       A,X
   \                     ??ReadIOCBILStatus_0:
   \   0020   5D01           AND       A,#1
    652          
    653              }
    654              else if(u8OutputIndexP <(cNbTorToControl+cNbSerialLineToControl))
    655              {// Serial Line Output
    656                  
    657                  if( u8OutputIndexP == cNbTorToControl)
    658                  {
    659                      bOutputIsActiveL = mDATRead(U1Bit,DO_DATA_IMMOBILIZERDiagEnabled,Default);
    660                  }
    661                  else
    662                  {
    663                      bOutputIsActiveL = mDATRead(U1Bit,DO_VERLOGDiagEnabled,Default);
    664                  }
    665          
    666              }
    667              else if(u8OutputIndexP < cNbOutputToControl)
    668              { 
    669                  if(u8OutputIndexP == (cNbTorToControl+cNbSerialLineToControl))
    670                  {//PWM output
    671          
    672                      bOutputIsActiveL = mDATRead(U1Bit,PWM_ROOMLAMPDiagMask, Default);
    673                  }
    674                  else // Buzzer
    675                  {
    676                      bOutputIsActiveL = mDATRead(U1Bit,IsBuzzerSoundPlaying, Default);
    677                  }
    678                  
    679              }
    680              //CCOV: akodzhh: can't be covered, no other outputs
    681              else
    682              {
    683                  mLIBassert(cFalse);
    684                  bOutputIsActiveL = cFalse;
    685              }
    686          
    687              if(bOutputIsActiveL == cTrue)
   \                     ??ReadIOCBILStatus_1:
   \   0022   51             DEC       A
   \   0023   BD02           BNZ       ??LAPAfsTreatSecurityAccessService_21
    688              {
    689                  u8RequestStatusL = cIOCBLID_RoutineInProgressID;
   \   0025   A401           MOV       E,#1
    690              }
    691          
    692              return(u8RequestStatusL);
   \                     ??LAPAfsTreatSecurityAccessService_21:
   \   0027   64             MOV       A,E
   \   0028   B2             POP       BC
   \   0029   AF             RET       
   \                     ??LAPAfsTreatSecurityAccessService_20:
   \   002A   63             MOV       A,B
   \   002B   4D0F           CMP       A,#15
   \   002D   9D0E           BNC       ??LAPAfsTreatSecurityAccessService_22
   \   002F   4D0D           CMP       A,#13
   \   0031   BD05           BNZ       ??LAPAfsTreatSecurityAccessService_23
   \   0033   8E....         MOV       A,bDO_DATA_IMMOBILIZERDiagEnabled
   \   0036   FAEA           BR        ??ReadIOCBILStatus_1
   \                     ??LAPAfsTreatSecurityAccessService_23:
   \   0038   8E....         MOV       A,bDO_VERLOGDiagEnabled
   \   003B   FAE5           BR        ??ReadIOCBILStatus_1
   \                     ??LAPAfsTreatSecurityAccessService_22:
   \   003D   4D11           CMP       A,#17
   \   003F   9D0F           BNC       ??LAPAfsTreatSecurityAccessService_24
   \   0041   4D0F           CMP       A,#15
   \   0043   BD06           BNZ       ??LAPAfsTreatSecurityAccessService_25
   \   0045   16....         MOVW      HL,#u8DATPwmDiagMask
   \   0048   87             MOV       A,[HL]
   \   0049   FAD5           BR        ??ReadIOCBILStatus_0
   \                     ??LAPAfsTreatSecurityAccessService_25:
   \   004B   9A....         CALL      DATBuzIsSoundPlaying
   \   004E   FAD2           BR        ??ReadIOCBILStatus_1
   \                     ??LAPAfsTreatSecurityAccessService_24:
   \   0050   9A....         CALL      LIBAssertionFailed
   \   0053   FAD2           BR        ??LAPAfsTreatSecurityAccessService_21
   \   0055                  REQUIRE ?CL78K_V4_6_L00
    693          }
    694          
    695          #ifdef BOOTLOADER_IS_SUPPORTED
    696          //==============================================================================
    697          // DESCRIPTION:         ReadECU_LOG
    698          //
    699          // PARAMETERS:          U8* pu8RespLengthP
    700          //
    701          // RETURN VALUE:        U8 Request Status
    702          //
    703          // DESIGN INFORMATION:  refer to Detailed Design Document
    704          //==============================================================================

   \                                 In  segment BCODE, align 1, keep-with-next
    705          static MEM_TYPE U8 ReadECU_LOG(U8* const pu8RespLengthP)
   \                     ReadECU_LOG:
    706          {
   \   0000                  ; * Stack frame (at entry) *
   \   0000                  ; Param size: 0
   \   0000   B3             PUSH      BC
   \   0001   B1             PUSH      AX
   \   0002                  ; Total Auto size: 2
    707              U8 u8RequestStatusL;
    708              BOOL bResult;
    709              //QACJ 3672: akodzhh: Pointer value is correct
    710              tpRetreiveLogZoneRecord RetreiveLogZoneRecord;
    711          
    712              U8 u8LogZoneIdL;
    713          
    714              //QACJ 0506: akodzhh: Pointer value is correct
    715              *pu8RespLengthP = 0;
   \   0002   891C           MOVW      AX,SP
   \   0004   D6             MOVW      HL,AX
   \   0005   87             MOV       A,[HL]
   \   0006   70             MOV       X,A
   \   0007   AE01           MOV       A,[HL+0x01]
   \   0009   D6             MOVW      HL,AX
   \   000A   A100           MOV       A,#0
   \   000C   97             MOV       [HL],A
    716          
    717              //QACJ 0305: akodzhh: Cast is intentional and safety
    718              if ((BOOL)mLAPKwpCheckBootloaderPresent() != cFalse)
   \   000D   020C68         MOVW      AX,0x680C
   \   0010   EA6F42         CMPW      AX,#17007
   \   0013   BD22           BNZ       ??LAPAfsTreatSecurityAccessService_26
   \   0015   020E68         MOVW      AX,0x680E
   \   0018   EA746F         CMPW      AX,#28532
   \   001B   BD1A           BNZ       ??LAPAfsTreatSecurityAccessService_26
    719              {
    720                  RetreiveLogZoneRecord = 
    721                      ((tBootLinkTable*)cLIBBooBootLinkTableAddress)->pRetreiveLogZoneRecord;
    722          
    723                  u8LogZoneIdL = LAPKwpReadDiagnosticRequest(1);
   \   001D   8E....         MOV       A,DATKwpRxBuffer+4
    724                  
    725                  if (u8LogZoneIdL == cRDBLID_BCMIdentificationID)
   \   0020   4D80           CMP       A,#128
   \   0022   BD02           BNZ       ??LAPAfsTreatSecurityAccessService_27
    726                  {
    727                      // Request '21 80' shall return response to '21 FE'
    728                      u8LogZoneIdL = cIdentLastLogZone;
   \   0024   A1FE           MOV       A,#254
    729                  }
    730                  else
    731                  {
    732                      // request in range 0xF0 - 0xFF
    733                  }
    734          
    735                  // call bootloader function to read log zone
    736                  bResult = RetreiveLogZoneRecord(LAPKwpGetPtrDiagnosticResponse(cByte2), u8LogZoneIdL);
    737                  
    738                  if( bResult == cFalse )
   \                     ??LAPAfsTreatSecurityAccessService_27:
   \   0026   73             MOV       B,A
   \   0027   10....         MOVW      AX,#DATKwpTxBuffer+5
   \   002A   D4             MOVW      DE,AX
   \   002B   020268         MOVW      AX,0x6802
   \   002E   D6             MOVW      HL,AX
   \   002F   C4             MOVW      AX,DE
   \   0030   9A....         CALL      ?IND_CALL_L06
   \   0033   4D00           CMP       A,#0
   \   0035   BD04           BNZ       ??LAPAfsTreatSecurityAccessService_28
    739                  {
    740                      u8RequestStatusL = cLAPKwpInvalidFormat;
   \                     ??LAPAfsTreatSecurityAccessService_26:
   \   0037   A212           MOV       C,#18
   \   0039   FA0D           BR        ??LAPAfsTreatSecurityAccessService_29
    741                  }
    742                  else
    743                  {
    744                      u8RequestStatusL = cLAPKwpServiceIsCorrect;
   \                     ??LAPAfsTreatSecurityAccessService_28:
   \   003B   A200           MOV       C,#0
    745                      *pu8RespLengthP  = cRDBLIDAns_ECU_LOG_Lgth;
   \   003D   891C           MOVW      AX,SP
   \   003F   D6             MOVW      HL,AX
   \   0040   87             MOV       A,[HL]
   \   0041   70             MOV       X,A
   \   0042   AE01           MOV       A,[HL+0x01]
   \   0044   D6             MOVW      HL,AX
   \   0045   A11A           MOV       A,#26
   \   0047   97             MOV       [HL],A
    746                  }
    747                  
    748              }
    749              else // bootloader not present
    750              {
    751                  u8RequestStatusL = cLAPKwpInvalidFormat;
    752              }
    753              return u8RequestStatusL;
   \                     ??LAPAfsTreatSecurityAccessService_29:
   \   0048   62             MOV       A,C
   \   0049   B2             POP       BC
   \   004A   B2             POP       BC
   \   004B   AF             RET       
   \   004C                  REQUIRE ?CL78K_V4_6_L00
    754          }
    755          #endif //BOOTLOADER_IS_SUPPORTED
    756          
    757          //==============================================================================
    758          //=========================== EXPORTED FUNCTIONS ===============================
    759          //==============================================================================
    760          //==============================================================================
    761          // DESCRIPTION:         LAPAfsTreatClearDiagnosticInformation
    762          //
    763          // PARAMETERS:          none
    764          //
    765          // RETURN VALUE:        none
    766          //
    767          // DESIGN INFORMATION:  refer to Detailed Design Document
    768          //==============================================================================

   \                                 In  segment BCODE, align 1, keep-with-next
    769          MEM_TYPE void LAPAfsTreatClearDiagnosticInformation(void)
   \                     LAPAfsTreatClearDiagnosticInformation:
    770          {
   \   0000                  ; * Stack frame (at entry) *
   \   0000                  ; Param size: 0
   \   0000                  ; Total Auto size: 0
    771              
    772              if( (mDATRead(U8Bit,DATKwpRxFrameLgth,Default) == cCLRDIReq_Lght) &&
    773                  (LAPKwpReadDiagnosticRequest(1) == cCLRDIOptionByte) &&
    774                  (LAPKwpReadDiagnosticRequest(cByte2) == 0x00)  )
   \   0000   8E....         MOV       A,DATKwpRxFrameLgth
   \   0003   4D03           CMP       A,#3
   \   0005   BD25           BNZ       ??LAPAfsTreatSecurityAccessService_30
   \   0007   8E....         MOV       A,DATKwpRxBuffer+4
   \   000A   4DFF           CMP       A,#255
   \   000C   BD1E           BNZ       ??LAPAfsTreatSecurityAccessService_30
   \   000E   8E....         MOV       A,DATKwpRxBuffer+5
   \   0011   4D00           CMP       A,#0
   \   0013   BD17           BNZ       ??LAPAfsTreatSecurityAccessService_30
    775              {
    776                  LAPAfsClearFaultFlagsAndCounters();
   \   0015   16....         MOVW      HL,#LWRD(LAPAfsClearFaultFlagsAndCounters_Static)
   \   0018   A4..           MOV       E,#BYTE3(LAPAfsClearFaultFlagsAndCounters_Static)
   \   001A   ..             CALLT     [__T_?FAR_FAST_CALL_L07]
    777          
    778                  // Prepare the BCM response
    779                  LAPKwpWriteDiagnosticResponse(1,cCLRDIOptionByte);
   \   001B   A1FF           MOV       A,#255
   \   001D   16....         MOVW      HL,#DATKwpTxBuffer+4
   \   0020   97             MOV       [HL],A
    780                  LAPKwpWriteDiagnosticResponse(cByte2,0x00);
   \   0021   A100           MOV       A,#0
   \   0023   86             INCW      HL
   \   0024   97             MOV       [HL],A
    781                  LAPKwpPreparePositiveResponse(cByte3);
   \   0025   A103           MOV       A,#3
   \   0027   9A....         CALL      LAPKwpPreparePositiveResponse
   \   002A   FA05           BR        ??LAPAfsTreatSecurityAccessService_31
    782              }
    783              else
    784              {
    785                  // negative response
    786                  LAPKwpPrepareNegativeResponse(cLAPKwpInvalidFormat);
   \                     ??LAPAfsTreatSecurityAccessService_30:
   \   002C   A112           MOV       A,#18
   \   002E   9A....         CALL      LAPKwpPrepareNegativeResponse
    787              }
    788          
    789              LAPKwpSetServiceIsFinished();
   \                     ??LAPAfsTreatSecurityAccessService_31:
   \   0031                  REQUIRE ?CL78K_V4_6_L00
   \   0031                  REQUIRE ?Subroutine1
   \   0031                  ; // Fall through to label ?Subroutine1
    790          }

   \                                 In  segment BCODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   0000   A103           MOV       A,#3
   \   0002   9E....         MOV       u8LAPKwpRequestStatus,A
   \   0005   AF             RET       
   \   0006                  REQUIRE ?CL78K_V4_6_L00
    791          
    792          //==============================================================================
    793          // DESCRIPTION:         LAPAfsClearFaultFlagsAndCounters
    794          //
    795          // PARAMETERS:          none
    796          //
    797          // RETURN VALUE:        none
    798          //
    799          // DESIGN INFORMATION:  refer to Detailed Design Document
    800          //==============================================================================

   \                                 In  segment CODE, align 1, keep-with-next
    801          void LAPAfsClearFaultFlagsAndCounters (void)
   \                     LAPAfsClearFaultFlagsAndCounters:
    802          {
   \   0000                  ; * Stack frame (at entry) *
   \   0000                  ; Param size: 0
   \   0000   B5             PUSH      DE
   \   0001                  ; Total Auto size: 0
    803          #ifdef X90_PROJECT
    804              static MEM_TYPE void LAPAfsClearFaultFlagsAndCounters_Static(void);
    805              LAPAfsClearFaultFlagsAndCounters_Static();
   \   0001   16....         MOVW      HL,#LWRD(LAPAfsClearFaultFlagsAndCounters_Static)
   \   0004   A4..           MOV       E,#BYTE3(LAPAfsClearFaultFlagsAndCounters_Static)
   \   0006   ..             CALLT     [__T_?FAR_CALL_L07]
    806          }
   \   0007   B4             POP       DE
   \   0008   AF             RET       
   \   0009                  REQUIRE ?CL78K_V4_6_L00
    807          #pragma optimize=no_inline

   \                                 In  segment BCODE, align 1, keep-with-next
    808          static MEM_TYPE void LAPAfsClearFaultFlagsAndCounters_Static(void)
   \                     LAPAfsClearFaultFlagsAndCounters_Static:
    809          {
   \   0000                  ; * Stack frame (at entry) *
   \   0000                  ; Param size: 0
   \   0000                  ; Total Auto size: 0
    810          #endif
    811              
    812              // Erase the RAM fault flags
    813              mDATWrite(U1Bit, DefBtonCpeOuv, 0, Default);
   \   0000   A100           MOV       A,#0
   \   0002   16....         MOVW      HL,#DATCmnData+23
   \   0005   97             MOV       [HL],A
    814              mDATWrite(U1Bit, DefBtonCpeFer, 0, Default);
   \   0006   16....         MOVW      HL,#DATCmnData+22
   \   0009   97             MOV       [HL],A
    815          
    816              mDATWrite(U1Bit, DefAFAV,       0, Default);
   \   000A   16....         MOVW      HL,#DATCmnData+19
   \   000D   97             MOV       [HL],A
    817              mDATWrite(U1Bit, DefAFAR,       0, Default);
   \   000E   16....         MOVW      HL,#DATCmnData+18
   \   0011   97             MOV       [HL],A
    818              mDATWrite(U1Bit, DefAirbag,     0, Default);
   \   0012   16....         MOVW      HL,#DATCmnData+17
   \   0015   97             MOV       [HL],A
    819              mDATWrite(U1Bit, DefClignL,     0, Default);
   \   0016   16....         MOVW      HL,#DATCmnData+15
   \   0019   97             MOV       [HL],A
    820              mDATWrite(U1Bit, DefClignR,     0, Default);
   \   001A   86             INCW      HL
   \   001B   97             MOV       [HL],A
    821              mDATWrite(U1Bit, DefEEPROM,     0, Default);
   \   001C   16....         MOVW      HL,#DATCmnData+14
   \   001F   97             MOV       [HL],A
    822              
    823              mDATWrite(U1Bit, DefTrpShortCircuitToBat , 0, Default);
   \   0020   16....         MOVW      HL,#DATCmnData+13
   \   0023   97             MOV       [HL],A
    824              mDATWrite(U1Bit, DefTrpShortCircuitToGnd , 0, Default);
   \   0024   16....         MOVW      HL,#DATCmnData+12
   \   0027   97             MOV       [HL],A
    825              
    826              mDATWrite(U1Bit, DefVerlogToGnd,0, Default);
   \   0028   16....         MOVW      HL,#DATCmnData+9
   \   002B   97             MOV       [HL],A
    827              mDATWrite(U1Bit, DefVerlogToBat,0, Default);
   \   002C   16....         MOVW      HL,#DATCmnData+8
   \   002F   97             MOV       [HL],A
    828              mDATWrite(U1Bit, DefVerlogLedCC,0, Default);
   \   0030   16....         MOVW      HL,#DATCmnData+10
   \   0033   97             MOV       [HL],A
    829              mDATWrite(U1Bit, DefDfrToBat,   0, Default);
   \   0034   16....         MOVW      HL,#DATCmnData+7
   \   0037   97             MOV       [HL],A
    830              mDATWrite(U1Bit, DefDfrToGnd,   0, Default);
   \   0038   16....         MOVW      HL,#DATCmnData+6
   \   003B   97             MOV       [HL],A
    831            
    832              mDATWrite(U1Bit, DefHornCCBat,0, Default);
   \   003C   16....         MOVW      HL,#DATCmnData+4
   \   003F   97             MOV       [HL],A
    833              mDATWrite(U1Bit, DefHornCCGnd,0, Default);
   \   0040   86             INCW      HL
   \   0041   97             MOV       [HL],A
    834              mDATWrite(U1Bit, DefKLineCC,0, Default);
   \   0042   16....         MOVW      HL,#DATCmnData+20
   \   0045   97             MOV       [HL],A
    835              mDATWrite(U1Bit, DefDoorlockLedCC,0, Default);
   \   0046   16....         MOVW      HL,#DATCmnData+11
   \   0049   97             MOV       [HL],A
    836              mDATWrite(U1Bit, DefRrwCC,0, Default);        
   \   004A   16....         MOVW      HL,#DATCmnData+21
   \   004D   97             MOV       [HL],A
    837              
    838              mDATWrite(U8Bit, DATTrpAuthentTryCounter , 0, Default);  // compt_nb_int
   \   004E   16....         MOVW      HL,#DatTrpExportData+43
   \   0051   97             MOV       [HL],A
    839              mDATWrite(U8Bit, COD_ERR_APP , 0, Default);
   \   0052   16....         MOVW      HL,#DATCmnImmoData+22
   \   0055   97             MOV       [HL],A
    840              
    841          
    842              // Erase the eeprom default flag
    843              mDATWrite(U1Bit, EEP_DefAfav          , 0, Default);
   \   0056   16....         MOVW      HL,#DATDbkMirrors+19
   \   0059   318705         BF        [HL].0, ??LAPAfsTreatSecurityAccessService_32
   \   005C   7183           CLR1      [HL].0
   \   005E   9A....         CALL      DATDbkStartUpdate
    844              mDATWrite(U1Bit, EEP_DefAfar          , 0, Default);
   \                     ??LAPAfsTreatSecurityAccessService_32:
   \   0061   16....         MOVW      HL,#DATDbkMirrors+19
   \   0064   319707         BF        [HL].1, ??LAPAfsTreatSecurityAccessService_33
   \   0067   A100           MOV       A,#0
   \   0069   7193           CLR1      [HL].1
   \   006B   9A....         CALL      DATDbkStartUpdate
    845              mDATWrite(U1Bit, EEP_DefAirbag        , 0, Default);
   \                     ??LAPAfsTreatSecurityAccessService_33:
   \   006E   16....         MOVW      HL,#DATDbkMirrors+19
   \   0071   31A707         BF        [HL].2, ??LAPAfsTreatSecurityAccessService_34
   \   0074   A100           MOV       A,#0
   \   0076   71A3           CLR1      [HL].2
   \   0078   9A....         CALL      DATDbkStartUpdate
    846              mDATWrite(U1Bit, EEP_DefClignL        , 0, Default);
   \                     ??LAPAfsTreatSecurityAccessService_34:
   \   007B   16....         MOVW      HL,#DATDbkMirrors+19
   \   007E   31B707         BF        [HL].3, ??LAPAfsTreatSecurityAccessService_35
   \   0081   A100           MOV       A,#0
   \   0083   71B3           CLR1      [HL].3
   \   0085   9A....         CALL      DATDbkStartUpdate
    847              mDATWrite(U1Bit, EEP_DefClignR        , 0, Default);
   \                     ??LAPAfsTreatSecurityAccessService_35:
   \   0088   16....         MOVW      HL,#DATDbkMirrors+19
   \   008B   31C707         BF        [HL].4, ??LAPAfsTreatSecurityAccessService_36
   \   008E   A100           MOV       A,#0
   \   0090   71C3           CLR1      [HL].4
   \   0092   9A....         CALL      DATDbkStartUpdate
    848              mDATWrite(U1Bit, EEP_DefEeprom        , 0, Default);
   \                     ??LAPAfsTreatSecurityAccessService_36:
   \   0095   16....         MOVW      HL,#DATDbkMirrors+19
   \   0098   31D707         BF        [HL].5, ??LAPAfsTreatSecurityAccessService_37
   \   009B   A100           MOV       A,#0
   \   009D   71D3           CLR1      [HL].5
   \   009F   9A....         CALL      DATDbkStartUpdate
    849              mDATWrite(U1Bit, EEP_DefTrpToBat      , 0, Default);
   \                     ??LAPAfsTreatSecurityAccessService_37:
   \   00A2   16....         MOVW      HL,#DATDbkMirrors+19
   \   00A5   31E707         BF        [HL].6, ??LAPAfsTreatSecurityAccessService_38
   \   00A8   A100           MOV       A,#0
   \   00AA   71E3           CLR1      [HL].6
   \   00AC   9A....         CALL      DATDbkStartUpdate
    850              mDATWrite(U1Bit, EEP_DefTrpToGnd      , 0, Default);
   \                     ??LAPAfsTreatSecurityAccessService_38:
   \   00AF   16....         MOVW      HL,#DATDbkMirrors+19
   \   00B2   31F707         BF        [HL].7, ??LAPAfsTreatSecurityAccessService_39
   \   00B5   A100           MOV       A,#0
   \   00B7   71F3           CLR1      [HL].7
   \   00B9   9A....         CALL      DATDbkStartUpdate
    851              mDATWrite(U1Bit, EEP_DefVerlogToGnd   , 0, Default);
   \                     ??LAPAfsTreatSecurityAccessService_39:
   \   00BC   16....         MOVW      HL,#DATDbkMirrors+20
   \   00BF   318707         BF        [HL].0, ??LAPAfsTreatSecurityAccessService_40
   \   00C2   A100           MOV       A,#0
   \   00C4   7183           CLR1      [HL].0
   \   00C6   9A....         CALL      DATDbkStartUpdate
    852              mDATWrite(U1Bit, EEP_DefVerlogToBat   , 0, Default);
   \                     ??LAPAfsTreatSecurityAccessService_40:
   \   00C9   16....         MOVW      HL,#DATDbkMirrors+20
   \   00CC   319707         BF        [HL].1, ??LAPAfsTreatSecurityAccessService_41
   \   00CF   A100           MOV       A,#0
   \   00D1   7193           CLR1      [HL].1
   \   00D3   9A....         CALL      DATDbkStartUpdate
    853              mDATWrite(U1Bit, EEP_DefDfrToBat      , 0, Default);
   \                     ??LAPAfsTreatSecurityAccessService_41:
   \   00D6   16....         MOVW      HL,#DATDbkMirrors+20
   \   00D9   31B707         BF        [HL].3, ??LAPAfsTreatSecurityAccessService_42
   \   00DC   A100           MOV       A,#0
   \   00DE   71B3           CLR1      [HL].3
   \   00E0   9A....         CALL      DATDbkStartUpdate
    854              mDATWrite(U1Bit, EEP_DefDfrToGnd      , 0, Default);
   \                     ??LAPAfsTreatSecurityAccessService_42:
   \   00E3   16....         MOVW      HL,#DATDbkMirrors+20
   \   00E6   31C707         BF        [HL].4, ??LAPAfsTreatSecurityAccessService_43
   \   00E9   A100           MOV       A,#0
   \   00EB   71C3           CLR1      [HL].4
   \   00ED   9A....         CALL      DATDbkStartUpdate
    855              mDATWrite(U1Bit, EEP_DefHornCCBat     , 0, Default);
   \                     ??LAPAfsTreatSecurityAccessService_43:
   \   00F0   16....         MOVW      HL,#DATDbkMirrors+20
   \   00F3   31D707         BF        [HL].5, ??LAPAfsTreatSecurityAccessService_44
   \   00F6   A100           MOV       A,#0
   \   00F8   71D3           CLR1      [HL].5
   \   00FA   9A....         CALL      DATDbkStartUpdate
    856              mDATWrite(U1Bit, EEP_DefHornCCGnd     , 0, Default);
   \                     ??LAPAfsTreatSecurityAccessService_44:
   \   00FD   16....         MOVW      HL,#DATDbkMirrors+20
   \   0100   31E707         BF        [HL].6, ??LAPAfsTreatSecurityAccessService_45
   \   0103   A100           MOV       A,#0
   \   0105   71E3           CLR1      [HL].6
   \   0107   9A....         CALL      DATDbkStartUpdate
    857              mDATWrite(U1Bit, EEP_DefKLineCC       , 0, Default);
   \                     ??LAPAfsTreatSecurityAccessService_45:
   \   010A   16....         MOVW      HL,#DATDbkMirrors+20
   \   010D   31A707         BF        [HL].2, ??LAPAfsTreatSecurityAccessService_46
   \   0110   A100           MOV       A,#0
   \   0112   71A3           CLR1      [HL].2
   \   0114   9A....         CALL      DATDbkStartUpdate
    858              mDATWrite(U1Bit, EEP_DefDoorlockLedCC , 0, Default);
   \                     ??LAPAfsTreatSecurityAccessService_46:
   \   0117   16....         MOVW      HL,#DATDbkMirrors+20
   \   011A   31F707         BF        [HL].7, ??LAPAfsTreatSecurityAccessService_47
   \   011D   A100           MOV       A,#0
   \   011F   71F3           CLR1      [HL].7
   \   0121   9A....         CALL      DATDbkStartUpdate
    859              mDATWrite(U1Bit, EEP_DefVerlogLedCC   , 0, Default);
   \                     ??LAPAfsTreatSecurityAccessService_47:
   \   0124   16....         MOVW      HL,#DATDbkMirrors+21
   \   0127   318707         BF        [HL].0, ??LAPAfsTreatSecurityAccessService_48
   \   012A   A100           MOV       A,#0
   \   012C   7183           CLR1      [HL].0
   \   012E   9A....         CALL      DATDbkStartUpdate
    860              mDATWrite(U1Bit, EEP_DefRrwCC         , 0, Default);
   \                     ??LAPAfsTreatSecurityAccessService_48:
   \   0131   16....         MOVW      HL,#DATDbkMirrors+21
   \   0134   319707         BF        [HL].1, ??LAPAfsTreatSecurityAccessService_49
   \   0137   A100           MOV       A,#0
   \   0139   7193           CLR1      [HL].1
   \   013B   9A....         CALL      DATDbkStartUpdate
    861          
    862          
    863              // Erase Immo data 
    864              mDATWrite(U8Bit, EEP_ResynchroSuccessfulCounter, 0, Default);
   \                     ??LAPAfsTreatSecurityAccessService_49:
   \   013E   8E....         MOV       A,DATDbkMirrors+4
   \   0141   4D00           CMP       A,#0
   \   0143   AD09           BZ        ??LAPAfsTreatSecurityAccessService_50
   \   0145   A100           MOV       A,#0
   \   0147   16....         MOVW      HL,#DATDbkMirrors+4
   \   014A   97             MOV       [HL],A
   \   014B   9A....         CALL      DATDbkStartUpdate
    865              mDATWrite(U8Bit, EEP_ResynchroFailureCounter   , 0, Default);
   \                     ??LAPAfsTreatSecurityAccessService_50:
   \   014E   8E....         MOV       A,DATDbkMirrors+3
   \   0151   4D00           CMP       A,#0
   \   0153   AD09           BZ        ??LAPAfsTreatSecurityAccessService_51
   \   0155   A100           MOV       A,#0
   \   0157   16....         MOVW      HL,#DATDbkMirrors+3
   \   015A   97             MOV       [HL],A
   \   015B   9A....         CALL      DATDbkStartUpdate
    866              mDATWrite(U8Bit, EEP_AuthentDelayedCounter     , 0, Default);
   \                     ??LAPAfsTreatSecurityAccessService_51:
   \   015E   8E....         MOV       A,DATDbkMirrors+1
   \   0161   4D00           CMP       A,#0
   \   0163   AD08           BZ        ??LAPAfsTreatSecurityAccessService_52
   \   0165   A100           MOV       A,#0
   \   0167   9E....         MOV       DATDbkMirrors+1,A
   \   016A   9A....         CALL      DATDbkStartUpdate
    867              mDATWrite(U8Bit, EEP_AuthentFailureCounter     , 0, Default);
   \                     ??LAPAfsTreatSecurityAccessService_52:
   \   016D   8E....         MOV       A,DATDbkMirrors+2
   \   0170   4D00           CMP       A,#0
   \   0172   AD08           BZ        ??LAPAfsTreatSecurityAccessService_53
   \   0174   A100           MOV       A,#0
   \   0176   9E....         MOV       DATDbkMirrors+2,A
   \   0179   9A....         CALL      DATDbkStartUpdate
    868          
    869              // Erase the reset counter
    870              mDATWrite(U8Bit, EEP_ResetCount, 0, Default);
   \                     ??LAPAfsTreatSecurityAccessService_53:
   \   017C   8E....         MOV       A,DATDbkMirrors+5
   \   017F   4D00           CMP       A,#0
   \   0181   AD09           BZ        ??LAPAfsTreatSecurityAccessService_54
   \   0183   A100           MOV       A,#0
   \   0185   16....         MOVW      HL,#DATDbkMirrors+5
   \   0188   97             MOV       [HL],A
   \   0189   9A....         CALL      DATDbkStartUpdate
    871              // Erase the collision counter
    872              mDATWrite(U8Bit, EEP_CrashCount, 0, Default);
   \                     ??LAPAfsTreatSecurityAccessService_54:
   \   018C   8E....         MOV       A,DATDbkMirrors+6
   \   018F   4D00           CMP       A,#0
   \   0191   AD09           BZ        ??LAPAfsTreatSecurityAccessService_55
   \   0193   A100           MOV       A,#0
   \   0195   16....         MOVW      HL,#DATDbkMirrors+6
   \   0198   97             MOV       [HL],A
   \   0199   9A....         CALL      DATDbkStartUpdate
    873          }
   \                     ??LAPAfsTreatSecurityAccessService_55:
   \   019C   AF             RET       
   \   019D                  REQUIRE ?CL78K_V4_6_L00
    874          
    875          //==============================================================================
    876          // DESCRIPTION:         LAPAfsTreatStartRoutineByLocalIdentifierService
    877          //
    878          // PARAMETERS:          none
    879          //
    880          // RETURN VALUE:        none
    881          //
    882          // DESIGN INFORMATION:  refer to Detailed Design Document
    883          //==============================================================================

   \                                 In  segment BCODE, align 1, keep-with-next
    884          MEM_TYPE void LAPAfsTreatStartRoutineByLocalIdentifierService(void)
   \                     LAPAfsTreatStartRoutineByLocalIdentifierService:
    885          {
   \   0000                  ; * Stack frame (at entry) *
   \   0000                  ; Param size: 0
   \   0000   B3             PUSH      BC
   \   0001                  ; Total Auto size: 2
   \   0001   B7             PUSH      HL
    886              U8  u8AnswerStatusL;
    887              U8  u8RoutineStatusL;
    888              
    889              u8AnswerStatusL = cLAPKwpServiceIsCorrect;
    890              u8RoutineStatusL = cLAPKwpRoutineNotActivated;
   \   0002   891C           MOVW      AX,SP
   \   0004   D6             MOVW      HL,AX
   \   0005   A100           MOV       A,#0
   \   0007   97             MOV       [HL],A
    891          
    892              if  ( mDATRead(U8Bit,DATKwpRxFrameLgth,Default) == cSRBIDReq_Lght )
   \   0008   8E....         MOV       A,DATKwpRxFrameLgth
   \   000B   4D03           CMP       A,#3
   \   000D   AD03           BZ        $+5
   \   000F   9B....         BR        N:??LAPAfsTreatSecurityAccessService_56
    893              {
    894                  if (LAPKwpReadDiagnosticRequest(cByte2) == 0x00) // Launch the routine
   \   0012   8E....         MOV       A,DATKwpRxBuffer+5
   \   0015   4D00           CMP       A,#0
   \   0017   AD03           BZ        $+5
   \   0019   9B....         BR        N:??LAPAfsTreatSecurityAccessService_57
    895                  {
    896          
    897                      switch (LAPKwpReadDiagnosticRequest(1))
   \   001C   8E....         MOV       A,DATKwpRxBuffer+4
   \   001F   4DA6           CMP       A,#166
   \   0021   AD0A           BZ        ??LAPAfsTreatSecurityAccessService_58
   \   0023   4DA7           CMP       A,#167
   \   0025   AD37           BZ        ??LAPAfsTreatSecurityAccessService_59
   \   0027   4DB0           CMP       A,#176
   \   0029   AD56           BZ        ??LAPAfsTreatSecurityAccessService_60
   \   002B   FA71           BR        ??LAPAfsTreatSecurityAccessService_61
    898                      {
    899          
    900                      case cSRBID_StartPermanentAuthenticationID : 
    901                          if ( (mDATRead(U1Bit, EEP_BCMBlank, Default) ==0)    
    902                             &&(mDATRead(U1Bit, PWR_IGN, Default) == 0))
   \                     ??LAPAfsTreatSecurityAccessService_58:
   \   002D   16....         MOVW      HL,#DATDbkMirrors+143
   \   0030   318626         BT        [HL].0, ??LAPAfsTreatSecurityAccessService_62
   \   0033   8C..23         BT        S:DATDinInputBuffers+6.0, ??LAPAfsTreatSecurityAccessService_62
    903                          {
    904                              TOSSendControl(cTOSControlStartPermanentAuthentication);
   \   0036   A118           MOV       A,#24
   \   0038   ..             CALLT     [__T_TOSSendControl]
    905                              u8RoutineStatusL = cSRBID_StartRoutineAccepted; // Cm006299: accept a status of 00h to be compatible with Polaris BCM 
   \   0039   891C           MOVW      AX,SP
   \   003B   D6             MOVW      HL,AX
   \   003C   A100           MOV       A,#0
   \   003E   97             MOV       [HL],A
    906                              u8RoutineRequestInProgress = cSRBID_StartPermanentAuthenticationID;
   \   003F   A1A6           MOV       A,#166
   \   0041   9E....         MOV       u8RoutineRequestInProgress,A
    907                          }
    908                          else
    909                          {
    910                              u8AnswerStatusL = cLAPKwpConditionNotCorrect;
    911                          }
    912                          break;
    913          
    914                      case cSRBID_EraseAfterSalesCodeID :
    915          
    916                      #ifdef X90_PROJECT
    917                          //amanevd: 6 NOPs added so that object file produced from rev. 1.64 to be identical with 1.65
    918                          NOP();
    919                          NOP();
    920                          NOP();
    921                          NOP();
    922                          NOP();
    923                          NOP();
    924                      #endif
    925          
    926                          // Stop the active routine (Only the routine permanent authentication can be active)
    927                          TOSSendControl(cTOSControlStopPermanentAuthentication);
    928                          u8RoutineRequestInProgress = cNoRoutineControl;
    929          
    930                          // prsFS_IMMO-675
    931                          mDATWrite(U1Bit, EEP_EraseAFSCodeRequest, 1, Default); // cde_eff_code_recu
    932          
    933                          u8RoutineStatusL = cLAPKwpRoutineTerminatedOK;
    934                          break;
    935          
    936                      case cSRBID_TestVirginKeyID :
    937                          if ((mDATRead(U1Bit, PWR_IGN, Default) == 1)
    938                            &&(mDATRead(U8Bit, LearningModeInProgress, Default) == cDATNoLearningMode))
    939                          {
    940                              // Stop the active routine (Only the routine permanent authentication can be active)
    941                              TOSSendControl(cTOSControlStopPermanentAuthentication);  
    942                              u8RoutineRequestInProgress = cSRBID_TestVirginKeyID;
    943          
    944                              TOSSendControl(cTOSControlStartTestVirginKey);  
    945                              u8RoutineStatusL = cLAPKwpRoutineInProgress;
    946                          }
    947                          else
    948                          {
    949                              u8AnswerStatusL = cLAPKwpConditionNotCorrect;
    950                          }
    951                          break;
    952          
    953                      default :
    954                          u8AnswerStatusL = 
    955                              LIBCfdExecuteConfDiagRequest(   LAPKwpReadDiagnosticRequest(0),
    956                                                              LAPKwpReadDiagnosticRequest(1),
    957                                                              &u8RoutineStatusL);
    958                          u8RoutineRequestInProgress = cNoRoutineControl;
    959                          break;
    960                      } // switch LID
    961          
    962                  }
    963                  else if (LAPKwpReadDiagnosticRequest(cByte2) == 0x01) // Request status
    964                  {
    965                      switch (LAPKwpReadDiagnosticRequest(1)) // Routine ID
    966                      {
    967                          case cSRBID_StartPermanentAuthenticationID:
    968                          case cSRBID_EraseAfterSalesCodeID:
    969                          if (u8RoutineRequestInProgress == LAPKwpReadDiagnosticRequest(1))
    970                          {
    971                              u8RoutineStatusL = cLAPKwpRoutineInProgress;
    972                          }
    973                          else
    974                          {
    975                              u8RoutineStatusL = cLAPKwpRoutineTerminatedOK;
    976                          }
    977                          break;
    978          
    979                          case cSRBID_TestVirginKeyID:
    980          
    981                          if (u8RoutineRequestInProgress == LAPKwpReadDiagnosticRequest(1))
    982                          {
    983                              if(cDATTrpServiceInProgress == mDATRead(U8Bit, DATTrpAuthenticationState, Default))
    984                              {
    985                                  u8RoutineStatusL = cLAPKwpRoutineInProgress;
    986                              }
    987                              else if(cFalse != mDATRead(U1Bit, VirginKeyAuthentOk, Default))
    988                              {
    989                                  u8RoutineStatusL = cLAPKwpRoutineTerminatedOK;
    990                              }
    991                              else
    992                              {
    993                                  u8RoutineStatusL = cLAPKwpRoutineTerminatedNOK;
    994                              }
    995                          }
    996                          else
    997                          {
    998                              u8RoutineStatusL = cLAPKwpRoutineNotActivated;
    999                          }
   1000                          break;
   1001          
   1002                          default:
   1003          
   1004                          //QACJ 3416: akodzhh: There is no side effedct
   1005                          if(cFalse != LIBCfdIsConfDiagRoutineRequest(LAPKwpReadDiagnosticRequest(1)))
   1006                          {
   1007                              //CCOV: akodzhh: can't be covered, available for now Cfd routines are always finished.
   1008                              if (u8RoutineRequestInProgress == LAPKwpReadDiagnosticRequest(1))
   1009                              {
   1010                                  u8RoutineStatusL = cLAPKwpRoutineInProgress;
   1011                              }
   1012                              else
   1013                              {
   1014                                  u8RoutineStatusL = cLAPKwpRoutineTerminatedOK;
   1015                              }
   1016                          }
   1017                          else
   1018                          {
   1019                              // Not supported routine ID
   1020                              u8AnswerStatusL = cLAPKwpInvalidFormat;
   1021                          }
   1022                          break;
   1023                      }
   1024                          
   1025                  }
   1026                  else
   1027                  {
   1028                      u8AnswerStatusL = cLAPKwpInvalidFormat;
   1029                  }
   1030              }
   1031              else    // invalid length
   1032              {
   1033                  u8AnswerStatusL = cLAPKwpInvalidFormat;
   1034              }
   1035          
   1036              if (u8AnswerStatusL == cLAPKwpServiceIsCorrect)
   1037              {
   1038                  LAPKwpWriteDiagnosticResponse(1,LAPKwpReadDiagnosticRequest(1));
   \                     ??LAPAfsTreatStartRoutineByLocalIdentifierServi_0:
   \   0044   8E....         MOV       A,DATKwpRxBuffer+4
   \   0047   9E....         MOV       DATKwpTxBuffer+4,A
   1039                  LAPKwpWriteDiagnosticResponse(cByte2,u8RoutineStatusL);
   \   004A   891C           MOVW      AX,SP
   \   004C   D6             MOVW      HL,AX
   \   004D   87             MOV       A,[HL]
   \   004E   9E....         MOV       DATKwpTxBuffer+5,A
   1040                  LAPKwpPreparePositiveResponse(cByte3);
   \   0051   A103           MOV       A,#3
   \   0053   9A....         CALL      LAPKwpPreparePositiveResponse
   \   0056   9B....         BR        N:??LAPAfsTreatSecurityAccessService_63
   1041              }
   \                     ??LAPAfsTreatSecurityAccessService_62:
   \   0059   A022           MOV       X,#34
   \   005B   9B....         BR        N:??LAPAfsTreatSecurityAccessService_64
   \                     ??LAPAfsTreatSecurityAccessService_59:
   \   005E   A119           MOV       A,#25
   \   0060   00             nop
   \   0061   00             nop
   \   0062   00             nop
   \   0063   00             nop
   \   0064   00             nop
   \   0065   00             nop
   \   0066   ..             CALLT     [__T_TOSSendControl]
   \   0067   A100           MOV       A,#0
   \   0069   9E....         MOV       u8RoutineRequestInProgress,A
   \   006C   16....         MOVW      HL,#DATDbkMirrors+143
   \   006F   31B607         BT        [HL].3, ??LAPAfsTreatSecurityAccessService_65
   \   0072   A103           MOV       A,#3
   \   0074   71B2           SET1      [HL].3
   \   0076   9A....         CALL      DATDbkStartUpdate
   \                     ??LAPAfsTreatSecurityAccessService_65:
   \   0079   891C           MOVW      AX,SP
   \   007B   D6             MOVW      HL,AX
   \   007C   A102           MOV       A,#2
   \                     ??LAPAfsTreatStartRoutineByLocalIdentifierServi_1:
   \   007E   97             MOV       [HL],A
   \   007F   FAC3           BR        ??LAPAfsTreatStartRoutineByLocalIdentifierServi_0
   \                     ??LAPAfsTreatSecurityAccessService_60:
   \   0081   3103..D4       BF        S:DATDinInputBuffers+6.0, ??LAPAfsTreatSecurityAccessService_62
   \   0085   8E....         MOV       A,DATCmnImmoData+17
   \   0088   4D00           CMP       A,#0
   \   008A   BDCD           BNZ       ??LAPAfsTreatSecurityAccessService_62
   \   008C   A119           MOV       A,#25
   \   008E   ..             CALLT     [__T_TOSSendControl]
   \   008F   A1B0           MOV       A,#176
   \   0091   9E....         MOV       u8RoutineRequestInProgress,A
   \   0094   A11A           MOV       A,#26
   \   0096   ..             CALLT     [__T_TOSSendControl]
   \                     ??LAPAfsTreatStartRoutineByLocalIdentifierServi_2:
   \   0097   891C           MOVW      AX,SP
   \   0099   D6             MOVW      HL,AX
   \   009A   A101           MOV       A,#1
   \   009C   FAE0           BR        ??LAPAfsTreatStartRoutineByLocalIdentifierServi_1
   \                     ??LAPAfsTreatSecurityAccessService_61:
   \   009E   891C           MOVW      AX,SP
   \   00A0   B1             PUSH      AX
   \   00A1   8E....         MOV       A,DATKwpRxBuffer+4
   \   00A4   73             MOV       B,A
   \   00A5   8E....         MOV       A,DATKwpRxBuffer+3
   \   00A8   16....         MOVW      HL,#LWRD(LIBCfdExecuteConfDiagRequest)
   \   00AB   A4..           MOV       E,#BYTE3(LIBCfdExecuteConfDiagRequest)
   \   00AD   ..             CALLT     [__T_?FAR_CALL_L07]
   \   00AE   70             MOV       X,A
   \   00AF   A100           MOV       A,#0
   \   00B1   9E....         MOV       u8RoutineRequestInProgress,A
   \   00B4   60             MOV       A,X
   \   00B5   4D00           CMP       A,#0
   \   00B7   BD4A           BNZ       ??LAPAfsTreatSecurityAccessService_64
   \   00B9   FA89           BR        ??LAPAfsTreatStartRoutineByLocalIdentifierServi_0
   \                     ??LAPAfsTreatSecurityAccessService_57:
   \   00BB   51             DEC       A
   \   00BC   BD43           BNZ       ??LAPAfsTreatSecurityAccessService_56
   \   00BE   8E....         MOV       A,DATKwpRxBuffer+4
   \   00C1   4DA6           CMP       A,#166
   \   00C3   AD0A           BZ        ??LAPAfsTreatSecurityAccessService_66
   \   00C5   4DA7           CMP       A,#167
   \   00C7   AD06           BZ        ??LAPAfsTreatSecurityAccessService_66
   \   00C9   4DB0           CMP       A,#176
   \   00CB   AD0C           BZ        ??LAPAfsTreatSecurityAccessService_67
   \   00CD   FA28           BR        ??LAPAfsTreatSecurityAccessService_68
   \                     ??LAPAfsTreatSecurityAccessService_66:
   \   00CF   8E....         MOV       A,u8RoutineRequestInProgress
   \   00D2   48....         CMP       A,DATKwpRxBuffer+4
   \   00D5   BDA2           BNZ       ??LAPAfsTreatSecurityAccessService_65
   \   00D7   FABE           BR        ??LAPAfsTreatStartRoutineByLocalIdentifierServi_2
   \                     ??LAPAfsTreatSecurityAccessService_67:
   \   00D9   8E....         MOV       A,u8RoutineRequestInProgress
   \   00DC   48....         CMP       A,DATKwpRxBuffer+4
   \   00DF   AD03           BZ        $+5
   \   00E1   9B....         BR        N:??LAPAfsTreatStartRoutineByLocalIdentifierServi_0
   \   00E4   8E....         MOV       A,DatTrpExportData+44
   \   00E7   51             DEC       A
   \   00E8   ADAD           BZ        ??LAPAfsTreatStartRoutineByLocalIdentifierServi_2
   \   00EA   16....         MOVW      HL,#DatTrpExportData+50
   \   00ED   31B689         BT        [HL].3, ??LAPAfsTreatSecurityAccessService_65
   \   00F0   891C           MOVW      AX,SP
   \   00F2   D6             MOVW      HL,AX
   \   00F3   A104           MOV       A,#4
   \   00F5   FA87           BR        ??LAPAfsTreatStartRoutineByLocalIdentifierServi_1
   \                     ??LAPAfsTreatSecurityAccessService_68:
   \   00F7   16....         MOVW      HL,#LWRD(LIBCfdIsConfDiagRoutineRequest)
   \   00FA   A4..           MOV       E,#BYTE3(LIBCfdIsConfDiagRoutineRequest)
   \   00FC   ..             CALLT     [__T_?FAR_CALL_L07]
   \   00FD   4D00           CMP       A,#0
   \   00FF   BDCE           BNZ       ??LAPAfsTreatSecurityAccessService_66
   \                     ??LAPAfsTreatSecurityAccessService_56:
   \   0101   A012           MOV       X,#18
   1042              else
   1043              {   // negative response
   1044                  LAPKwpPrepareNegativeResponse(u8AnswerStatusL);
   \                     ??LAPAfsTreatSecurityAccessService_64:
   \   0103   60             MOV       A,X
   \   0104   9A....         CALL      LAPKwpPrepareNegativeResponse
   1045              }
   1046              LAPKwpSetServiceIsFinished();
   \                     ??LAPAfsTreatSecurityAccessService_63:
   \   0107   A103           MOV       A,#3
   \   0109   9E....         MOV       u8LAPKwpRequestStatus,A
   1047          }
   \   010C   B0             POP       AX
   \   010D   B2             POP       BC
   \   010E   AF             RET       
   \   010F                  REQUIRE ?CL78K_V4_6_L00
   1048          
   1049          
   1050          //==============================================================================
   1051          // DESCRIPTION:         LAPAfsTreatStopRoutineByLocalIdentifierService
   1052          //
   1053          // PARAMETERS:          none
   1054          //
   1055          // RETURN VALUE:        none
   1056          //
   1057          // DESIGN INFORMATION:  refer to Detailed Design Document
   1058          //==============================================================================

   \                                 In  segment BCODE, align 1, keep-with-next
   1059          MEM_TYPE void LAPAfsTreatStopRoutineByLocalIdentifierService(void)
   \                     LAPAfsTreatStopRoutineByLocalIdentifierService:
   1060          {
   \   0000                  ; * Stack frame (at entry) *
   \   0000                  ; Param size: 0
   \   0000                  ; Total Auto size: 0
   1061              if ( (  (LAPKwpReadDiagnosticRequest(1) == u8RoutineRequestInProgress) ||
   1062                      (LAPKwpReadDiagnosticRequest(1) == 0x00))&&
   1063                   (LAPKwpReadDiagnosticRequest(cByte2) == 0x00) )
   \   0000   8E....         MOV       A,DATKwpRxBuffer+4
   \   0003   48....         CMP       A,u8RoutineRequestInProgress
   \   0006   AD04           BZ        ??LAPAfsTreatSecurityAccessService_69
   \   0008   4D00           CMP       A,#0
   \   000A   BD22           BNZ       ??LAPAfsTreatSecurityAccessService_70
   \                     ??LAPAfsTreatSecurityAccessService_69:
   \   000C   8E....         MOV       A,DATKwpRxBuffer+5
   \   000F   4D00           CMP       A,#0
   \   0011   BD1B           BNZ       ??LAPAfsTreatSecurityAccessService_70
   1064              {  
   1065                  LAPKwpWriteDiagnosticResponse(1,u8RoutineRequestInProgress);
   \   0013   8E....         MOV       A,u8RoutineRequestInProgress
   \   0016   9E....         MOV       DATKwpTxBuffer+4,A
   1066                  LAPKwpWriteDiagnosticResponse(cByte2,cLAPKwpRoutineTerminatedOK);
   \   0019   A102           MOV       A,#2
   \   001B   16....         MOVW      HL,#DATKwpTxBuffer+5
   \   001E   97             MOV       [HL],A
   1067                  LAPKwpPreparePositiveResponse(cByte3);
   \   001F   A103           MOV       A,#3
   \   0021   9A....         CALL      LAPKwpPreparePositiveResponse
   1068          
   1069                  u8RoutineRequestInProgress = cNoRoutineControl;
   \   0024   A100           MOV       A,#0
   \   0026   9E....         MOV       u8RoutineRequestInProgress,A
   1070                  TOSSendControl(cTOSControlStopPermanentAuthentication);  
   \   0029   A119           MOV       A,#25
   \   002B   ..             CALLT     [__T_TOSSendControl]
   \   002C   FA05           BR        ??LAPAfsTreatSecurityAccessService_71
   1071              }
   1072              else
   1073              {
   1074                  LAPKwpPrepareNegativeResponse(cLAPKwpInvalidFormat);
   \                     ??LAPAfsTreatSecurityAccessService_70:
   \   002E   A112           MOV       A,#18
   \   0030   9A....         CALL      LAPKwpPrepareNegativeResponse
   1075              }
   1076              LAPKwpSetServiceIsFinished();
   \                     ??LAPAfsTreatSecurityAccessService_71:
   \   0033   9B....         BR        N:?Subroutine1
   \   0036                  REQUIRE ?CL78K_V4_6_L00
   1077          }
   1078          
   1079          //==============================================================================
   1080          // DESCRIPTION:         LAPAfsTreatWriteDataByLocalIdentifierService
   1081          //
   1082          // PARAMETERS:          none
   1083          //
   1084          // RETURN VALUE:        none
   1085          //
   1086          // DESIGN INFORMATION:  refer to Detailed Design Document
   1087          //==============================================================================

   \                                 In  segment BCODE, align 1, keep-with-next
   1088          MEM_TYPE void LAPAfsTreatWriteDataByLocalIdentifierService(void)
   \                     LAPAfsTreatWriteDataByLocalIdentifierService:
   1089          {
   \   0000                  ; * Stack frame (at entry) *
   \   0000                  ; Param size: 0
   \   0000   B3             PUSH      BC
   \   0001                  ; Total Auto size: 2
   \   0001   B7             PUSH      HL
   1090          
   1091              U8  u8RequestStatusL;
   1092              U8  u8BitPositionL;
   1093              U8  u8BytePositionL;
   1094              U8  u8BitToWriteL;
   1095              U8  u8IndexL;
   1096              
   1097              u8RequestStatusL = cLAPKwpServiceIsCorrect;
   \   0002   A200           MOV       C,#0
   1098          
   1099              switch (LAPKwpReadDiagnosticRequest(1))
   \   0004   8E....         MOV       A,DATKwpRxBuffer+4
   \   0007   4D81           CMP       A,#129
   \   0009   BD03           BNZ       $+5
   \   000B   9B....         BR        N:??LAPAfsTreatSecurityAccessService_72
   \   000E   4DD0           CMP       A,#208
   \   0010   AD0A           BZ        ??LAPAfsTreatSecurityAccessService_73
   \   0012   4DD1           CMP       A,#209
   \   0014   BD03           BNZ       $+5
   \   0016   9B....         BR        N:??LAPAfsTreatSecurityAccessService_74
   \   0019   9B....         BR        N:??LAPAfsTreatSecurityAccessService_75
   1100              {
   1101          
   1102              case cWDBLID_GeneralParamBitToBitID:
   1103                  
   1104                  if(LAPKwpIsServiceTreated() == cFalse)    
   \                     ??LAPAfsTreatSecurityAccessService_73:
   \   001C   8E....         MOV       A,u8LAPKwpRequestStatus
   \   001F   4D02           CMP       A,#2
   \   0021   BD03           BNZ       $+5
   \   0023   9B....         BR        N:??LAPAfsTreatSecurityAccessService_76
   1105                  {
   1106                      u8BitPositionL =  LAPKwpReadDiagnosticRequest(cByte2);
   \   0026   8E....         MOV       A,DATKwpRxBuffer+5
   \   0029   73             MOV       B,A
   1107                      u8BytePositionL = LAPKwpReadDiagnosticRequest(cByte3);
   \   002A   8E....         MOV       A,DATKwpRxBuffer+6
   \   002D   70             MOV       X,A
   1108                      if (LAPKwpReadDiagnosticRequest(cByte4) == 0)
   \   002E   8E....         MOV       A,DATKwpRxBuffer+7
   \   0031   4D00           CMP       A,#0
   \   0033   AD02           BZ        ??LAPAfsTreatSecurityAccessService_77
   1109                      {
   1110                          u8BitToWriteL = 0;
   1111                      }
   1112                      else
   1113                      {
   1114                          u8BitToWriteL = 1;
   \   0035   A201           MOV       C,#1
   1115                      }
   1116          
   1117                      if (  ( mDATRead(U8Bit,DATKwpRxFrameLgth,Default) == cWDBLIDReq_GeneralParamBitToBit_Lgth)
   1118                          &&( u8BytePositionL >= 1) && ( u8BytePositionL <= cByte4)
   1119                          &&( u8BitPositionL  < c8Bits)  )
   \                     ??LAPAfsTreatSecurityAccessService_77:
   \   0037   8E....         MOV       A,DATKwpRxFrameLgth
   \   003A   4D05           CMP       A,#5
   \   003C   AD03           BZ        $+5
   \   003E   9B....         BR        N:??LAPAfsTreatSecurityAccessService_75
   \   0041   60             MOV       A,X
   \   0042   4D00           CMP       A,#0
   \   0044   BD03           BNZ       $+5
   \   0046   9B....         BR        N:??LAPAfsTreatSecurityAccessService_75
   \   0049   4D05           CMP       A,#5
   \   004B   8D03           BC        $+5
   \   004D   9B....         BR        N:??LAPAfsTreatSecurityAccessService_75
   \   0050   63             MOV       A,B
   \   0051   4D08           CMP       A,#8
   \   0053   8D03           BC        $+5
   \   0055   9B....         BR        N:??LAPAfsTreatSecurityAccessService_75
   1120                      {    
   1121                          
   1122                          u8IndexL = (U8)(((U8)(u8BytePositionL-1)<<(U8)c3Bits)| u8BitPositionL);
   \   0058   50             DEC       X
   \   0059   60             MOV       A,X
   \   005A   A008           MOV       X,#8
   \   005C   3188           MULU      X
   \   005E   60             MOV       A,X
   \   005F   616B           OR        A,B
   \   0061   73             MOV       B,A
   1123          
   1124                          switch(u8IndexL)
   \   0062   16....         MOVW      HL,#`?<Jumptable for LAPAfsTreatWriteDataByLocalIde_0`
   \   0065   9B....         BR        ?C_SSWITCH_L10
   1125                          {
   1126                          case cIndexDEM_SURVIT:        
   1127                              mDATWrite(U1Bit,EEP_DEM_SURVIT,    u8BitToWriteL, Immediate);
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_0:
   \   0068   16....         MOVW      HL,#DATDbkMirrors+24
   \   006B   87             MOV       A,[HL]
   \   006C   5D01           AND       A,#1
   \   006E   614A           CMP       A,C
   \   0070   AD14           BZ        ??LAPAfsTreatSecurityAccessService_78
   \   0072   62             MOV       A,C
   \   0073   4D00           CMP       A,#0
   \   0075   87             MOV       A,[HL]
   \   0076   AD04           BZ        ??LAPAfsTreatSecurityAccessService_79
   \   0078   6D01           OR        A,#1
   \   007A   FA02           BR        ??LAPAfsTreatSecurityAccessService_80
   \                     ??LAPAfsTreatSecurityAccessService_79:
   \   007C   5DFE           AND       A,#254
   \                     ??LAPAfsTreatSecurityAccessService_80:
   \   007E   9E....         MOV       DATDbkMirrors+24,A
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_1:
   \   0081   A101           MOV       A,#1
   \   0083   9A....         CALL      DATDbkStartUpdate
   \                     ??LAPAfsTreatSecurityAccessService_78:
   \   0086   63             MOV       A,B
   \   0087   4D02           CMP       A,#2
   \   0089   BD03           BNZ       $+5
   \   008B   9B....         BR        N:??LAPAfsTreatSecurityAccessService_81
   1128                              break;                                                     
   1129                          case cIndexCALALPRI:        
   1130                              mDATWrite(U1Bit,EEP_CALALPRI,      u8BitToWriteL, Immediate);
   1131                              break;                                                     
   1132                          case cIndexCALVERDI:        
   1133                              // Cm006292: Request for this parameter should not be rejected
   1134                              LAPKwpSetServiceIsFinished();
   1135                              break;
   1136                          case cIndexAUTDEGIVRAGE:        
   1137                              mDATWrite(U1Bit,EEP_AUTDEGIVRAGE,  u8BitToWriteL, Immediate);
   1138                              break;                                                     
   1139                          case cIndexRELAIS_DEM:        
   1140                              mDATWrite(U1Bit,EEP_RELAIS_DEM,    u8BitToWriteL, Immediate);
   1141                              break;                                                     
   1142                          case cIndexDETCHOC:        
   1143                              mDATWrite(U1Bit,EEP_DETCHOC,       u8BitToWriteL, Immediate);
   1144                              break;                                                     
   1145                          case cIndexCONDATMPO:        
   1146                              mDATWrite(U1Bit,EEP_CONDATMPO,     u8BitToWriteL, Immediate);
   1147                              break;                                                     
   1148                          case cIndexCONDAROU:        
   1149                              mDATWrite(U1Bit,EEP_CONDAROU,      u8BitToWriteL, Immediate);
   1150                              break;                                                     
   1151                          case cIndexCARCLIENT:        
   1152                              mDATWrite(U1Bit,EEP_CARCLIENT,     u8BitToWriteL, Immediate);
   1153                              break;                                                     
   1154                          case cIndexALIM_PLAF:        
   1155                              mDATWrite(U1Bit,EEP_ALIM_PLAF,     u8BitToWriteL, Immediate);
   1156                              break;                                                     
   1157                          case cIndexPIL_PLAF:        
   1158                              mDATWrite(U1Bit,EEP_PIL_PLAF,      u8BitToWriteL, Immediate);
   1159                              break;                                                     
   1160                          case cIndexVERLOG_ALGO:
   1161                              // do nothing: for compatibility
   1162                              break;
   1163                          case cIndexSDO:        
   1164                              mDATWrite(U1Bit,EEP_SDO,           u8BitToWriteL, Immediate);
   1165                              break;
   1166                          case cIndexCPE_IMPULS:        
   1167                              mDATWrite(U1Bit,EEP_CPE_IMPULS,    u8BitToWriteL, Immediate);
   1168                              break;                                                     
   1169                          case cIndexFEU_BROUILLARD:
   1170                              if(u8BitToWriteL == 1) // prsFS_EXL-211
   1171                              {
   1172                                  // inhibit RR_Wiper function
   1173                                  mDATWrite(U1Bit,EEP_EV_ARR, 0, Immediate);    
   1174                              }
   1175                              mDATWrite(U1Bit,EEP_FEU_BROUILLARD,u8BitToWriteL, Immediate);
   1176                              break;                                                     
   1177                          case cIndexEV_ARR:
   1178                              if(u8BitToWriteL == 1) // prsFS_EXL-212
   1179                              {
   1180                                  // inhibit RR_Fog function 
   1181                                  mDATWrite(U1Bit,EEP_FEU_BROUILLARD, 0, Immediate);    
   1182                              }
   1183                              mDATWrite(U1Bit,EEP_EV_ARR,        u8BitToWriteL, Immediate);
   1184                              break;                                                     
   1185                          case cIndexINFO_REGIME:        
   1186                              mDATWrite(U1Bit,EEP_INFO_REGIME,   u8BitToWriteL, Immediate);
   1187                              break;                                                     
   1188                          case cIndexCLI_REM:        
   1189                              mDATWrite(U1Bit,EEP_CLI_REM,       u8BitToWriteL, Immediate);
   1190                              break;                                                     
   1191                          case cIndexCAD_BAGUE_AV:        
   1192                              mDATWrite(U1Bit,EEP_CAD_BAGUE_AV,  u8BitToWriteL, Immediate);
   1193                              break;                                                     
   1194                          case cIndexAUTCRASH:        
   1195                              mDATWrite(U1Bit,EEP_AUTCRASH,      u8BitToWriteL, Immediate);
   1196                              break;                                                     
   1197                          case cIndexAUTVERLOG:        
   1198                              mDATWrite(U1Bit,EEP_AUTVERLOG,     u8BitToWriteL, Immediate);
   1199                              break;                                                     
   1200                          case cIndexAUTPLAF:        
   1201                              mDATWrite(U1Bit,EEP_AUTPLAF,       u8BitToWriteL, Immediate);
   1202                              break;                                                     
   1203                          case cIndexKEY_BUTTON:        
   1204                              mDATWrite(U1Bit,EEP_KEY_BUTTON,   u8BitToWriteL, Immediate);
   1205                              break;                                                     
   1206                          case cIndexCALALARM:
   1207                              // prsFS_ASA-253
   1208                              if(mDATRead(U1Bit, EEP_CAR_SECURE, Default) == cFalse)
   1209                              {
   1210                                  mDATWrite(U1Bit,EEP_CALALARM, u8BitToWriteL, Immediate);
   1211                              }
   1212                              else
   1213                              {
   1214                                  u8RequestStatusL = cLAPKwpConditionNotCorrect;
   1215                                  LAPKwpSetServiceIsFinished();
   1216                              }                    
   1217                              break;                                                     
   1218                          case cIndexCALULKTR:       
   1219                              mDATWrite(U1Bit,EEP_CALULKTR,      u8BitToWriteL, Immediate);
   1220                              break;                                                     
   1221                          case cIndexAUTRECRF:        
   1222                              mDATWrite(U1Bit,EEP_AUTRECRF,      u8BitToWriteL, Immediate);
   1223                              break;                                                     
   1224                          case cIndexOUBLICEINTURE:        
   1225                              mDATWrite(U1Bit,EEP_OUBLICEINTURE, u8BitToWriteL, Immediate);
   1226                              break;
   1227                          default:
   1228                              // reserved bit    
   1229                              u8RequestStatusL = cLAPKwpInvalidFormat;
   1230                              LAPKwpSetServiceIsFinished();
   1231                              break;
   1232                          }
   1233                          
   1234                          if( (u8RequestStatusL == cLAPKwpServiceIsCorrect)
   1235                            &&(u8IndexL != cIndexCALVERDI))
   1236                          {
   1237                              LAPKwpSetServiceIsTreated();
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_2:
   \   008E   A102           MOV       A,#2
   \   0090   9E....         MOV       u8LAPKwpRequestStatus,A
   \   0093   9B....         BR        N:??LAPAfsTreatSecurityAccessService_82
   1238                          }
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_3:
   \   0096   A100           MOV       A,#0
   \   0098   16....         MOVW      HL,#DATDbkMirrors+24
   \   009B   7194           MOV1      CY,[HL].1
   \   009D   27             ROLC      A,0x1
   \   009E   614A           CMP       A,C
   \   00A0   ADE4           BZ        ??LAPAfsTreatSecurityAccessService_78
   \   00A2   62             MOV       A,C
   \   00A3   4D00           CMP       A,#0
   \   00A5   87             MOV       A,[HL]
   \   00A6   AD04           BZ        ??LAPAfsTreatSecurityAccessService_83
   \   00A8   6D02           OR        A,#2
   \   00AA   FAD2           BR        ??LAPAfsTreatSecurityAccessService_80
   \                     ??LAPAfsTreatSecurityAccessService_83:
   \   00AC   5DFD           AND       A,#253
   \   00AE   FACE           BR        ??LAPAfsTreatSecurityAccessService_80
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_4:
   \   00B0   A103           MOV       A,#3
   \   00B2   9E....         MOV       u8LAPKwpRequestStatus,A
   \   00B5   FACF           BR        ??LAPAfsTreatSecurityAccessService_78
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_5:
   \   00B7   A100           MOV       A,#0
   \   00B9   16....         MOVW      HL,#DATDbkMirrors+24
   \   00BC   71B4           MOV1      CY,[HL].3
   \   00BE   27             ROLC      A,0x1
   \   00BF   614A           CMP       A,C
   \   00C1   ADC3           BZ        ??LAPAfsTreatSecurityAccessService_78
   \   00C3   62             MOV       A,C
   \   00C4   4D00           CMP       A,#0
   \   00C6   87             MOV       A,[HL]
   \   00C7   AD04           BZ        ??LAPAfsTreatSecurityAccessService_84
   \   00C9   6D08           OR        A,#8
   \   00CB   FAB1           BR        ??LAPAfsTreatSecurityAccessService_80
   \                     ??LAPAfsTreatSecurityAccessService_84:
   \   00CD   5DF7           AND       A,#247
   \   00CF   FAAD           BR        ??LAPAfsTreatSecurityAccessService_80
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_6:
   \   00D1   A100           MOV       A,#0
   \   00D3   16....         MOVW      HL,#DATDbkMirrors+24
   \   00D6   71C4           MOV1      CY,[HL].4
   \   00D8   27             ROLC      A,0x1
   \   00D9   614A           CMP       A,C
   \   00DB   ADA9           BZ        ??LAPAfsTreatSecurityAccessService_78
   \   00DD   62             MOV       A,C
   \   00DE   4D00           CMP       A,#0
   \   00E0   87             MOV       A,[HL]
   \   00E1   AD04           BZ        ??LAPAfsTreatSecurityAccessService_85
   \   00E3   6D10           OR        A,#16
   \   00E5   FA97           BR        ??LAPAfsTreatSecurityAccessService_80
   \                     ??LAPAfsTreatSecurityAccessService_85:
   \   00E7   5DEF           AND       A,#239
   \   00E9   FA93           BR        ??LAPAfsTreatSecurityAccessService_80
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_7:
   \   00EB   A100           MOV       A,#0
   \   00ED   16....         MOVW      HL,#DATDbkMirrors+24
   \   00F0   71E4           MOV1      CY,[HL].6
   \   00F2   27             ROLC      A,0x1
   \   00F3   614A           CMP       A,C
   \   00F5   AD8F           BZ        ??LAPAfsTreatSecurityAccessService_78
   \   00F7   62             MOV       A,C
   \   00F8   4D00           CMP       A,#0
   \   00FA   87             MOV       A,[HL]
   \   00FB   AD05           BZ        ??LAPAfsTreatSecurityAccessService_86
   \   00FD   6D40           OR        A,#64
   \   00FF   9B....         BR        N:??LAPAfsTreatSecurityAccessService_80
   \                     ??LAPAfsTreatSecurityAccessService_86:
   \   0102   5DBF           AND       A,#191
   \   0104   9B....         BR        N:??LAPAfsTreatSecurityAccessService_80
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_8:
   \   0107   16....         MOVW      HL,#DATDbkMirrors+25
   \   010A   87             MOV       A,[HL]
   \   010B   5D01           AND       A,#1
   \   010D   614A           CMP       A,C
   \   010F   BD03           BNZ       $+5
   \   0111   9B....         BR        N:??LAPAfsTreatSecurityAccessService_78
   \   0114   62             MOV       A,C
   \   0115   4D00           CMP       A,#0
   \   0117   AD05           BZ        ??LAPAfsTreatSecurityAccessService_87
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_9:
   \   0119   7182           SET1      [HL].0
   \   011B   9B....         BR        N:??LAPAfsTreatWriteDataByLocalIdentifierService_1
   \                     ??LAPAfsTreatSecurityAccessService_87:
   \   011E   7183           CLR1      [HL].0
   \   0120   9B....         BR        N:??LAPAfsTreatWriteDataByLocalIdentifierService_1
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_10:
   \   0123   A100           MOV       A,#0
   \   0125   16....         MOVW      HL,#DATDbkMirrors+25
   \   0128   71A4           MOV1      CY,[HL].2
   \   012A   27             ROLC      A,0x1
   \   012B   614A           CMP       A,C
   \   012D   BD03           BNZ       $+5
   \   012F   9B....         BR        N:??LAPAfsTreatSecurityAccessService_78
   \   0132   62             MOV       A,C
   \   0133   4D00           CMP       A,#0
   \   0135   AD05           BZ        ??LAPAfsTreatSecurityAccessService_88
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_11:
   \   0137   71A2           SET1      [HL].2
   \   0139   9B....         BR        N:??LAPAfsTreatWriteDataByLocalIdentifierService_1
   \                     ??LAPAfsTreatSecurityAccessService_88:
   \   013C   71A3           CLR1      [HL].2
   \   013E   9B....         BR        N:??LAPAfsTreatWriteDataByLocalIdentifierService_1
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_12:
   \   0141   A100           MOV       A,#0
   \   0143   16....         MOVW      HL,#DATDbkMirrors+25
   \   0146   71B4           MOV1      CY,[HL].3
   \   0148   27             ROLC      A,0x1
   \   0149   614A           CMP       A,C
   \   014B   BD03           BNZ       $+5
   \   014D   9B....         BR        N:??LAPAfsTreatSecurityAccessService_78
   \   0150   62             MOV       A,C
   \   0151   4D00           CMP       A,#0
   \   0153   AD05           BZ        ??LAPAfsTreatSecurityAccessService_89
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_13:
   \   0155   71B2           SET1      [HL].3
   \   0157   9B....         BR        N:??LAPAfsTreatWriteDataByLocalIdentifierService_1
   \                     ??LAPAfsTreatSecurityAccessService_89:
   \   015A   71B3           CLR1      [HL].3
   \   015C   9B....         BR        N:??LAPAfsTreatWriteDataByLocalIdentifierService_1
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_14:
   \   015F   A100           MOV       A,#0
   \   0161   16....         MOVW      HL,#DATDbkMirrors+25
   \   0164   71D4           MOV1      CY,[HL].5
   \   0166   27             ROLC      A,0x1
   \   0167   614A           CMP       A,C
   \   0169   BD03           BNZ       $+5
   \   016B   9B....         BR        N:??LAPAfsTreatSecurityAccessService_78
   \   016E   62             MOV       A,C
   \   016F   4D00           CMP       A,#0
   \   0171   AD05           BZ        ??LAPAfsTreatSecurityAccessService_90
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_15:
   \   0173   71D2           SET1      [HL].5
   \   0175   9B....         BR        N:??LAPAfsTreatWriteDataByLocalIdentifierService_1
   \                     ??LAPAfsTreatSecurityAccessService_90:
   \   0178   71D3           CLR1      [HL].5
   \   017A   9B....         BR        N:??LAPAfsTreatWriteDataByLocalIdentifierService_1
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_16:
   \   017D   A100           MOV       A,#0
   \   017F   16....         MOVW      HL,#DATDbkMirrors+25
   \   0182   71E4           MOV1      CY,[HL].6
   \   0184   27             ROLC      A,0x1
   \   0185   614A           CMP       A,C
   \   0187   BD03           BNZ       $+5
   \   0189   9B....         BR        N:??LAPAfsTreatSecurityAccessService_78
   \   018C   62             MOV       A,C
   \   018D   4D00           CMP       A,#0
   \   018F   AD05           BZ        ??LAPAfsTreatSecurityAccessService_91
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_17:
   \   0191   71E2           SET1      [HL].6
   \   0193   9B....         BR        N:??LAPAfsTreatWriteDataByLocalIdentifierService_1
   \                     ??LAPAfsTreatSecurityAccessService_91:
   \   0196   71E3           CLR1      [HL].6
   \   0198   9B....         BR        N:??LAPAfsTreatWriteDataByLocalIdentifierService_1
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_18:
   \   019B   16....         MOVW      HL,#DATDbkMirrors+28
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_19:
   \   019E   87             MOV       A,[HL]
   \   019F   5D01           AND       A,#1
   \   01A1   614A           CMP       A,C
   \   01A3   BD03           BNZ       $+5
   \   01A5   9B....         BR        N:??LAPAfsTreatSecurityAccessService_78
   \   01A8   62             MOV       A,C
   \   01A9   4D00           CMP       A,#0
   \   01AB   AD03           BZ        $+5
   \   01AD   9B....         BR        N:??LAPAfsTreatWriteDataByLocalIdentifierService_9
   \   01B0   9B....         BR        N:??LAPAfsTreatSecurityAccessService_87
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_20:
   \   01B3   A100           MOV       A,#0
   \   01B5   16....         MOVW      HL,#DATDbkMirrors+26
   \   01B8   7194           MOV1      CY,[HL].1
   \   01BA   27             ROLC      A,0x1
   \   01BB   614A           CMP       A,C
   \   01BD   BD03           BNZ       $+5
   \   01BF   9B....         BR        N:??LAPAfsTreatSecurityAccessService_78
   \   01C2   62             MOV       A,C
   \   01C3   4D00           CMP       A,#0
   \   01C5   AD05           BZ        ??LAPAfsTreatSecurityAccessService_92
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_21:
   \   01C7   7192           SET1      [HL].1
   \   01C9   9B....         BR        N:??LAPAfsTreatWriteDataByLocalIdentifierService_1
   \                     ??LAPAfsTreatSecurityAccessService_92:
   \   01CC   7193           CLR1      [HL].1
   \   01CE   9B....         BR        N:??LAPAfsTreatWriteDataByLocalIdentifierService_1
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_22:
   \   01D1   62             MOV       A,C
   \   01D2   51             DEC       A
   \   01D3   BD0D           BNZ       ??LAPAfsTreatSecurityAccessService_93
   \   01D5   16....         MOVW      HL,#DATDbkMirrors+26
   \   01D8   31B707         BF        [HL].3, ??LAPAfsTreatSecurityAccessService_93
   \   01DB   A101           MOV       A,#1
   \   01DD   71B3           CLR1      [HL].3
   \   01DF   9A....         CALL      DATDbkStartUpdate
   \                     ??LAPAfsTreatSecurityAccessService_93:
   \   01E2   A100           MOV       A,#0
   \   01E4   16....         MOVW      HL,#DATDbkMirrors+26
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_23:
   \   01E7   71A4           MOV1      CY,[HL].2
   \   01E9   27             ROLC      A,0x1
   \   01EA   614A           CMP       A,C
   \   01EC   BD03           BNZ       $+5
   \   01EE   9B....         BR        N:??LAPAfsTreatSecurityAccessService_78
   \   01F1   62             MOV       A,C
   \   01F2   4D00           CMP       A,#0
   \   01F4   AD03           BZ        $+5
   \   01F6   9B....         BR        N:??LAPAfsTreatWriteDataByLocalIdentifierService_11
   \   01F9   9B....         BR        N:??LAPAfsTreatSecurityAccessService_88
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_24:
   \   01FC   62             MOV       A,C
   \   01FD   51             DEC       A
   \   01FE   BD0D           BNZ       ??LAPAfsTreatSecurityAccessService_94
   \   0200   16....         MOVW      HL,#DATDbkMirrors+26
   \   0203   31A707         BF        [HL].2, ??LAPAfsTreatSecurityAccessService_94
   \   0206   A101           MOV       A,#1
   \   0208   71A3           CLR1      [HL].2
   \   020A   9A....         CALL      DATDbkStartUpdate
   \                     ??LAPAfsTreatSecurityAccessService_94:
   \   020D   A100           MOV       A,#0
   \   020F   16....         MOVW      HL,#DATDbkMirrors+26
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_25:
   \   0212   71B4           MOV1      CY,[HL].3
   \   0214   27             ROLC      A,0x1
   \   0215   614A           CMP       A,C
   \   0217   BD03           BNZ       $+5
   \   0219   9B....         BR        N:??LAPAfsTreatSecurityAccessService_78
   \   021C   62             MOV       A,C
   \   021D   4D00           CMP       A,#0
   \   021F   AD03           BZ        $+5
   \   0221   9B....         BR        N:??LAPAfsTreatWriteDataByLocalIdentifierService_13
   \   0224   9B....         BR        N:??LAPAfsTreatSecurityAccessService_89
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_26:
   \   0227   A100           MOV       A,#0
   \   0229   16....         MOVW      HL,#DATDbkMirrors+26
   \   022C   71C4           MOV1      CY,[HL].4
   \   022E   27             ROLC      A,0x1
   \   022F   614A           CMP       A,C
   \   0231   BD03           BNZ       $+5
   \   0233   9B....         BR        N:??LAPAfsTreatSecurityAccessService_78
   \   0236   62             MOV       A,C
   \   0237   4D00           CMP       A,#0
   \   0239   AD05           BZ        ??LAPAfsTreatSecurityAccessService_95
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_27:
   \   023B   71C2           SET1      [HL].4
   \   023D   9B....         BR        N:??LAPAfsTreatWriteDataByLocalIdentifierService_1
   \                     ??LAPAfsTreatSecurityAccessService_95:
   \   0240   71C3           CLR1      [HL].4
   \   0242   9B....         BR        N:??LAPAfsTreatWriteDataByLocalIdentifierService_1
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_28:
   \   0245   A100           MOV       A,#0
   \   0247   16....         MOVW      HL,#DATDbkMirrors+26
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_29:
   \   024A   71D4           MOV1      CY,[HL].5
   \   024C   27             ROLC      A,0x1
   \   024D   614A           CMP       A,C
   \   024F   BD03           BNZ       $+5
   \   0251   9B....         BR        N:??LAPAfsTreatSecurityAccessService_78
   \   0254   62             MOV       A,C
   \   0255   4D00           CMP       A,#0
   \   0257   AD03           BZ        $+5
   \   0259   9B....         BR        N:??LAPAfsTreatWriteDataByLocalIdentifierService_15
   \   025C   9B....         BR        N:??LAPAfsTreatSecurityAccessService_90
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_30:
   \   025F   A100           MOV       A,#0
   \   0261   16....         MOVW      HL,#DATDbkMirrors+26
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_31:
   \   0264   71E4           MOV1      CY,[HL].6
   \   0266   27             ROLC      A,0x1
   \   0267   614A           CMP       A,C
   \   0269   BD03           BNZ       $+5
   \   026B   9B....         BR        N:??LAPAfsTreatSecurityAccessService_78
   \   026E   62             MOV       A,C
   \   026F   4D00           CMP       A,#0
   \   0271   AD03           BZ        $+5
   \   0273   9B....         BR        N:??LAPAfsTreatWriteDataByLocalIdentifierService_17
   \   0276   9B....         BR        N:??LAPAfsTreatSecurityAccessService_91
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_32:
   \   0279   A100           MOV       A,#0
   \   027B   16....         MOVW      HL,#DATDbkMirrors+26
   \   027E   71F4           MOV1      CY,[HL].7
   \   0280   27             ROLC      A,0x1
   \   0281   614A           CMP       A,C
   \   0283   BD03           BNZ       $+5
   \   0285   9B....         BR        N:??LAPAfsTreatSecurityAccessService_78
   \   0288   62             MOV       A,C
   \   0289   4D00           CMP       A,#0
   \   028B   AD05           BZ        ??LAPAfsTreatSecurityAccessService_96
   \   028D   71F2           SET1      [HL].7
   \   028F   9B....         BR        N:??LAPAfsTreatWriteDataByLocalIdentifierService_1
   \                     ??LAPAfsTreatSecurityAccessService_96:
   \   0292   71F3           CLR1      [HL].7
   \   0294   9B....         BR        N:??LAPAfsTreatWriteDataByLocalIdentifierService_1
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_33:
   \   0297   16....         MOVW      HL,#DATDbkMirrors+27
   \   029A   9B....         BR        N:??LAPAfsTreatWriteDataByLocalIdentifierService_19
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_34:
   \   029D   A100           MOV       A,#0
   \   029F   16....         MOVW      HL,#DATDbkMirrors+27
   \   02A2   7194           MOV1      CY,[HL].1
   \   02A4   27             ROLC      A,0x1
   \   02A5   614A           CMP       A,C
   \   02A7   BD03           BNZ       $+5
   \   02A9   9B....         BR        N:??LAPAfsTreatSecurityAccessService_78
   \   02AC   62             MOV       A,C
   \   02AD   4D00           CMP       A,#0
   \   02AF   AD03           BZ        $+5
   \   02B1   9B....         BR        N:??LAPAfsTreatWriteDataByLocalIdentifierService_21
   \   02B4   9B....         BR        N:??LAPAfsTreatSecurityAccessService_92
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_35:
   \   02B7   A100           MOV       A,#0
   \   02B9   16....         MOVW      HL,#DATDbkMirrors+27
   \   02BC   9B....         BR        N:??LAPAfsTreatWriteDataByLocalIdentifierService_23
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_36:
   \   02BF   16....         MOVW      HL,#DATDbkMirrors+27
   \   02C2   31F605         BT        [HL].7, ??LAPAfsTreatSecurityAccessService_97
   \   02C5   A100           MOV       A,#0
   \   02C7   9B....         BR        N:??LAPAfsTreatWriteDataByLocalIdentifierService_25
   \                     ??LAPAfsTreatSecurityAccessService_97:
   \   02CA   A103           MOV       A,#3
   \   02CC   A222           MOV       C,#34
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_37:
   \   02CE   9E....         MOV       u8LAPKwpRequestStatus,A
   1239                          
   1240                      }
   1241                      else
   1242                      {
   1243                          u8RequestStatusL = cLAPKwpInvalidFormat;
   1244                          LAPKwpSetServiceIsFinished();
   1245                      }
   1246                      
   1247                  }
   1248                  else     // service is already started, waiting write to be finished
   1249                  {
   1250                      if(mDATRead(U1Bit,IsEepGroupGeneralParameterBankProcessing,Default) == cFalse)
   1251                      {
   1252                          if(mDATRead(U1Bit,IsEepGroupGeneralParameterBankWriteOk,Default) == cFalse)
   1253                          {
   1254                              u8RequestStatusL = cLAPKwpFaultUponWriting;
   1255                          }
   1256          
   1257                          LAPKwpSetServiceIsFinished();       // prsFS_DIAG-919
   1258                      }
   1259          
   1260                  }
   1261                  break;
   1262              
   1263          
   1264              case cWDBLID_FactoryConfigID :
   1265                  if(LAPKwpIsServiceTreated() == cFalse)    
   1266                  {
   1267                      if(mDATRead(U8Bit,DATKwpRxFrameLgth,Default) == cWDBLIDReq_FactoryConfig_Lgth)
   1268                      {
   1269                          switch(LAPKwpReadDiagnosticRequest(cByte2))
   1270                          {
   1271                          case cNbTPS_RETARD_DETRESSE:
   1272                              mDATWrite(U8Bit, EEP_TPS_RETARD_DETRESSE,LAPKwpReadDiagnosticRequest(cByte3), Default);
   1273                              break;
   1274                          case cNbTIMER_DETRESSE:        
   1275                              mDATWrite(U8Bit, EEP_TIMER_DETRESSE,     LAPKwpReadDiagnosticRequest(cByte3), Default);
   1276                              break;
   1277                          case cNbTPS_APC:
   1278                              mDATWrite(U8Bit, EEP_TPS_APC,            LAPKwpReadDiagnosticRequest(cByte3), Default);
   1279                              break;
   1280                          case cNbTPS_PLAF:
   1281                              mDATWrite(U8Bit, EEP_TPS_PLAF,           LAPKwpReadDiagnosticRequest(cByte3), Default);
   1282                              break;
   1283                          case cNbTPS_ESSUIE_MINI:        
   1284                              mDATWrite(U8Bit, EEP_TPS_ESSUIE_MINI,    LAPKwpReadDiagnosticRequest(cByte3), Default);
   1285                              break;
   1286                          case cNbTPS_MAX_COUPLBLOC:
   1287                              mDATWrite(U8Bit, EEP_TPS_MAX_COUPLBLOC,  LAPKwpReadDiagnosticRequest(cByte3), Default);
   1288                              break;
   1289                          case cNbTPS_ARRET:
   1290                              mDATWrite(U8Bit, EEP_TPS_ARRET,          LAPKwpReadDiagnosticRequest(cByte3), Default);
   1291                              break;
   1292                          case cNbTPS_REPRISE:
   1293                              mDATWrite(U8Bit, EEP_TPS_REPRISE,        LAPKwpReadDiagnosticRequest(cByte3), Default);
   1294                              break;
   1295                          case cNbTPS_FILT_AF:
   1296                              mDATWrite(U8Bit, EEP_TPS_FILT_AF,         LAPKwpReadDiagnosticRequest(cByte3), Default);
   1297                              break;
   1298                          case cNbTPS_POSIT_BALAIS:
   1299                              mDATWrite(U8Bit, EEP_TPS_POSIT_BALAIS,   LAPKwpReadDiagnosticRequest(cByte3), Default);
   1300                              break;
   1301                          case cNbPROLONG_APPUI_COURT:
   1302                              mDATWrite(U8Bit, EEP_PROLONG_APPUI_COURT,LAPKwpReadDiagnosticRequest(cByte3), Default);
   1303                              break;
   1304                          case cNbPROLONG_APPUI_LONG:
   1305                              mDATWrite(U8Bit, EEP_PROLONG_APPUI_LONG, LAPKwpReadDiagnosticRequest(cByte3), Default);
   1306                              break;
   1307                          case cNbTPS_APPUILAV:
   1308                              mDATWrite(U8Bit, EEP_TPS_APPUILAV,       LAPKwpReadDiagnosticRequest(cByte3), Default);
   1309                              break;
   1310                          case cNbTPS_POSIT_BALAIS_AR:
   1311                              mDATWrite(U8Bit, EEP_TPS_POSIT_BALAIS_AR,LAPKwpReadDiagnosticRequest(cByte3), Default);
   1312                              break;
   1313                          case cNbPROLONG_APPUI_ARR:
   1314                              mDATWrite(U8Bit, EEP_PROLONG_APPUI_ARR,  LAPKwpReadDiagnosticRequest(cByte3), Default);
   1315                              break;
   1316                          case cNbSEUIL_VIT_CONDAROU:
   1317                              mDATWrite(U8Bit, EEP_SEUIL_VIT_CONDAROU, LAPKwpReadDiagnosticRequest(cByte3), Default);
   1318                              break;
   1319                          case cNbTPS_COM_MOTEUR:
   1320                              mDATWrite(U8Bit, EEP_TPS_COM_MOTEUR,     LAPKwpReadDiagnosticRequest(cByte3), Default);
   1321                              break;
   1322                          case cNbNBCOM_MAX:
   1323                              mDATWrite(U8Bit, EEP_NBCOM_MAX,          LAPKwpReadDiagnosticRequest(cByte3), Default);
   1324                              break;
   1325                          case cNbTPS_REF:
   1326                              mDATWrite(U8Bit, EEP_TPS_REF,            LAPKwpReadDiagnosticRequest(cByte3), Default);
   1327                              break;
   1328                          case cNbTIMER_RECONDA_AUTO:
   1329                              mDATWrite(U8Bit, EEP_TIMER_RECONDA_AUTO, LAPKwpReadDiagnosticRequest(cByte3), Default);
   1330                              break;
   1331                          case cNbN_MISE_APC:
   1332                              mDATWrite(U8Bit, EEP_N_MISE_APC,         LAPKwpReadDiagnosticRequest(cByte3), Default);
   1333                              break;
   1334                          case cNbTMPMERA:
   1335                              mDATWrite(U8Bit, EEP_TimeOutMERA,            LAPKwpReadDiagnosticRequest(cByte3), Default);
   1336                              break;
   1337                          case cNbTPS_OUVPORTE:
   1338                              mDATWrite(U8Bit, EEP_TPS_OUVPORTE,       LAPKwpReadDiagnosticRequest(cByte3), Default);
   1339                              break;
   1340                          case cNbTPS_TEMPO_DEG:
   1341                              mDATWrite(U8Bit, EEP_TPS_TEMPO_DEG,      LAPKwpReadDiagnosticRequest(cByte3), Default);
   1342                              break;
   1343                          case cNbTPS_IMPUL_MINI:
   1344                              mDATWrite(U8Bit, EEP_TPS_IMPUL_MINI,     LAPKwpReadDiagnosticRequest(cByte3), Default);
   1345                              break;
   1346                          case cNbSBR_ACTIVE_SPEED_THRESH_TP:
   1347                              mDATWrite(U8Bit, EEP_SBR_ACTIVE_SPEED_THRESH_TP,    LAPKwpReadDiagnosticRequest(cByte3), Default);
   1348                              break;
   1349                          case cNbSBR_TIMEOUT_TM_TP:
   1350                              mDATWrite(U8Bit, EEP_SBR_TIMEOUT_TM_TP,            LAPKwpReadDiagnosticRequest(cByte3), Default);
   1351                              break;
   1352                          case cNbMAX_NB_ALERT_SEQUENCES_TP:
   1353                              mDATWrite(U8Bit, EEP_MAX_NB_ALERT_SEQUENCES_TP,     LAPKwpReadDiagnosticRequest(cByte3), Default);
   1354                              break;
   1355                          case cNbTPS_BUZ_CLI:
   1356                              mDATWrite(U8Bit, EEP_TPS_BUZ_CLI,                   LAPKwpReadDiagnosticRequest(cByte3), Default);
   1357                              break;
   1358                          case cNbTPS_CLI:
   1359                              mDATWrite(U8Bit, EEP_TPS_CLI,                       LAPKwpReadDiagnosticRequest(cByte3), Default);
   1360                              break;
   1361                          case cNbTPS_CLIDEGRAD:
   1362                              mDATWrite(U8Bit, EEP_TPS_CLIDEGRAD,                 LAPKwpReadDiagnosticRequest(cByte3), Default);
   1363                              break;      
   1364                          default:
   1365                              u8RequestStatusL = cLAPKwpInvalidFormat;
   1366                              LAPKwpSetServiceIsFinished();
   1367                              break; 
   1368                          }
   1369                      
   1370                          if (u8RequestStatusL == cLAPKwpServiceIsCorrect)
   1371                          {
   1372                              mDATControl(Eep,UpDateEepGroupFactoryConfigBank);
   1373                              LAPKwpSetServiceIsTreated();
   1374                          }    
   1375                      
   1376                      }
   1377                      else
   1378                      {
   1379                          u8RequestStatusL = cLAPKwpInvalidFormat;
   1380                          LAPKwpSetServiceIsFinished();
   1381                      }
   1382          
   1383                  }
   1384                  else     // service is already started, waiting write to be finished
   1385                  {
   1386                      if(mDATRead(U1Bit,IsEepGroupFactoryConfigBankProcessing,Default) == cFalse)
   1387                      {
   1388                          if(mDATRead(U1Bit,IsEepGroupFactoryConfigBankWriteOk,Default) == cFalse)
   1389                          {
   1390                              u8RequestStatusL = cLAPKwpFaultUponWriting;
   1391                          }
   1392          
   1393                          LAPKwpSetServiceIsFinished();   // prsFS_DIAG-919
   1394                      }
   1395          
   1396                  }
   1397          
   1398                  break;
   1399          
   1400               case cWDBLID_VINID :
   1401                  if(LAPKwpIsServiceTreated() == cFalse)    
   1402                  {
   1403                  
   1404                      if ( mDATRead(U8Bit,DATKwpRxFrameLgth,Default) == cWDBLIDReq_VIN_Lgth)
   1405                      {
   1406                          for(u8IndexL=0; u8IndexL<cVIN_Lgth; u8IndexL++)
   1407                          {
   1408                              mDATWriteTable(U8Bit,EEP_VehicleIdentifierNumber,u8IndexL,LAPKwpReadDiagnosticRequest(cByte2+u8IndexL),Immediate);
   1409                          }
   1410                          LAPKwpSetServiceIsTreated();
   1411                      }
   1412                      else
   1413                      {
   1414                          u8RequestStatusL = cLAPKwpInvalidFormat;
   1415                          LAPKwpSetServiceIsFinished();
   1416                      }
   1417                  }
   1418                  else     // service is already started, waiting write to be finished
   1419                  {
   1420                      if(mDATRead(U1Bit,IsEepGroupVINBankProcessing,Default) == cFalse)
   1421                      {
   1422                          if(mDATRead(U1Bit,IsEepGroupVINBankWriteOk,Default) == cFalse)
   1423                          {
   1424                              u8RequestStatusL = cLAPKwpFaultUponWriting;
   1425                          }
   1426          
   1427                          LAPKwpSetServiceIsFinished();   // prsFS_DIAG-919
   1428                      }
   1429          
   1430                  }
   1431                  break;
   1432          
   1433              default :
   1434                  u8RequestStatusL = cLAPKwpInvalidFormat;
   1435                  LAPKwpSetServiceIsFinished();
   1436                  break;
   1437              }
   1438          
   1439              
   1440              if( LAPKwpIsServiceTreated() == cFalse )
   1441              {
   1442                  if(u8RequestStatusL != cLAPKwpServiceIsCorrect)
   1443                  {
   1444                      LAPKwpPrepareNegativeResponse(u8RequestStatusL);
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_38:
   \   02D1   62             MOV       A,C
   \   02D2   9A....         CALL      LAPKwpPrepareNegativeResponse
   \   02D5   9B....         BR        N:??LAPAfsTreatSecurityAccessService_82
   1445                  }
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_39:
   \   02D8   A100           MOV       A,#0
   \   02DA   16....         MOVW      HL,#DATDbkMirrors+27
   \   02DD   71C4           MOV1      CY,[HL].4
   \   02DF   27             ROLC      A,0x1
   \   02E0   614A           CMP       A,C
   \   02E2   BD03           BNZ       $+5
   \   02E4   9B....         BR        N:??LAPAfsTreatSecurityAccessService_78
   \   02E7   62             MOV       A,C
   \   02E8   4D00           CMP       A,#0
   \   02EA   AD03           BZ        $+5
   \   02EC   9B....         BR        N:??LAPAfsTreatWriteDataByLocalIdentifierService_27
   \   02EF   9B....         BR        N:??LAPAfsTreatSecurityAccessService_95
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_40:
   \   02F2   A100           MOV       A,#0
   \   02F4   16....         MOVW      HL,#DATDbkMirrors+27
   \   02F7   9B....         BR        N:??LAPAfsTreatWriteDataByLocalIdentifierService_29
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_41:
   \   02FA   A100           MOV       A,#0
   \   02FC   16....         MOVW      HL,#DATDbkMirrors+27
   \   02FF   9B....         BR        N:??LAPAfsTreatWriteDataByLocalIdentifierService_31
   \                     ??LAPAfsTreatSecurityAccessService_75:
   \   0302   A103           MOV       A,#3
   \   0304   A212           MOV       C,#18
   \   0306   FAC6           BR        ??LAPAfsTreatWriteDataByLocalIdentifierService_37
   \                     ??LAPAfsTreatSecurityAccessService_76:
   \   0308   A101           MOV       A,#1
   \   030A   9A....         CALL      DATDbkIsBankProcessing
   \   030D   4D00           CMP       A,#0
   \   030F   AD03           BZ        $+5
   \   0311   9B....         BR        N:??LAPAfsTreatSecurityAccessService_81
   \   0314   A101           MOV       A,#1
   \   0316   9A....         CALL      DATDbkIsWriteOk
   \   0319   4D00           CMP       A,#0
   \   031B   BD02           BNZ       ??LAPAfsTreatSecurityAccessService_98
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_42:
   \   031D   A287           MOV       C,#135
   \                     ??LAPAfsTreatSecurityAccessService_98:
   \   031F   A103           MOV       A,#3
   \   0321   9E....         MOV       u8LAPKwpRequestStatus,A
   \   0324   62             MOV       A,C
   \   0325   4D00           CMP       A,#0
   \   0327   BDA8           BNZ       ??LAPAfsTreatWriteDataByLocalIdentifierService_38
   \   0329   9B....         BR        N:??LAPAfsTreatSecurityAccessService_99
   \                     ??LAPAfsTreatSecurityAccessService_74:
   \   032C   8E....         MOV       A,u8LAPKwpRequestStatus
   \   032F   4D02           CMP       A,#2
   \   0331   BD03           BNZ       $+5
   \   0333   9B....         BR        N:??LAPAfsTreatSecurityAccessService_100
   \   0336   8E....         MOV       A,DATKwpRxFrameLgth
   \   0339   4D04           CMP       A,#4
   \   033B   BDC5           BNZ       ??LAPAfsTreatSecurityAccessService_75
   \   033D   8E....         MOV       A,DATKwpRxBuffer+5
   \   0340   16....         MOVW      HL,#`?<Jumptable for LAPAfsTreatWriteDataByLocalIde_1`
   \   0343   9B....         BR        ?C_SSWITCH_L10
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_43:
   \   0346   8E....         MOV       A,DATDbkMirrors+48
   \   0349   48....         CMP       A,DATKwpRxBuffer+6
   \   034C   BD03           BNZ       $+5
   \   034E   9B....         BR        N:??LAPAfsTreatSecurityAccessService_101
   \   0351   8E....         MOV       A,DATKwpRxBuffer+6
   \   0354   9E....         MOV       DATDbkMirrors+48,A
   \   0357   A102           MOV       A,#2
   \   0359   9A....         CALL      DATDbkStartUpdate
   \   035C   9B....         BR        N:??LAPAfsTreatSecurityAccessService_101
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_44:
   \   035F   8E....         MOV       A,DATDbkMirrors+49
   \   0362   48....         CMP       A,DATKwpRxBuffer+6
   \   0365   BD03           BNZ       $+5
   \   0367   9B....         BR        N:??LAPAfsTreatSecurityAccessService_101
   \   036A   8E....         MOV       A,DATKwpRxBuffer+6
   \   036D   9E....         MOV       DATDbkMirrors+49,A
   \   0370   A102           MOV       A,#2
   \   0372   9A....         CALL      DATDbkStartUpdate
   \   0375   9B....         BR        N:??LAPAfsTreatSecurityAccessService_101
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_45:
   \   0378   8E....         MOV       A,DATDbkMirrors+33
   \   037B   48....         CMP       A,DATKwpRxBuffer+6
   \   037E   BD03           BNZ       $+5
   \   0380   9B....         BR        N:??LAPAfsTreatSecurityAccessService_101
   \   0383   8E....         MOV       A,DATKwpRxBuffer+6
   \   0386   9E....         MOV       DATDbkMirrors+33,A
   \   0389   A102           MOV       A,#2
   \   038B   9A....         CALL      DATDbkStartUpdate
   \   038E   9B....         BR        N:??LAPAfsTreatSecurityAccessService_101
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_46:
   \   0391   8E....         MOV       A,DATDbkMirrors+32
   \   0394   48....         CMP       A,DATKwpRxBuffer+6
   \   0397   BD03           BNZ       $+5
   \   0399   9B....         BR        N:??LAPAfsTreatSecurityAccessService_101
   \   039C   8E....         MOV       A,DATKwpRxBuffer+6
   \   039F   9E....         MOV       DATDbkMirrors+32,A
   \   03A2   A102           MOV       A,#2
   \   03A4   9A....         CALL      DATDbkStartUpdate
   \   03A7   9B....         BR        N:??LAPAfsTreatSecurityAccessService_101
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_47:
   \   03AA   8E....         MOV       A,DATDbkMirrors+42
   \   03AD   48....         CMP       A,DATKwpRxBuffer+6
   \   03B0   BD03           BNZ       $+5
   \   03B2   9B....         BR        N:??LAPAfsTreatSecurityAccessService_101
   \   03B5   8E....         MOV       A,DATKwpRxBuffer+6
   \   03B8   9E....         MOV       DATDbkMirrors+42,A
   \   03BB   A102           MOV       A,#2
   \   03BD   9A....         CALL      DATDbkStartUpdate
   \   03C0   9B....         BR        N:??LAPAfsTreatSecurityAccessService_101
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_48:
   \   03C3   8E....         MOV       A,DATDbkMirrors+36
   \   03C6   48....         CMP       A,DATKwpRxBuffer+6
   \   03C9   BD03           BNZ       $+5
   \   03CB   9B....         BR        N:??LAPAfsTreatSecurityAccessService_101
   \   03CE   8E....         MOV       A,DATKwpRxBuffer+6
   \   03D1   9E....         MOV       DATDbkMirrors+36,A
   \   03D4   A102           MOV       A,#2
   \   03D6   9A....         CALL      DATDbkStartUpdate
   \   03D9   9B....         BR        N:??LAPAfsTreatSecurityAccessService_101
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_49:
   \   03DC   8E....         MOV       A,DATDbkMirrors+37
   \   03DF   48....         CMP       A,DATKwpRxBuffer+6
   \   03E2   BD03           BNZ       $+5
   \   03E4   9B....         BR        N:??LAPAfsTreatSecurityAccessService_101
   \   03E7   8E....         MOV       A,DATKwpRxBuffer+6
   \   03EA   9E....         MOV       DATDbkMirrors+37,A
   \   03ED   A102           MOV       A,#2
   \   03EF   9A....         CALL      DATDbkStartUpdate
   \   03F2   9B....         BR        N:??LAPAfsTreatSecurityAccessService_101
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_50:
   \   03F5   8E....         MOV       A,DATDbkMirrors+44
   \   03F8   48....         CMP       A,DATKwpRxBuffer+6
   \   03FB   BD03           BNZ       $+5
   \   03FD   9B....         BR        N:??LAPAfsTreatSecurityAccessService_101
   \   0400   8E....         MOV       A,DATKwpRxBuffer+6
   \   0403   9E....         MOV       DATDbkMirrors+44,A
   \   0406   A102           MOV       A,#2
   \   0408   9A....         CALL      DATDbkStartUpdate
   \   040B   9B....         BR        N:??LAPAfsTreatSecurityAccessService_101
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_51:
   \   040E   8E....         MOV       A,DATDbkMirrors+35
   \   0411   48....         CMP       A,DATKwpRxBuffer+6
   \   0414   BD03           BNZ       $+5
   \   0416   9B....         BR        N:??LAPAfsTreatSecurityAccessService_101
   \   0419   8E....         MOV       A,DATKwpRxBuffer+6
   \   041C   9E....         MOV       DATDbkMirrors+35,A
   \   041F   A102           MOV       A,#2
   \   0421   9A....         CALL      DATDbkStartUpdate
   \   0424   9B....         BR        N:??LAPAfsTreatSecurityAccessService_101
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_52:
   \   0427   8E....         MOV       A,DATDbkMirrors+34
   \   042A   48....         CMP       A,DATKwpRxBuffer+6
   \   042D   BD03           BNZ       $+5
   \   042F   9B....         BR        N:??LAPAfsTreatSecurityAccessService_101
   \   0432   8E....         MOV       A,DATKwpRxBuffer+6
   \   0435   9E....         MOV       DATDbkMirrors+34,A
   \   0438   A102           MOV       A,#2
   \   043A   9A....         CALL      DATDbkStartUpdate
   \   043D   9B....         BR        N:??LAPAfsTreatSecurityAccessService_101
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_53:
   \   0440   8E....         MOV       A,DATDbkMirrors+38
   \   0443   48....         CMP       A,DATKwpRxBuffer+6
   \   0446   BD03           BNZ       $+5
   \   0448   9B....         BR        N:??LAPAfsTreatSecurityAccessService_101
   \   044B   8E....         MOV       A,DATKwpRxBuffer+6
   \   044E   9E....         MOV       DATDbkMirrors+38,A
   \   0451   A102           MOV       A,#2
   \   0453   9A....         CALL      DATDbkStartUpdate
   \   0456   9B....         BR        N:??LAPAfsTreatSecurityAccessService_101
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_54:
   \   0459   8E....         MOV       A,DATDbkMirrors+39
   \   045C   48....         CMP       A,DATKwpRxBuffer+6
   \   045F   BD03           BNZ       $+5
   \   0461   9B....         BR        N:??LAPAfsTreatSecurityAccessService_101
   \   0464   8E....         MOV       A,DATKwpRxBuffer+6
   \   0467   9E....         MOV       DATDbkMirrors+39,A
   \   046A   A102           MOV       A,#2
   \   046C   9A....         CALL      DATDbkStartUpdate
   \   046F   9B....         BR        N:??LAPAfsTreatSecurityAccessService_101
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_55:
   \   0472   8E....         MOV       A,DATDbkMirrors+40
   \   0475   48....         CMP       A,DATKwpRxBuffer+6
   \   0478   BD03           BNZ       $+5
   \   047A   9B....         BR        N:??LAPAfsTreatSecurityAccessService_101
   \   047D   8E....         MOV       A,DATKwpRxBuffer+6
   \   0480   9E....         MOV       DATDbkMirrors+40,A
   \   0483   A102           MOV       A,#2
   \   0485   9A....         CALL      DATDbkStartUpdate
   \   0488   9B....         BR        N:??LAPAfsTreatSecurityAccessService_101
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_56:
   \   048B   8E....         MOV       A,DATDbkMirrors+43
   \   048E   48....         CMP       A,DATKwpRxBuffer+6
   \   0491   BD03           BNZ       $+5
   \   0493   9B....         BR        N:??LAPAfsTreatSecurityAccessService_101
   \   0496   8E....         MOV       A,DATKwpRxBuffer+6
   \   0499   9E....         MOV       DATDbkMirrors+43,A
   \   049C   A102           MOV       A,#2
   \   049E   9A....         CALL      DATDbkStartUpdate
   \   04A1   9B....         BR        N:??LAPAfsTreatSecurityAccessService_101
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_57:
   \   04A4   8E....         MOV       A,DATDbkMirrors+45
   \   04A7   48....         CMP       A,DATKwpRxBuffer+6
   \   04AA   BD03           BNZ       $+5
   \   04AC   9B....         BR        N:??LAPAfsTreatSecurityAccessService_101
   \   04AF   8E....         MOV       A,DATKwpRxBuffer+6
   \   04B2   9E....         MOV       DATDbkMirrors+45,A
   \   04B5   A102           MOV       A,#2
   \   04B7   9A....         CALL      DATDbkStartUpdate
   \   04BA   9B....         BR        N:??LAPAfsTreatSecurityAccessService_101
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_58:
   \   04BD   8E....         MOV       A,DATDbkMirrors+55
   \   04C0   48....         CMP       A,DATKwpRxBuffer+6
   \   04C3   BD03           BNZ       $+5
   \   04C5   9B....         BR        N:??LAPAfsTreatSecurityAccessService_101
   \   04C8   8E....         MOV       A,DATKwpRxBuffer+6
   \   04CB   9E....         MOV       DATDbkMirrors+55,A
   \   04CE   A102           MOV       A,#2
   \   04D0   9A....         CALL      DATDbkStartUpdate
   \   04D3   9B....         BR        N:??LAPAfsTreatSecurityAccessService_101
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_59:
   \   04D6   8E....         MOV       A,DATDbkMirrors+56
   \   04D9   48....         CMP       A,DATKwpRxBuffer+6
   \   04DC   BD03           BNZ       $+5
   \   04DE   9B....         BR        N:??LAPAfsTreatSecurityAccessService_101
   \   04E1   8E....         MOV       A,DATKwpRxBuffer+6
   \   04E4   9E....         MOV       DATDbkMirrors+56,A
   \   04E7   A102           MOV       A,#2
   \   04E9   9A....         CALL      DATDbkStartUpdate
   \   04EC   9B....         BR        N:??LAPAfsTreatSecurityAccessService_101
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_60:
   \   04EF   8E....         MOV       A,DATDbkMirrors+57
   \   04F2   48....         CMP       A,DATKwpRxBuffer+6
   \   04F5   BD03           BNZ       $+5
   \   04F7   9B....         BR        N:??LAPAfsTreatSecurityAccessService_101
   \   04FA   8E....         MOV       A,DATKwpRxBuffer+6
   \   04FD   9E....         MOV       DATDbkMirrors+57,A
   \   0500   A102           MOV       A,#2
   \   0502   9A....         CALL      DATDbkStartUpdate
   \   0505   9B....         BR        N:??LAPAfsTreatSecurityAccessService_101
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_61:
   \   0508   8E....         MOV       A,DATDbkMirrors+58
   \   050B   48....         CMP       A,DATKwpRxBuffer+6
   \   050E   BD03           BNZ       $+5
   \   0510   9B....         BR        N:??LAPAfsTreatSecurityAccessService_101
   \   0513   8E....         MOV       A,DATKwpRxBuffer+6
   \   0516   9E....         MOV       DATDbkMirrors+58,A
   \   0519   A102           MOV       A,#2
   \   051B   9A....         CALL      DATDbkStartUpdate
   \   051E   9B....         BR        N:??LAPAfsTreatSecurityAccessService_101
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_62:
   \   0521   8E....         MOV       A,DATDbkMirrors+59
   \   0524   48....         CMP       A,DATKwpRxBuffer+6
   \   0527   BD03           BNZ       $+5
   \   0529   9B....         BR        N:??LAPAfsTreatSecurityAccessService_101
   \   052C   8E....         MOV       A,DATKwpRxBuffer+6
   \   052F   9E....         MOV       DATDbkMirrors+59,A
   \   0532   A102           MOV       A,#2
   \   0534   9A....         CALL      DATDbkStartUpdate
   \   0537   9B....         BR        N:??LAPAfsTreatSecurityAccessService_101
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_63:
   \   053A   8E....         MOV       A,DATDbkMirrors+60
   \   053D   48....         CMP       A,DATKwpRxBuffer+6
   \   0540   BD03           BNZ       $+5
   \   0542   9B....         BR        N:??LAPAfsTreatSecurityAccessService_101
   \   0545   8E....         MOV       A,DATKwpRxBuffer+6
   \   0548   9E....         MOV       DATDbkMirrors+60,A
   \   054B   A102           MOV       A,#2
   \   054D   9A....         CALL      DATDbkStartUpdate
   \   0550   9B....         BR        N:??LAPAfsTreatSecurityAccessService_101
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_64:
   \   0553   8E....         MOV       A,DATDbkMirrors+65
   \   0556   48....         CMP       A,DATKwpRxBuffer+6
   \   0559   BD03           BNZ       $+5
   \   055B   9B....         BR        N:??LAPAfsTreatSecurityAccessService_101
   \   055E   8E....         MOV       A,DATKwpRxBuffer+6
   \   0561   9E....         MOV       DATDbkMirrors+65,A
   \   0564   A102           MOV       A,#2
   \   0566   9A....         CALL      DATDbkStartUpdate
   \   0569   9B....         BR        N:??LAPAfsTreatSecurityAccessService_101
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_65:
   \   056C   8E....         MOV       A,DATDbkMirrors+61
   \   056F   48....         CMP       A,DATKwpRxBuffer+6
   \   0572   BD03           BNZ       $+5
   \   0574   9B....         BR        N:??LAPAfsTreatSecurityAccessService_101
   \   0577   8E....         MOV       A,DATKwpRxBuffer+6
   \   057A   9E....         MOV       DATDbkMirrors+61,A
   \   057D   A102           MOV       A,#2
   \   057F   9A....         CALL      DATDbkStartUpdate
   \   0582   9B....         BR        N:??LAPAfsTreatSecurityAccessService_101
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_66:
   \   0585   8E....         MOV       A,DATDbkMirrors+50
   \   0588   48....         CMP       A,DATKwpRxBuffer+6
   \   058B   BD03           BNZ       $+5
   \   058D   9B....         BR        N:??LAPAfsTreatSecurityAccessService_101
   \   0590   8E....         MOV       A,DATKwpRxBuffer+6
   \   0593   9E....         MOV       DATDbkMirrors+50,A
   \   0596   A102           MOV       A,#2
   \   0598   9A....         CALL      DATDbkStartUpdate
   \   059B   9B....         BR        N:??LAPAfsTreatSecurityAccessService_101
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_67:
   \   059E   8E....         MOV       A,DATDbkMirrors+51
   \   05A1   48....         CMP       A,DATKwpRxBuffer+6
   \   05A4   BD03           BNZ       $+5
   \   05A6   9B....         BR        N:??LAPAfsTreatSecurityAccessService_101
   \   05A9   8E....         MOV       A,DATKwpRxBuffer+6
   \   05AC   9E....         MOV       DATDbkMirrors+51,A
   \   05AF   A102           MOV       A,#2
   \   05B1   9A....         CALL      DATDbkStartUpdate
   \   05B4   FA7C           BR        ??LAPAfsTreatSecurityAccessService_101
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_68:
   \   05B6   8E....         MOV       A,DATDbkMirrors+53
   \   05B9   48....         CMP       A,DATKwpRxBuffer+6
   \   05BC   AD74           BZ        ??LAPAfsTreatSecurityAccessService_101
   \   05BE   8E....         MOV       A,DATKwpRxBuffer+6
   \   05C1   9E....         MOV       DATDbkMirrors+53,A
   \   05C4   A102           MOV       A,#2
   \   05C6   9A....         CALL      DATDbkStartUpdate
   \   05C9   FA67           BR        ??LAPAfsTreatSecurityAccessService_101
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_69:
   \   05CB   8E....         MOV       A,DATDbkMirrors+52
   \   05CE   48....         CMP       A,DATKwpRxBuffer+6
   \   05D1   AD5F           BZ        ??LAPAfsTreatSecurityAccessService_101
   \   05D3   8E....         MOV       A,DATKwpRxBuffer+6
   \   05D6   9E....         MOV       DATDbkMirrors+52,A
   \   05D9   A102           MOV       A,#2
   \   05DB   9A....         CALL      DATDbkStartUpdate
   \   05DE   FA52           BR        ??LAPAfsTreatSecurityAccessService_101
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_70:
   \   05E0   8E....         MOV       A,DATDbkMirrors+54
   \   05E3   48....         CMP       A,DATKwpRxBuffer+6
   \   05E6   AD4A           BZ        ??LAPAfsTreatSecurityAccessService_101
   \   05E8   8E....         MOV       A,DATKwpRxBuffer+6
   \   05EB   9E....         MOV       DATDbkMirrors+54,A
   \   05EE   A102           MOV       A,#2
   \   05F0   9A....         CALL      DATDbkStartUpdate
   \   05F3   FA3D           BR        ??LAPAfsTreatSecurityAccessService_101
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_71:
   \   05F5   8E....         MOV       A,DATDbkMirrors+62
   \   05F8   48....         CMP       A,DATKwpRxBuffer+6
   \   05FB   AD35           BZ        ??LAPAfsTreatSecurityAccessService_101
   \   05FD   8E....         MOV       A,DATKwpRxBuffer+6
   \   0600   9E....         MOV       DATDbkMirrors+62,A
   \   0603   A102           MOV       A,#2
   \   0605   9A....         CALL      DATDbkStartUpdate
   \   0608   FA28           BR        ??LAPAfsTreatSecurityAccessService_101
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_72:
   \   060A   8E....         MOV       A,DATDbkMirrors+46
   \   060D   48....         CMP       A,DATKwpRxBuffer+6
   \   0610   AD20           BZ        ??LAPAfsTreatSecurityAccessService_101
   \   0612   8E....         MOV       A,DATKwpRxBuffer+6
   \   0615   9E....         MOV       DATDbkMirrors+46,A
   \   0618   A102           MOV       A,#2
   \   061A   9A....         CALL      DATDbkStartUpdate
   \   061D   FA13           BR        ??LAPAfsTreatSecurityAccessService_101
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_73:
   \   061F   8E....         MOV       A,DATDbkMirrors+47
   \   0622   48....         CMP       A,DATKwpRxBuffer+6
   \   0625   AD0B           BZ        ??LAPAfsTreatSecurityAccessService_101
   \   0627   8E....         MOV       A,DATKwpRxBuffer+6
   \   062A   9E....         MOV       DATDbkMirrors+47,A
   \   062D   A102           MOV       A,#2
   \   062F   9A....         CALL      DATDbkStartUpdate
   \                     ??LAPAfsTreatSecurityAccessService_101:
   \   0632   A102           MOV       A,#2
   \   0634   9A....         CALL      DATDbkStartUpdate
   \   0637   9B....         BR        N:??LAPAfsTreatWriteDataByLocalIdentifierService_2
   \                     ??LAPAfsTreatSecurityAccessService_100:
   \   063A   A102           MOV       A,#2
   \   063C   9A....         CALL      DATDbkIsBankProcessing
   \   063F   4D00           CMP       A,#0
   \   0641   BD6B           BNZ       ??LAPAfsTreatSecurityAccessService_81
   \   0643   A102           MOV       A,#2
   \   0645   9A....         CALL      DATDbkIsWriteOk
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_74:
   \   0648   4D00           CMP       A,#0
   \   064A   AD03           BZ        $+5
   \   064C   9B....         BR        N:??LAPAfsTreatSecurityAccessService_98
   \   064F   9B....         BR        N:??LAPAfsTreatWriteDataByLocalIdentifierService_42
   \                     ??LAPAfsTreatSecurityAccessService_72:
   \   0652   8E....         MOV       A,u8LAPKwpRequestStatus
   \   0655   4D02           CMP       A,#2
   \   0657   AD45           BZ        ??LAPAfsTreatSecurityAccessService_102
   \   0659   8E....         MOV       A,DATKwpRxFrameLgth
   \   065C   4D15           CMP       A,#21
   \   065E   AD03           BZ        $+5
   \   0660   9B....         BR        N:??LAPAfsTreatSecurityAccessService_75
   \   0663   12....         MOVW      BC,#DATSbkMirrors
   \   0666   14....         MOVW      DE,#DATKwpRxBuffer+5
   \   0669   891C           MOVW      AX,SP
   \   066B   D6             MOVW      HL,AX
   \   066C   A113           MOV       A,#19
   \   066E   97             MOV       [HL],A
   \                     ??LAPAfsTreatWriteDataByLocalIdentifierService_75:
   \   066F   85             MOV       A,[DE]
   \   0670   70             MOV       X,A
   \   0671   B3             PUSH      BC
   \   0672   B6             POP       HL
   \   0673   E6             XCHW      AX,HL
   \   0674   CA2600         ADDW      AX,#38
   \   0677   E6             XCHW      AX,HL
   \   0678   87             MOV       A,[HL]
   \   0679   6148           CMP       A,X
   \   067B   AD0E           BZ        ??LAPAfsTreatSecurityAccessService_103
   \   067D   85             MOV       A,[DE]
   \   067E   B3             PUSH      BC
   \   067F   B6             POP       HL
   \   0680   E6             XCHW      AX,HL
   \   0681   CA2600         ADDW      AX,#38
   \   0684   E6             XCHW      AX,HL
   \   0685   97             MOV       [HL],A
   \   0686   A103           MOV       A,#3
   \   0688   9A....         CALL      DATSbkStartUpdate
   \                     ??LAPAfsTreatSecurityAccessService_103:
   \   068B   84             INCW      DE
   \   068C   B3             PUSH      BC
   \   068D   B6             POP       HL
   \   068E   86             INCW      HL
   \   068F   B7             PUSH      HL
   \   0690   B2             POP       BC
   \   0691   891C           MOVW      AX,SP
   \   0693   D6             MOVW      HL,AX
   \   0694   87             MOV       A,[HL]
   \   0695   51             DEC       A
   \   0696   97             MOV       [HL],A
   \   0697   BD03           BNZ       $+5
   \   0699   9B....         BR        N:??LAPAfsTreatWriteDataByLocalIdentifierService_2
   \   069C   FAD1           BR        ??LAPAfsTreatWriteDataByLocalIdentifierService_75
   \                     ??LAPAfsTreatSecurityAccessService_102:
   \   069E   A103           MOV       A,#3
   \   06A0   9A....         CALL      DATSbkIsBankProcessing
   \   06A3   4D00           CMP       A,#0
   \   06A5   BD07           BNZ       ??LAPAfsTreatSecurityAccessService_81
   \   06A7   A103           MOV       A,#3
   \   06A9   9A....         CALL      DATSbkIsWriteOk
   \   06AC   FA9A           BR        ??LAPAfsTreatWriteDataByLocalIdentifierService_74
   \                     ??LAPAfsTreatSecurityAccessService_81:
   \   06AE   8E....         MOV       A,u8LAPKwpRequestStatus
   \   06B1   4D02           CMP       A,#2
   \   06B3   AD0B           BZ        ??LAPAfsTreatSecurityAccessService_82
   1446                  else
   1447                  {
   1448                      LAPKwpWriteDiagnosticResponse(1,LAPKwpReadDiagnosticRequest(1));
   \                     ??LAPAfsTreatSecurityAccessService_99:
   \   06B5   8E....         MOV       A,DATKwpRxBuffer+4
   \   06B8   9E....         MOV       DATKwpTxBuffer+4,A
   1449                      LAPKwpPreparePositiveResponse(cByte2);
   \   06BB   A102           MOV       A,#2
   \   06BD   9A....         CALL      LAPKwpPreparePositiveResponse
   1450                  }
   1451                  
   1452          
   1453              }
   1454              
   1455          }
   \                     ??LAPAfsTreatSecurityAccessService_82:
   \   06C0   B0             POP       AX
   \   06C1   B2             POP       BC
   \   06C2   AF             RET       
   \   06C3                  REQUIRE ?CL78K_V4_6_L00
   1456          
   1457          //==============================================================================
   1458          // DESCRIPTION:         LAPAfsTreatReadDataByLocalIdentifierService
   1459          //
   1460          // PARAMETERS:          none
   1461          //
   1462          // RETURN VALUE:        none
   1463          //
   1464          // DESIGN INFORMATION:  refer to Detailed Design Document
   1465          //==============================================================================

   \                                 In  segment BCODE, align 1, keep-with-next
   1466          MEM_TYPE void LAPAfsTreatReadDataByLocalIdentifierService(void)
   \                     LAPAfsTreatReadDataByLocalIdentifierService:
   1467          {
   \   0000                  ; * Stack frame (at entry) *
   \   0000                  ; Param size: 0
   \   0000   B3             PUSH      BC
   \   0001                  ; Total Auto size: 4
   \   0001   B7             PUSH      HL
   \   0002   B7             PUSH      HL
   1468              U8  u8RequestStatusL;
   1469              U8  u8IndexL;
   1470              U8  u8TempVarL;
   1471              U8  u8ResponseLengthL ;
   1472              U8  u8PlafValueL;
   1473              U8  u8BytePos;
   1474              BOOL bDiagVERLOGON;
   1475            
   1476              u8RequestStatusL = cLAPKwpServiceIsCorrect;
   1477              u8ResponseLengthL = 0;
   \   0003   891C           MOVW      AX,SP
   \   0005   D6             MOVW      HL,AX
   \   0006   A100           MOV       A,#0
   \   0008   97             MOV       [HL],A
   1478              if (mDATRead(U8Bit,DATKwpRxFrameLgth,Default) == cRDBLIDReq_Lgth)
   \   0009   8E....         MOV       A,DATKwpRxFrameLgth
   \   000C   4D02           CMP       A,#2
   \   000E   AD03           BZ        $+5
   \   0010   9B....         BR        N:??LAPAfsTreatSecurityAccessService_104
   1479              {
   1480                  switch (LAPKwpReadDiagnosticRequest(1))
   \   0013   8E....         MOV       A,DATKwpRxBuffer+4
   \   0016   4D80           CMP       A,#128
   \   0018   BD03           BNZ       $+5
   \   001A   9B....         BR        N:??LAPAfsTreatSecurityAccessService_105
   \   001D   4D81           CMP       A,#129
   \   001F   BD03           BNZ       $+5
   \   0021   9B....         BR        N:??LAPAfsTreatSecurityAccessService_106
   \   0024   4D94           CMP       A,#148
   \   0026   AD34           BZ        ??LAPAfsTreatSecurityAccessService_107
   \   0028   4DA2           CMP       A,#162
   \   002A   BD03           BNZ       $+5
   \   002C   9B....         BR        N:??LAPAfsTreatSecurityAccessService_108
   \   002F   4DD0           CMP       A,#208
   \   0031   BD03           BNZ       $+5
   \   0033   9B....         BR        N:??LAPAfsTreatSecurityAccessService_109
   \   0036   4DD1           CMP       A,#209
   \   0038   BD03           BNZ       $+5
   \   003A   9B....         BR        N:??LAPAfsTreatSecurityAccessService_110
   \   003D   4DDB           CMP       A,#219
   \   003F   BD03           BNZ       $+5
   \   0041   9B....         BR        N:??LAPAfsTreatSecurityAccessService_111
   \   0044   4DDC           CMP       A,#220
   \   0046   BD03           BNZ       $+5
   \   0048   9B....         BR        N:??LAPAfsTreatSecurityAccessService_112
   \   004B   4DDD           CMP       A,#221
   \   004D   BD03           BNZ       $+5
   \   004F   9B....         BR        N:??LAPAfsTreatSecurityAccessService_113
   \   0052   4DDE           CMP       A,#222
   \   0054   BD03           BNZ       $+5
   \   0056   9B....         BR        N:??LAPAfsTreatSecurityAccessService_114
   \   0059   9B....         BR        N:??LAPAfsTreatSecurityAccessService_115
   1481                  {
   1482                  case cRDBLID_DefaultDataID : 
   1483                      for(u8IndexL=0;u8IndexL<(cRDBLIDAns_DefaultData_Lgth- cDataOffset);u8IndexL++)
   \                     ??LAPAfsTreatSecurityAccessService_107:
   \   005C   16....         MOVW      HL,#DATKwpTxBuffer+5
   \   005F   A011           MOV       X,#17
   1484                      {
   1485                          LAPKwpWriteDiagnosticResponse(cByte2+u8IndexL, 0x00);
   \                     ??LAPAfsTreatReadDataByLocalIdentifierService_0:
   \   0061   A100           MOV       A,#0
   \   0063   97             MOV       [HL],A
   1486                      }
   \   0064   86             INCW      HL
   \   0065   50             DEC       X
   \   0066   BDF9           BNZ       ??LAPAfsTreatReadDataByLocalIdentifierService_0
   1487                      u8IndexL = cByte2;
   1488                      //Read Faults Present
   1489                      //Byte 1
   1490                      //QACJ 3198: akodzhh: Variable is initialized and then modified bit by bit before being used
   1491                      u8TempVarL = 0x00;
   1492                      u8TempVarL =(mDATRead(U1Bit, DefBtonCpeOuv, Default))      |
   1493                                  (mDATRead(U1Bit, DefBtonCpeFer, Default)  <<c1Bits) |
   1494                                  (mDATRead(U1Bit, DefAFAV,       Default)  <<c2Bits) |
   1495                                  (mDATRead(U1Bit, DefAFAR,       Default)  <<c3Bits) |
   1496                                  (mDATRead(U1Bit, DefAirbag,     Default)  <<c4Bits) |
   1497                                  (((U1)(mDATRead(U1Bit, DefClignL , Default)||
   1498                                         mDATRead(U1Bit, DefClignR , Default)  ) & (U1)1U)<<c6Bits) |
   1499                                  (mDATRead(U1Bit, DefEEPROM,     Default)  <<c7Bits);
   \   0068   8E....         MOV       A,DATCmnData+15
   \   006B   4D00           CMP       A,#0
   \   006D   BD07           BNZ       ??LAPAfsTreatSecurityAccessService_116
   \   006F   8E....         MOV       A,DATCmnData+16
   \   0072   4D00           CMP       A,#0
   \   0074   AD04           BZ        ??LAPAfsTreatSecurityAccessService_117
   \                     ??LAPAfsTreatSecurityAccessService_116:
   \   0076   A301           MOV       B,#1
   \   0078   FA02           BR        ??LAPAfsTreatSecurityAccessService_118
   \                     ??LAPAfsTreatSecurityAccessService_117:
   \   007A   A300           MOV       B,#0
   \                     ??LAPAfsTreatSecurityAccessService_118:
   \   007C   16....         MOVW      HL,#DATCmnData+14
   \   007F   87             MOV       A,[HL]
   \   0080   5D01           AND       A,#1
   \   0082   A080           MOV       X,#128
   \   0084   3188           MULU      X
   \   0086   60             MOV       A,X
   \   0087   72             MOV       C,A
   \   0088   63             MOV       A,B
   \   0089   5D01           AND       A,#1
   \   008B   A040           MOV       X,#64
   \   008D   3188           MULU      X
   \   008F   60             MOV       A,X
   \   0090   73             MOV       B,A
   \   0091   8E....         MOV       A,DATCmnData+17
   \   0094   A010           MOV       X,#16
   \   0096   3188           MULU      X
   \   0098   60             MOV       A,X
   \   0099   74             MOV       E,A
   \   009A   8E....         MOV       A,DATCmnData+18
   \   009D   A008           MOV       X,#8
   \   009F   3188           MULU      X
   \   00A1   60             MOV       A,X
   \   00A2   75             MOV       D,A
   \   00A3   8E....         MOV       A,DATCmnData+19
   \   00A6   26             ROL       A,0x1
   \   00A7   27             ROLC      A,0x1
   \   00A8   5DFC           AND       A,#252
   \   00AA   70             MOV       X,A
   \   00AB   8E....         MOV       A,DATCmnData+22
   \   00AE   21             CLR1      CY
   \   00AF   27             ROLC      A,0x1
   \   00B0   68....         OR        A,DATCmnData+23
   \   00B3   6168           OR        A,X
   \   00B5   616D           OR        A,D
   \   00B7   616C           OR        A,E
   \   00B9   616B           OR        A,B
   \   00BB   616A           OR        A,C
   1500          
   1501                      LAPKwpWriteDiagnosticResponse(u8IndexL,u8TempVarL);
   \   00BD   9E....         MOV       DATKwpTxBuffer+5,A
   1502                      u8IndexL++;
   1503                      //QACJ 3198: akodzhh: Variable is initialized and then modified bit by bit before being used    
   1504                      u8TempVarL = 0x00;
   1505                      u8TempVarL =(mDATRead(U1Bit, DefTrpShortCircuitToBat, Default)      <<c4Bits) |
   1506                                  (mDATRead(U1Bit, DefTrpShortCircuitToGnd, Default)      <<c5Bits);
   1507          
   1508                      LAPKwpWriteDiagnosticResponse(u8IndexL,u8TempVarL);
   \   00C0   8E....         MOV       A,DATCmnData+12
   \   00C3   A020           MOV       X,#32
   \   00C5   3188           MULU      X
   \   00C7   60             MOV       A,X
   \   00C8   72             MOV       C,A
   \   00C9   8E....         MOV       A,DATCmnData+13
   \   00CC   A010           MOV       X,#16
   \   00CE   3188           MULU      X
   \   00D0   60             MOV       A,X
   \   00D1   616A           OR        A,C
   \   00D3   9E....         MOV       DATKwpTxBuffer+6,A
   1509                      u8IndexL++;
   1510                      //QACJ 3198: akodzhh: Variable is initialized and then modified bit by bit before being used
   1511                      u8TempVarL = 0x00;
   1512                      u8TempVarL =(mDATRead(U1Bit, DefVerlogToGnd, Default)   <<c1Bits) |   //DefSireneToGnd
   1513                                  (mDATRead(U1Bit, DefVerlogToBat, Default)   <<c2Bits) |   //DefSireneToBat
   1514                                  (mDATRead(U1Bit, DefDfrToBat,    Default)   <<c6Bits) |   //DEF_CC+_LARD  (DEFROSTER_RL)
   1515                                  (mDATRead(U1Bit, DefDfrToGnd,    Default)   <<c7Bits);    //DEF_CO_LARD   (DEFROSTER_RL)
   1516          
   1517                      LAPKwpWriteDiagnosticResponse(u8IndexL,u8TempVarL);
   \   00D6   16....         MOVW      HL,#DATCmnData+6
   \   00D9   87             MOV       A,[HL]
   \   00DA   5D01           AND       A,#1
   \   00DC   A080           MOV       X,#128
   \   00DE   3188           MULU      X
   \   00E0   60             MOV       A,X
   \   00E1   73             MOV       B,A
   \   00E2   8E....         MOV       A,DATCmnData+7
   \   00E5   A040           MOV       X,#64
   \   00E7   3188           MULU      X
   \   00E9   60             MOV       A,X
   \   00EA   72             MOV       C,A
   \   00EB   8E....         MOV       A,DATCmnData+8
   \   00EE   26             ROL       A,0x1
   \   00EF   27             ROLC      A,0x1
   \   00F0   5DFC           AND       A,#252
   \   00F2   70             MOV       X,A
   \   00F3   8E....         MOV       A,DATCmnData+9
   \   00F6   21             CLR1      CY
   \   00F7   27             ROLC      A,0x1
   \   00F8   6168           OR        A,X
   \   00FA   616A           OR        A,C
   \   00FC   616B           OR        A,B
   \   00FE   9E....         MOV       DATKwpTxBuffer+7,A
   1518                      u8IndexL++;
   1519          
   1520                      //QACJ 3198: akodzhh: Variable is initialized and then modified bit by bit before being used
   1521                      u8TempVarL = 0x00;
   1522                      u8TempVarL =   (mDATRead(U1Bit, DefHornCCBat,       Default))    |         //DEF_CC+_DEMARREUR
   1523                                     (mDATRead(U1Bit, DefHornCCGnd,       Default)<<c1Bits) |       //DEF_CO_DEMARREUR
   1524                                     (mDATRead(U1Bit, DefDoorlockLedCC,   Default)<<c6Bits);
   1525          
   1526                      LAPKwpWriteDiagnosticResponse(u8IndexL,u8TempVarL);
   \   0101   8E....         MOV       A,DATCmnData+11
   \   0104   A040           MOV       X,#64
   \   0106   3188           MULU      X
   \   0108   8E....         MOV       A,DATCmnData+5
   \   010B   21             CLR1      CY
   \   010C   27             ROLC      A,0x1
   \   010D   68....         OR        A,DATCmnData+4
   \   0110   6168           OR        A,X
   \   0112   9E....         MOV       DATKwpTxBuffer+8,A
   1527                      u8IndexL++;
   1528          
   1529                      LAPKwpWriteDiagnosticResponse(u8IndexL, mDATRead(U8Bit, DATTrpAuthentTryCounter, Default));
   \   0115   8E....         MOV       A,DatTrpExportData+43
   \   0118   9E....         MOV       DATKwpTxBuffer+9,A
   1530                      u8IndexL++;
   1531                      
   1532                      LAPKwpWriteDiagnosticResponse(u8IndexL, mDATRead(U8Bit, COD_ERR_APP, Default));
   \   011B   8E....         MOV       A,DATCmnImmoData+22
   \   011E   9E....         MOV       DATKwpTxBuffer+10,A
   1533                      u8IndexL++;
   1534          
   1535          
   1536                      //Read EEP Stored Faults
   1537                      //QACJ 3198: akodzhh: Variable is initialized and then modified bit by bit before being used
   1538                      u8TempVarL = 0x00;
   1539                      u8TempVarL =(mDATRead(U1Bit, EEP_DefAfav  , Default)     <<c2Bits) |
   1540                                  (mDATRead(U1Bit, EEP_DefAfar  , Default)     <<c3Bits) |
   1541                                  (mDATRead(U1Bit, EEP_DefAirbag, Default)     <<c4Bits) |
   1542                                  (((U1)( mDATRead(U1Bit, EEP_DefClignL , Default)
   1543                                        ||mDATRead(U1Bit, EEP_DefClignR , Default) )&(U1)1)<<c6Bits) | 
   1544                                  (mDATRead(U1Bit, EEP_DefEeprom, Default)     <<c7Bits);
   \   0121   8E....         MOV       A,DATDbkMirrors+19
   \   0124   5D18           AND       A,#24
   \   0126   AD04           BZ        ??LAPAfsTreatSecurityAccessService_119
   \   0128   A301           MOV       B,#1
   \   012A   FA02           BR        ??LAPAfsTreatSecurityAccessService_120
   \                     ??LAPAfsTreatSecurityAccessService_119:
   \   012C   A300           MOV       B,#0
   \                     ??LAPAfsTreatSecurityAccessService_120:
   \   012E   16....         MOVW      HL,#DATDbkMirrors+19
   \   0131   319704         BF        [HL].1, ??LAPAfsTreatSecurityAccessService_121
   \   0134   A501           MOV       D,#1
   \   0136   FA02           BR        ??LAPAfsTreatSecurityAccessService_122
   \                     ??LAPAfsTreatSecurityAccessService_121:
   \   0138   A500           MOV       D,#0
   \                     ??LAPAfsTreatSecurityAccessService_122:
   \   013A   31A704         BF        [HL].2, ??LAPAfsTreatSecurityAccessService_123
   \   013D   A401           MOV       E,#1
   \   013F   FA02           BR        ??LAPAfsTreatSecurityAccessService_124
   \                     ??LAPAfsTreatSecurityAccessService_123:
   \   0141   A400           MOV       E,#0
   \                     ??LAPAfsTreatSecurityAccessService_124:
   \   0143   A100           MOV       A,#0
   \   0145   71D4           MOV1      CY,[HL].5
   \   0147   27             ROLC      A,0x1
   \   0148   A080           MOV       X,#128
   \   014A   3188           MULU      X
   \   014C   60             MOV       A,X
   \   014D   72             MOV       C,A
   \   014E   63             MOV       A,B
   \   014F   5D01           AND       A,#1
   \   0151   A040           MOV       X,#64
   \   0153   3188           MULU      X
   \   0155   60             MOV       A,X
   \   0156   73             MOV       B,A
   \   0157   64             MOV       A,E
   \   0158   A010           MOV       X,#16
   \   015A   3188           MULU      X
   \   015C   60             MOV       A,X
   \   015D   74             MOV       E,A
   \   015E   65             MOV       A,D
   \   015F   A008           MOV       X,#8
   \   0161   3188           MULU      X
   \   0163   87             MOV       A,[HL]
   \   0164   5D01           AND       A,#1
   \   0166   26             ROL       A,0x1
   \   0167   27             ROLC      A,0x1
   \   0168   6168           OR        A,X
   \   016A   616C           OR        A,E
   \   016C   616B           OR        A,B
   \   016E   616A           OR        A,C
   1545          
   1546                      LAPKwpWriteDiagnosticResponse(u8IndexL,u8TempVarL);
   \   0170   9E....         MOV       DATKwpTxBuffer+11,A
   1547                      u8IndexL++;
   1548                      //QACJ 3198: akodzhh: Variable is initialized and then modified bit by bit before being used
   1549                      u8TempVarL = 0x00;
   1550                      u8TempVarL =(mDATRead(U1Bit, EEP_DefTrpToBat, Default)      <<c4Bits) |
   1551                                  (mDATRead(U1Bit, EEP_DefTrpToGnd, Default)      <<c5Bits);
   1552          
   1553                      LAPKwpWriteDiagnosticResponse(u8IndexL,u8TempVarL);
   \   0173   31E704         BF        [HL].6, ??LAPAfsTreatSecurityAccessService_125
   \   0176   A301           MOV       B,#1
   \   0178   FA02           BR        ??LAPAfsTreatSecurityAccessService_126
   \                     ??LAPAfsTreatSecurityAccessService_125:
   \   017A   A300           MOV       B,#0
   \                     ??LAPAfsTreatSecurityAccessService_126:
   \   017C   31F704         BF        [HL].7, ??LAPAfsTreatSecurityAccessService_127
   \   017F   A101           MOV       A,#1
   \   0181   FA02           BR        ??LAPAfsTreatSecurityAccessService_128
   \                     ??LAPAfsTreatSecurityAccessService_127:
   \   0183   A100           MOV       A,#0
   \                     ??LAPAfsTreatSecurityAccessService_128:
   \   0185   A020           MOV       X,#32
   \   0187   3188           MULU      X
   \   0189   60             MOV       A,X
   \   018A   72             MOV       C,A
   \   018B   63             MOV       A,B
   \   018C   A010           MOV       X,#16
   \   018E   3188           MULU      X
   \   0190   60             MOV       A,X
   \   0191   616A           OR        A,C
   \   0193   9E....         MOV       DATKwpTxBuffer+12,A
   1554                      u8IndexL++;
   1555                      //QACJ 3198: akodzhh: Variable is initialized and then modified bit by bit before being used
   1556                      u8TempVarL = 0x00;
   1557                      u8TempVarL =(mDATRead(U1Bit, EEP_DefVerlogToGnd, Default)   <<c1Bits) |   //DefSireneToGnd
   1558                                  (mDATRead(U1Bit, EEP_DefVerlogToBat, Default)   <<c2Bits) |   //DefSireneToBat
   1559                                  (mDATRead(U1Bit, EEP_DefDfrToBat, Default)      <<c6Bits) |   //DEF_CC+_LARD  (DEFROSTER_RL)
   1560                                  (mDATRead(U1Bit, EEP_DefDfrToGnd, Default)      <<c7Bits);    //DEF_CO_LARD   (DEFROSTER_RL)
   1561          
   1562                      LAPKwpWriteDiagnosticResponse(u8IndexL,u8TempVarL);
   \   0196   86             INCW      HL
   \   0197   319704         BF        [HL].1, ??LAPAfsTreatSecurityAccessService_129
   \   019A   A401           MOV       E,#1
   \   019C   FA02           BR        ??LAPAfsTreatSecurityAccessService_130
   \                     ??LAPAfsTreatSecurityAccessService_129:
   \   019E   A400           MOV       E,#0
   \                     ??LAPAfsTreatSecurityAccessService_130:
   \   01A0   31B704         BF        [HL].3, ??LAPAfsTreatSecurityAccessService_131
   \   01A3   A301           MOV       B,#1
   \   01A5   FA02           BR        ??LAPAfsTreatSecurityAccessService_132
   \                     ??LAPAfsTreatSecurityAccessService_131:
   \   01A7   A300           MOV       B,#0
   \                     ??LAPAfsTreatSecurityAccessService_132:
   \   01A9   A100           MOV       A,#0
   \   01AB   71C4           MOV1      CY,[HL].4
   \   01AD   27             ROLC      A,0x1
   \   01AE   A080           MOV       X,#128
   \   01B0   3188           MULU      X
   \   01B2   60             MOV       A,X
   \   01B3   72             MOV       C,A
   \   01B4   63             MOV       A,B
   \   01B5   A040           MOV       X,#64
   \   01B7   3188           MULU      X
   \   01B9   60             MOV       A,X
   \   01BA   73             MOV       B,A
   \   01BB   64             MOV       A,E
   \   01BC   26             ROL       A,0x1
   \   01BD   27             ROLC      A,0x1
   \   01BE   5DFC           AND       A,#252
   \   01C0   70             MOV       X,A
   \   01C1   87             MOV       A,[HL]
   \   01C2   5D01           AND       A,#1
   \   01C4   21             CLR1      CY
   \   01C5   27             ROLC      A,0x1
   \   01C6   6168           OR        A,X
   \   01C8   616B           OR        A,B
   \   01CA   616A           OR        A,C
   \   01CC   9E....         MOV       DATKwpTxBuffer+13,A
   1563                      u8IndexL++;
   1564          
   1565                      //QACJ 3198: akodzhh: Variable is initialized and then modified bit by bit before being used
   1566                      u8TempVarL = 0x00;
   1567                      u8TempVarL =   (mDATRead(U1Bit, EEP_DefHornCCBat,       Default))    |  //DEF_CC+_DEMARREUR
   1568                                     (mDATRead(U1Bit, EEP_DefHornCCGnd,       Default)<<c1Bits) |  //DEF_CO_DEMARREUR 
   1569                                     (mDATRead(U1Bit, EEP_DefDoorlockLedCC,   Default)<<c6Bits);
   1570          
   1571                      LAPKwpWriteDiagnosticResponse(u8IndexL,u8TempVarL);
   \   01CF   31D704         BF        [HL].5, ??LAPAfsTreatSecurityAccessService_133
   \   01D2   A201           MOV       C,#1
   \   01D4   FA02           BR        ??LAPAfsTreatSecurityAccessService_134
   \                     ??LAPAfsTreatSecurityAccessService_133:
   \   01D6   A200           MOV       C,#0
   \                     ??LAPAfsTreatSecurityAccessService_134:
   \   01D8   31E704         BF        [HL].6, ??LAPAfsTreatSecurityAccessService_135
   \   01DB   A301           MOV       B,#1
   \   01DD   FA02           BR        ??LAPAfsTreatSecurityAccessService_136
   \                     ??LAPAfsTreatSecurityAccessService_135:
   \   01DF   A300           MOV       B,#0
   \                     ??LAPAfsTreatSecurityAccessService_136:
   \   01E1   31F704         BF        [HL].7, ??LAPAfsTreatSecurityAccessService_137
   \   01E4   A101           MOV       A,#1
   \   01E6   FA02           BR        ??LAPAfsTreatSecurityAccessService_138
   \                     ??LAPAfsTreatSecurityAccessService_137:
   \   01E8   A100           MOV       A,#0
   \                     ??LAPAfsTreatSecurityAccessService_138:
   \   01EA   A040           MOV       X,#64
   \   01EC   3188           MULU      X
   \   01EE   63             MOV       A,B
   \   01EF   27             ROLC      A,0x1
   \   01F0   6162           OR        C,A
   \   01F2   60             MOV       A,X
   \   01F3   6162           OR        C,A
   \   01F5   62             MOV       A,C
   \   01F6   9E....         MOV       DATKwpTxBuffer+14,A
   1572                      u8IndexL++;
   1573          
   1574          
   1575                      LAPKwpWriteDiagnosticResponse(u8IndexL,mDATRead(U8Bit, EEP_ResynchroSuccessfulCounter, Default));
   \   01F9   8E....         MOV       A,DATDbkMirrors+4
   \   01FC   9E....         MOV       DATKwpTxBuffer+15,A
   1576                      u8IndexL++;
   1577                      LAPKwpWriteDiagnosticResponse(u8IndexL,mDATRead(U8Bit, EEP_ResynchroFailureCounter,    Default));
   \   01FF   8E....         MOV       A,DATDbkMirrors+3
   \   0202   9E....         MOV       DATKwpTxBuffer+16,A
   1578                      u8IndexL++;
   1579                      LAPKwpWriteDiagnosticResponse(u8IndexL,mDATRead(U8Bit, EEP_AuthentDelayedCounter,      Default));
   \   0205   8E....         MOV       A,DATDbkMirrors+1
   \   0208   9E....         MOV       DATKwpTxBuffer+17,A
   1580                      u8IndexL++;
   1581                      LAPKwpWriteDiagnosticResponse(u8IndexL,mDATRead(U8Bit, EEP_AuthentFailureCounter,      Default));
   \   020B   8E....         MOV       A,DATDbkMirrors+2
   \   020E   9E....         MOV       DATKwpTxBuffer+18,A
   1582                      u8IndexL++; //Reserved
   1583                      u8IndexL++; 
   1584                      LAPKwpWriteDiagnosticResponse(u8IndexL,mDATRead(U8Bit, EEP_ResetCount, Default));
   \   0211   8E....         MOV       A,DATDbkMirrors+5
   \   0214   9E....         MOV       DATKwpTxBuffer+20,A
   1585                      u8IndexL++;
   1586                      LAPKwpWriteDiagnosticResponse(u8IndexL,mDATRead(U8Bit, EEP_CrashCount, Default));
   \   0217   8E....         MOV       A,DATDbkMirrors+6
   \   021A   9E....         MOV       DATKwpTxBuffer+21,A
   1587          
   1588                      u8ResponseLengthL = cRDBLIDAns_DefaultData_Lgth;                 
   \   021D   891C           MOVW      AX,SP
   \   021F   D6             MOVW      HL,AX
   \   0220   A113           MOV       A,#19
   \                     ??LAPAfsTreatReadDataByLocalIdentifierService_1:
   \   0222   97             MOV       [HL],A
   \   0223   9B....         BR        N:??LAPAfsTreatSecurityAccessService_139
   1589          
   1590                      break;
   1591                  // lecture de l'identification du calculateur
   1592                  case cRDBLID_GeneralParamID :
   1593                      for(u8IndexL=0;u8IndexL<(cRDBLIDAns_GeneralParam_Lgth - cDataOffset);u8IndexL++)
   \                     ??LAPAfsTreatSecurityAccessService_109:
   \   0226   16....         MOVW      HL,#DATKwpTxBuffer+5
   \   0229   A004           MOV       X,#4
   1594                      {
   1595                          LAPKwpWriteDiagnosticResponse(cByte2+u8IndexL, 0x00);
   \                     ??LAPAfsTreatReadDataByLocalIdentifierService_2:
   \   022B   A100           MOV       A,#0
   \   022D   97             MOV       [HL],A
   1596                      }
   \   022E   86             INCW      HL
   \   022F   50             DEC       X
   \   0230   BDF9           BNZ       ??LAPAfsTreatReadDataByLocalIdentifierService_2
   1597                      u8IndexL = cByte2;
   1598                      // Byte 1
   1599                      //QACJ 3198: akodzhh: Variable is initialized and then modified bit by bit before being used
   1600                      u8TempVarL = 0x00;
   1601                      u8TempVarL =   ( mDATRead(U1Bit,EEP_DEM_SURVIT,  Default)       ) |
   1602                                  ( mDATRead(U1Bit,EEP_CALALPRI,    Default)     <<c1Bits ) |
   1603                      
   1604                                  ( mDATRead(U1Bit,EEP_AUTDEGIVRAGE,Default)     <<c3Bits ) |
   1605                                  ( mDATRead(U1Bit,EEP_RELAIS_DEM,  Default)     <<c4Bits ) |
   1606                                  ( mDATRead(U1Bit,EEP_DETCHOC,     Default)     <<c7Bits );
   1607          
   1608                      LAPKwpWriteDiagnosticResponse(u8IndexL,u8TempVarL);
   \   0232   16....         MOVW      HL,#DATDbkMirrors+24
   \   0235   319704         BF        [HL].1, ??LAPAfsTreatSecurityAccessService_140
   \   0238   A201           MOV       C,#1
   \   023A   FA01           BR        ??LAPAfsTreatSecurityAccessService_141
   \                     ??LAPAfsTreatSecurityAccessService_140:
   \   023C   72             MOV       C,A
   \                     ??LAPAfsTreatSecurityAccessService_141:
   \   023D   31B704         BF        [HL].3, ??LAPAfsTreatSecurityAccessService_142
   \   0240   A301           MOV       B,#1
   \   0242   FA01           BR        ??LAPAfsTreatSecurityAccessService_143
   \                     ??LAPAfsTreatSecurityAccessService_142:
   \   0244   73             MOV       B,A
   \                     ??LAPAfsTreatSecurityAccessService_143:
   \   0245   31C704         BF        [HL].4, ??LAPAfsTreatSecurityAccessService_144
   \   0248   A401           MOV       E,#1
   \   024A   FA01           BR        ??LAPAfsTreatSecurityAccessService_145
   \                     ??LAPAfsTreatSecurityAccessService_144:
   \   024C   74             MOV       E,A
   \                     ??LAPAfsTreatSecurityAccessService_145:
   \   024D   71E4           MOV1      CY,[HL].6
   \   024F   27             ROLC      A,0x1
   \   0250   A080           MOV       X,#128
   \   0252   3188           MULU      X
   \   0254   60             MOV       A,X
   \   0255   75             MOV       D,A
   \   0256   64             MOV       A,E
   \   0257   A010           MOV       X,#16
   \   0259   3188           MULU      X
   \   025B   60             MOV       A,X
   \   025C   74             MOV       E,A
   \   025D   63             MOV       A,B
   \   025E   A008           MOV       X,#8
   \   0260   3188           MULU      X
   \   0262   60             MOV       A,X
   \   0263   73             MOV       B,A
   \   0264   62             MOV       A,C
   \   0265   27             ROLC      A,0x1
   \   0266   70             MOV       X,A
   \   0267   87             MOV       A,[HL]
   \   0268   5D01           AND       A,#1
   \   026A   30             XCH       A,X
   \   026B   6160           OR        X,A
   \   026D   63             MOV       A,B
   \   026E   6160           OR        X,A
   \   0270   64             MOV       A,E
   \   0271   6160           OR        X,A
   \   0273   65             MOV       A,D
   \   0274   6160           OR        X,A
   \   0276   60             MOV       A,X
   \   0277   9E....         MOV       DATKwpTxBuffer+5,A
   1609                      u8IndexL++;
   1610          
   1611                      // Byte 2
   1612                      //QACJ 3198: akodzhh: Variable is initialized and then modified bit by bit before being used
   1613                      u8TempVarL = 0x00;
   1614                      u8TempVarL =( mDATRead(U1Bit,EEP_CONDATMPO, Default)     <<c1Bits ) |                    
   1615                                  ( mDATRead(U1Bit,EEP_CONDAROU,  Default)     <<c3Bits ) |
   1616                                  ( mDATRead(U1Bit,EEP_CARCLIENT, Default)     <<c4Bits ) |                    
   1617                                  ( mDATRead(U1Bit,EEP_ALIM_PLAF, Default)     <<c6Bits ) |
   1618                                  ( mDATRead(U1Bit,EEP_PIL_PLAF,  Default)     <<c7Bits );
   1619          
   1620                      LAPKwpWriteDiagnosticResponse(u8IndexL,u8TempVarL);
   \   027A   86             INCW      HL
   \   027B   31A704         BF        [HL].2, ??LAPAfsTreatSecurityAccessService_146
   \   027E   A501           MOV       D,#1
   \   0280   FA02           BR        ??LAPAfsTreatSecurityAccessService_147
   \                     ??LAPAfsTreatSecurityAccessService_146:
   \   0282   A500           MOV       D,#0
   \                     ??LAPAfsTreatSecurityAccessService_147:
   \   0284   31B704         BF        [HL].3, ??LAPAfsTreatSecurityAccessService_148
   \   0287   A401           MOV       E,#1
   \   0289   FA02           BR        ??LAPAfsTreatSecurityAccessService_149
   \                     ??LAPAfsTreatSecurityAccessService_148:
   \   028B   A400           MOV       E,#0
   \                     ??LAPAfsTreatSecurityAccessService_149:
   \   028D   31D704         BF        [HL].5, ??LAPAfsTreatSecurityAccessService_150
   \   0290   A301           MOV       B,#1
   \   0292   FA02           BR        ??LAPAfsTreatSecurityAccessService_151
   \                     ??LAPAfsTreatSecurityAccessService_150:
   \   0294   A300           MOV       B,#0
   \                     ??LAPAfsTreatSecurityAccessService_151:
   \   0296   A100           MOV       A,#0
   \   0298   71E4           MOV1      CY,[HL].6
   \   029A   27             ROLC      A,0x1
   \   029B   A080           MOV       X,#128
   \   029D   3188           MULU      X
   \   029F   60             MOV       A,X
   \   02A0   72             MOV       C,A
   \   02A1   63             MOV       A,B
   \   02A2   A040           MOV       X,#64
   \   02A4   3188           MULU      X
   \   02A6   60             MOV       A,X
   \   02A7   73             MOV       B,A
   \   02A8   64             MOV       A,E
   \   02A9   A010           MOV       X,#16
   \   02AB   3188           MULU      X
   \   02AD   60             MOV       A,X
   \   02AE   74             MOV       E,A
   \   02AF   65             MOV       A,D
   \   02B0   A008           MOV       X,#8
   \   02B2   3188           MULU      X
   \   02B4   87             MOV       A,[HL]
   \   02B5   5D01           AND       A,#1
   \   02B7   27             ROLC      A,0x1
   \   02B8   6168           OR        A,X
   \   02BA   616C           OR        A,E
   \   02BC   616B           OR        A,B
   \   02BE   616A           OR        A,C
   \   02C0   9E....         MOV       DATKwpTxBuffer+6,A
   1621                      u8IndexL++;
   1622          
   1623                      // Byte 3
   1624                      //QACJ 3198: akodzhh: Variable is initialized and then modified bit by bit before being used
   1625                      u8TempVarL = 0x00;
   1626                      u8TempVarL =( mDATRead(U1Bit,EEP_SDO,           Default)     <<c1Bits ) |
   1627                                  ( mDATRead(U1Bit,EEP_CPE_IMPULS,    Default)     <<c2Bits ) |
   1628                                  ( mDATRead(U1Bit,EEP_FEU_BROUILLARD,Default)     <<c3Bits ) |
   1629                                  ( mDATRead(U1Bit,EEP_EV_ARR,        Default)     <<c4Bits ) |
   1630                                  ( mDATRead(U1Bit,EEP_INFO_REGIME,   Default)     <<c5Bits ) |
   1631                                  ( mDATRead(U1Bit,EEP_CLI_REM,       Default)     <<c6Bits ) |
   1632                                  ( mDATRead(U1Bit,EEP_CAD_BAGUE_AV,  Default)     <<c7Bits );
   1633          
   1634                      LAPKwpWriteDiagnosticResponse(u8IndexL,u8TempVarL);
   \   02C3   86             INCW      HL
   \   02C4   891C           MOVW      AX,SP
   \   02C6   80             INCW      AX
   \   02C7   319705         BF        [HL].1, ??LAPAfsTreatSecurityAccessService_152
   \   02CA   D6             MOVW      HL,AX
   \   02CB   A101           MOV       A,#1
   \   02CD   FA03           BR        ??LAPAfsTreatSecurityAccessService_153
   \                     ??LAPAfsTreatSecurityAccessService_152:
   \   02CF   D6             MOVW      HL,AX
   \   02D0   A100           MOV       A,#0
   \                     ??LAPAfsTreatSecurityAccessService_153:
   \   02D2   97             MOV       [HL],A
   \   02D3   16....         MOVW      HL,#DATDbkMirrors+26
   \   02D6   891C           MOVW      AX,SP
   \   02D8   80             INCW      AX
   \   02D9   80             INCW      AX
   \   02DA   31A705         BF        [HL].2, ??LAPAfsTreatSecurityAccessService_154
   \   02DD   D6             MOVW      HL,AX
   \   02DE   A101           MOV       A,#1
   \   02E0   FA03           BR        ??LAPAfsTreatSecurityAccessService_155
   \                     ??LAPAfsTreatSecurityAccessService_154:
   \   02E2   D6             MOVW      HL,AX
   \   02E3   A100           MOV       A,#0
   \                     ??LAPAfsTreatSecurityAccessService_155:
   \   02E5   97             MOV       [HL],A
   \   02E6   16....         MOVW      HL,#DATDbkMirrors+26
   \   02E9   31B704         BF        [HL].3, ??LAPAfsTreatSecurityAccessService_156
   \   02EC   A201           MOV       C,#1
   \   02EE   FA02           BR        ??LAPAfsTreatSecurityAccessService_157
   \                     ??LAPAfsTreatSecurityAccessService_156:
   \   02F0   A200           MOV       C,#0
   \                     ??LAPAfsTreatSecurityAccessService_157:
   \   02F2   31C704         BF        [HL].4, ??LAPAfsTreatSecurityAccessService_158
   \   02F5   A301           MOV       B,#1
   \   02F7   FA02           BR        ??LAPAfsTreatSecurityAccessService_159
   \                     ??LAPAfsTreatSecurityAccessService_158:
   \   02F9   A300           MOV       B,#0
   \                     ??LAPAfsTreatSecurityAccessService_159:
   \   02FB   31D704         BF        [HL].5, ??LAPAfsTreatSecurityAccessService_160
   \   02FE   A401           MOV       E,#1
   \   0300   FA02           BR        ??LAPAfsTreatSecurityAccessService_161
   \                     ??LAPAfsTreatSecurityAccessService_160:
   \   0302   A400           MOV       E,#0
   \                     ??LAPAfsTreatSecurityAccessService_161:
   \   0304   A100           MOV       A,#0
   \   0306   71E4           MOV1      CY,[HL].6
   \   0308   27             ROLC      A,0x1
   \   0309   A080           MOV       X,#128
   \   030B   3188           MULU      X
   \   030D   60             MOV       A,X
   \   030E   B1             PUSH      AX
   \   030F   64             MOV       A,E
   \   0310   A040           MOV       X,#64
   \   0312   3188           MULU      X
   \   0314   60             MOV       A,X
   \   0315   75             MOV       D,A
   \   0316   63             MOV       A,B
   \   0317   A020           MOV       X,#32
   \   0319   3188           MULU      X
   \   031B   60             MOV       A,X
   \   031C   74             MOV       E,A
   \   031D   62             MOV       A,C
   \   031E   A010           MOV       X,#16
   \   0320   3188           MULU      X
   \   0322   60             MOV       A,X
   \   0323   73             MOV       B,A
   \   0324   891C           MOVW      AX,SP
   \   0326   D6             MOVW      HL,AX
   \   0327   AE04           MOV       A,[HL+0x04]
   \   0329   A008           MOV       X,#8
   \   032B   3188           MULU      X
   \   032D   60             MOV       A,X
   \   032E   72             MOV       C,A
   \   032F   AE03           MOV       A,[HL+0x03]
   \   0331   26             ROL       A,0x1
   \   0332   27             ROLC      A,0x1
   \   0333   5DFC           AND       A,#252
   \   0335   70             MOV       X,A
   \   0336   16....         MOVW      HL,#DATDbkMirrors+28
   \   0339   87             MOV       A,[HL]
   \   033A   5D01           AND       A,#1
   \   033C   21             CLR1      CY
   \   033D   27             ROLC      A,0x1
   \   033E   6168           OR        A,X
   \   0340   616A           OR        A,C
   \   0342   616B           OR        A,B
   \   0344   616C           OR        A,E
   \   0346   616D           OR        A,D
   \   0348   30             XCH       A,X
   \   0349   9A....         CALL      ?POPB_L_L06
   \   034C   30             XCH       A,X
   \   034D   6168           OR        A,X
   \   034F   9E....         MOV       DATKwpTxBuffer+7,A
   1635                      u8IndexL++;
   1636          
   1637                      // Byte 4
   1638                      //QACJ 3198: akodzhh: Variable is initialized and then modified bit by bit before being used
   1639                      u8TempVarL = 0x00;
   1640                      u8TempVarL =( mDATRead(U1Bit,EEP_AUTCRASH,      Default)     << 0 ) |
   1641                                  ( mDATRead(U1Bit,EEP_AUTVERLOG,     Default)     <<c1Bits ) |
   1642                                  ( mDATRead(U1Bit,EEP_AUTPLAF,       Default)     <<c2Bits ) |
   1643                                  ( mDATRead(U1Bit,EEP_KEY_BUTTON,    Default)     <<c3Bits ) |
   1644                                  ( mDATRead(U1Bit,EEP_CALALARM,      Default)     <<c4Bits ) |
   1645                                  ( mDATRead(U1Bit,EEP_CALULKTR,      Default)     <<c5Bits ) |
   1646                                  ( mDATRead(U1Bit,EEP_AUTRECRF,      Default)     <<c6Bits ) |
   1647                                  ( mDATRead(U1Bit,EEP_OUBLICEINTURE, Default)     <<c7Bits );
   1648          
   1649                      LAPKwpWriteDiagnosticResponse(u8IndexL,u8TempVarL);
   \   0352   16....         MOVW      HL,#DATDbkMirrors+26
   \   0355   891C           MOVW      AX,SP
   \   0357   80             INCW      AX
   \   0358   80             INCW      AX
   \   0359   31F705         BF        [HL].7, ??LAPAfsTreatSecurityAccessService_162
   \   035C   D6             MOVW      HL,AX
   \   035D   A101           MOV       A,#1
   \   035F   FA03           BR        ??LAPAfsTreatSecurityAccessService_163
   \                     ??LAPAfsTreatSecurityAccessService_162:
   \   0361   D6             MOVW      HL,AX
   \   0362   A100           MOV       A,#0
   \                     ??LAPAfsTreatSecurityAccessService_163:
   \   0364   97             MOV       [HL],A
   \   0365   16....         MOVW      HL,#DATDbkMirrors+27
   \   0368   891C           MOVW      AX,SP
   \   036A   80             INCW      AX
   \   036B   319705         BF        [HL].1, ??LAPAfsTreatSecurityAccessService_164
   \   036E   D6             MOVW      HL,AX
   \   036F   A101           MOV       A,#1
   \   0371   FA03           BR        ??LAPAfsTreatSecurityAccessService_165
   \                     ??LAPAfsTreatSecurityAccessService_164:
   \   0373   D6             MOVW      HL,AX
   \   0374   A100           MOV       A,#0
   \                     ??LAPAfsTreatSecurityAccessService_165:
   \   0376   97             MOV       [HL],A
   \   0377   16....         MOVW      HL,#DATDbkMirrors+27
   \   037A   891C           MOVW      AX,SP
   \   037C   31A708         BF        [HL].2, ??LAPAfsTreatSecurityAccessService_166
   \   037F   CA0300         ADDW      AX,#3
   \   0382   D6             MOVW      HL,AX
   \   0383   A101           MOV       A,#1
   \   0385   FA06           BR        ??LAPAfsTreatSecurityAccessService_167
   \                     ??LAPAfsTreatSecurityAccessService_166:
   \   0387   CA0300         ADDW      AX,#3
   \   038A   D6             MOVW      HL,AX
   \   038B   A100           MOV       A,#0
   \                     ??LAPAfsTreatSecurityAccessService_167:
   \   038D   97             MOV       [HL],A
   \   038E   16....         MOVW      HL,#DATDbkMirrors+27
   \   0391   31B704         BF        [HL].3, ??LAPAfsTreatSecurityAccessService_168
   \   0394   A201           MOV       C,#1
   \   0396   FA02           BR        ??LAPAfsTreatSecurityAccessService_169
   \                     ??LAPAfsTreatSecurityAccessService_168:
   \   0398   A200           MOV       C,#0
   \                     ??LAPAfsTreatSecurityAccessService_169:
   \   039A   31C704         BF        [HL].4, ??LAPAfsTreatSecurityAccessService_170
   \   039D   A301           MOV       B,#1
   \   039F   FA02           BR        ??LAPAfsTreatSecurityAccessService_171
   \                     ??LAPAfsTreatSecurityAccessService_170:
   \   03A1   A300           MOV       B,#0
   \                     ??LAPAfsTreatSecurityAccessService_171:
   \   03A3   31D704         BF        [HL].5, ??LAPAfsTreatSecurityAccessService_172
   \   03A6   A401           MOV       E,#1
   \   03A8   FA02           BR        ??LAPAfsTreatSecurityAccessService_173
   \                     ??LAPAfsTreatSecurityAccessService_172:
   \   03AA   A400           MOV       E,#0
   \                     ??LAPAfsTreatSecurityAccessService_173:
   \   03AC   A100           MOV       A,#0
   \   03AE   71E4           MOV1      CY,[HL].6
   \   03B0   27             ROLC      A,0x1
   \   03B1   A080           MOV       X,#128
   \   03B3   3188           MULU      X
   \   03B5   60             MOV       A,X
   \   03B6   B1             PUSH      AX
   \   03B7   64             MOV       A,E
   \   03B8   A040           MOV       X,#64
   \   03BA   3188           MULU      X
   \   03BC   60             MOV       A,X
   \   03BD   B1             PUSH      AX
   \   03BE   63             MOV       A,B
   \   03BF   A020           MOV       X,#32
   \   03C1   3188           MULU      X
   \   03C3   60             MOV       A,X
   \   03C4   B1             PUSH      AX
   \   03C5   62             MOV       A,C
   \   03C6   A010           MOV       X,#16
   \   03C8   3188           MULU      X
   \   03CA   60             MOV       A,X
   \   03CB   75             MOV       D,A
   \   03CC   891C           MOVW      AX,SP
   \   03CE   D6             MOVW      HL,AX
   \   03CF   AE09           MOV       A,[HL+0x09]
   \   03D1   A008           MOV       X,#8
   \   03D3   3188           MULU      X
   \   03D5   60             MOV       A,X
   \   03D6   74             MOV       E,A
   \   03D7   AE07           MOV       A,[HL+0x07]
   \   03D9   26             ROL       A,0x1
   \   03DA   27             ROLC      A,0x1
   \   03DB   5DFC           AND       A,#252
   \   03DD   73             MOV       B,A
   \   03DE   16....         MOVW      HL,#DATDbkMirrors+27
   \   03E1   87             MOV       A,[HL]
   \   03E2   5D01           AND       A,#1
   \   03E4   21             CLR1      CY
   \   03E5   27             ROLC      A,0x1
   \   03E6   72             MOV       C,A
   \   03E7   891C           MOVW      AX,SP
   \   03E9   CA0800         ADDW      AX,#8
   \   03EC   D6             MOVW      HL,AX
   \   03ED   87             MOV       A,[HL]
   \   03EE   616A           OR        A,C
   \   03F0   616B           OR        A,B
   \   03F2   616C           OR        A,E
   \   03F4   616D           OR        A,D
   \   03F6   30             XCH       A,X
   \   03F7   9A....         CALL      ?POPB_L_L06
   \   03FA   30             XCH       A,X
   \   03FB   6168           OR        A,X
   \   03FD   30             XCH       A,X
   \   03FE   9A....         CALL      ?POPB_L_L06
   \   0401   30             XCH       A,X
   \   0402   6168           OR        A,X
   \   0404   30             XCH       A,X
   \   0405   9A....         CALL      ?POPB_L_L06
   \   0408   30             XCH       A,X
   \   0409   6168           OR        A,X
   \   040B   9E....         MOV       DATKwpTxBuffer+8,A
   1650                      
   1651                      u8ResponseLengthL = cRDBLIDAns_GeneralParam_Lgth;
   \   040E   891C           MOVW      AX,SP
   \   0410   D6             MOVW      HL,AX
   \   0411   A106           MOV       A,#6
   \   0413   9B....         BR        N:??LAPAfsTreatReadDataByLocalIdentifierService_1
   1652                      break;
   1653          
   1654                  case cRDBLID_FactoryConfigID :
   1655          
   1656                      for(u8IndexL=0;u8IndexL<(cRDBLIDAns_FactoryConfig_Lgth - cDataOffset);u8IndexL++)
   \                     ??LAPAfsTreatSecurityAccessService_110:
   \   0416   16....         MOVW      HL,#DATKwpTxBuffer+5
   \   0419   A038           MOV       X,#56
   1657                      {
   1658                          LAPKwpWriteDiagnosticResponse(cByte2+u8IndexL, 0x00);
   \                     ??LAPAfsTreatReadDataByLocalIdentifierService_3:
   \   041B   A100           MOV       A,#0
   \   041D   97             MOV       [HL],A
   1659                      }
   \   041E   86             INCW      HL
   \   041F   50             DEC       X
   \   0420   BDF9           BNZ       ??LAPAfsTreatReadDataByLocalIdentifierService_3
   1660          
   1661                      LAPKwpWriteDiagnosticResponse((U32)(1+cNbTPS_RETARD_DETRESSE       ), mDATRead(U8Bit, EEP_TPS_RETARD_DETRESSE,  Default));
   \   0422   8E....         MOV       A,DATDbkMirrors+48
   \   0425   9E....         MOV       DATKwpTxBuffer+5,A
   1662                      LAPKwpWriteDiagnosticResponse((U32)(1+cNbTIMER_DETRESSE            ), mDATRead(U8Bit, EEP_TIMER_DETRESSE,       Default));
   \   0428   8E....         MOV       A,DATDbkMirrors+49
   \   042B   9E....         MOV       DATKwpTxBuffer+8,A
   1663                      LAPKwpWriteDiagnosticResponse((U32)(1+cNbTPS_APC                   ), mDATRead(U8Bit, EEP_TPS_APC,              Default));
   \   042E   8E....         MOV       A,DATDbkMirrors+33
   \   0431   9E....         MOV       DATKwpTxBuffer+9,A
   1664                      LAPKwpWriteDiagnosticResponse((U32)(1+cNbTPS_PLAF                  ), mDATRead(U8Bit, EEP_TPS_PLAF,             Default));
   \   0434   8E....         MOV       A,DATDbkMirrors+32
   \   0437   9E....         MOV       DATKwpTxBuffer+10,A
   1665                      LAPKwpWriteDiagnosticResponse((U32)(1+cNbTPS_ESSUIE_MINI           ), mDATRead(U8Bit, EEP_TPS_ESSUIE_MINI,      Default));
   \   043A   8E....         MOV       A,DATDbkMirrors+42
   \   043D   9E....         MOV       DATKwpTxBuffer+13,A
   1666                      LAPKwpWriteDiagnosticResponse((U32)(1+cNbTPS_MAX_COUPLBLOC         ), mDATRead(U8Bit, EEP_TPS_MAX_COUPLBLOC,    Default));
   \   0440   8E....         MOV       A,DATDbkMirrors+36
   \   0443   9E....         MOV       DATKwpTxBuffer+14,A
   1667                      LAPKwpWriteDiagnosticResponse((U32)(1+cNbTPS_ARRET                 ), mDATRead(U8Bit, EEP_TPS_ARRET,            Default));
   \   0446   8E....         MOV       A,DATDbkMirrors+37
   \   0449   9E....         MOV       DATKwpTxBuffer+15,A
   1668                      LAPKwpWriteDiagnosticResponse((U32)(1+cNbTPS_REPRISE               ), mDATRead(U8Bit, EEP_TPS_REPRISE,          Default));
   \   044C   8E....         MOV       A,DATDbkMirrors+44
   \   044F   9E....         MOV       DATKwpTxBuffer+16,A
   1669                      LAPKwpWriteDiagnosticResponse((U32)(1+cNbTPS_FILT_AF               ), mDATRead(U8Bit, EEP_TPS_FILT_AF,          Default));
   \   0452   8E....         MOV       A,DATDbkMirrors+35
   \   0455   9E....         MOV       DATKwpTxBuffer+17,A
   1670                      LAPKwpWriteDiagnosticResponse((U32)(1+cNbTPS_POSIT_BALAIS          ), mDATRead(U8Bit, EEP_TPS_POSIT_BALAIS,     Default));
   \   0458   8E....         MOV       A,DATDbkMirrors+34
   \   045B   9E....         MOV       DATKwpTxBuffer+18,A
   1671                      LAPKwpWriteDiagnosticResponse((U32)(1+cNbPROLONG_APPUI_COURT       ), mDATRead(U8Bit, EEP_PROLONG_APPUI_COURT,  Default));
   \   045E   8E....         MOV       A,DATDbkMirrors+38
   \   0461   9E....         MOV       DATKwpTxBuffer+23,A
   1672                      LAPKwpWriteDiagnosticResponse((U32)(1+cNbPROLONG_APPUI_LONG        ), mDATRead(U8Bit, EEP_PROLONG_APPUI_LONG,   Default));
   \   0464   8E....         MOV       A,DATDbkMirrors+39
   \   0467   9E....         MOV       DATKwpTxBuffer+24,A
   1673                      LAPKwpWriteDiagnosticResponse((U32)(1+cNbTPS_APPUILAV              ), mDATRead(U8Bit, EEP_TPS_APPUILAV,         Default));
   \   046A   8E....         MOV       A,DATDbkMirrors+40
   \   046D   9E....         MOV       DATKwpTxBuffer+25,A
   1674                      LAPKwpWriteDiagnosticResponse((U32)(1+cNbTPS_POSIT_BALAIS_AR       ), mDATRead(U8Bit, EEP_TPS_POSIT_BALAIS_AR,  Default));
   \   0470   8E....         MOV       A,DATDbkMirrors+43
   \   0473   9E....         MOV       DATKwpTxBuffer+40,A
   1675                      LAPKwpWriteDiagnosticResponse((U32)(1+cNbPROLONG_APPUI_ARR         ), mDATRead(U8Bit, EEP_PROLONG_APPUI_ARR,    Default));
   \   0476   8E....         MOV       A,DATDbkMirrors+45
   \   0479   9E....         MOV       DATKwpTxBuffer+41,A
   1676                      LAPKwpWriteDiagnosticResponse((U32)(1+cNbSEUIL_VIT_CONDAROU        ), mDATRead(U8Bit, EEP_SEUIL_VIT_CONDAROU,   Default));
   \   047C   8E....         MOV       A,DATDbkMirrors+55
   \   047F   9E....         MOV       DATKwpTxBuffer+43,A
   1677                      LAPKwpWriteDiagnosticResponse((U32)(1+cNbTPS_COM_MOTEUR            ), mDATRead(U8Bit, EEP_TPS_COM_MOTEUR,       Default));
   \   0482   8E....         MOV       A,DATDbkMirrors+56
   \   0485   9E....         MOV       DATKwpTxBuffer+44,A
   1678                      LAPKwpWriteDiagnosticResponse((U32)(1+cNbNBCOM_MAX                 ), mDATRead(U8Bit, EEP_NBCOM_MAX,            Default));
   \   0488   8E....         MOV       A,DATDbkMirrors+57
   \   048B   9E....         MOV       DATKwpTxBuffer+45,A
   1679                      LAPKwpWriteDiagnosticResponse((U32)(1+cNbTPS_REF                   ), mDATRead(U8Bit, EEP_TPS_REF,              Default));
   \   048E   8E....         MOV       A,DATDbkMirrors+58
   \   0491   9E....         MOV       DATKwpTxBuffer+46,A
   1680                      LAPKwpWriteDiagnosticResponse((U32)(1+cNbTIMER_RECONDA_AUTO        ), mDATRead(U8Bit, EEP_TIMER_RECONDA_AUTO,   Default));
   \   0494   8E....         MOV       A,DATDbkMirrors+59
   \   0497   9E....         MOV       DATKwpTxBuffer+47,A
   1681                      LAPKwpWriteDiagnosticResponse((U32)(1+cNbN_MISE_APC                ), mDATRead(U8Bit, EEP_N_MISE_APC,           Default));
   \   049A   8E....         MOV       A,DATDbkMirrors+60
   \   049D   9E....         MOV       DATKwpTxBuffer+48,A
   1682                      LAPKwpWriteDiagnosticResponse((U32)(1+cNbTMPMERA                   ), mDATRead(U8Bit, EEP_TimeOutMERA,              Default));
   \   04A0   8E....         MOV       A,DATDbkMirrors+65
   \   04A3   9E....         MOV       DATKwpTxBuffer+49,A
   1683                      LAPKwpWriteDiagnosticResponse((U32)(1+cNbTPS_OUVPORTE              ), mDATRead(U8Bit, EEP_TPS_OUVPORTE,         Default));
   \   04A6   8E....         MOV       A,DATDbkMirrors+61
   \   04A9   9E....         MOV       DATKwpTxBuffer+50,A
   1684                      LAPKwpWriteDiagnosticResponse((U32)(1+cNbTPS_TEMPO_DEG             ), mDATRead(U8Bit, EEP_TPS_TEMPO_DEG,        Default));
   \   04AC   8E....         MOV       A,DATDbkMirrors+50
   \   04AF   9E....         MOV       DATKwpTxBuffer+51,A
   1685                      LAPKwpWriteDiagnosticResponse((U32)(1+cNbTPS_IMPUL_MINI            ), mDATRead(U8Bit, EEP_TPS_IMPUL_MINI,       Default));
   \   04B2   8E....         MOV       A,DATDbkMirrors+51
   \   04B5   9E....         MOV       DATKwpTxBuffer+52,A
   1686                      LAPKwpWriteDiagnosticResponse((U32)(1+cNbSBR_ACTIVE_SPEED_THRESH_TP), mDATRead(U8Bit, EEP_SBR_ACTIVE_SPEED_THRESH_TP,   Default));
   \   04B8   8E....         MOV       A,DATDbkMirrors+53
   \   04BB   9E....         MOV       DATKwpTxBuffer+54,A
   1687                      LAPKwpWriteDiagnosticResponse((U32)(1+cNbSBR_TIMEOUT_TM_TP         ), mDATRead(U8Bit, EEP_SBR_TIMEOUT_TM_TP,            Default));
   \   04BE   8E....         MOV       A,DATDbkMirrors+52
   \   04C1   9E....         MOV       DATKwpTxBuffer+55,A
   1688                      LAPKwpWriteDiagnosticResponse((U32)(1+cNbMAX_NB_ALERT_SEQUENCES_TP ), mDATRead(U8Bit, EEP_MAX_NB_ALERT_SEQUENCES_TP,    Default));
   \   04C4   8E....         MOV       A,DATDbkMirrors+54
   \   04C7   9E....         MOV       DATKwpTxBuffer+56,A
   1689                      LAPKwpWriteDiagnosticResponse((U32)(1+cNbTPS_BUZ_CLI               ), mDATRead(U8Bit, EEP_TPS_BUZ_CLI,                  Default));
   \   04CA   8E....         MOV       A,DATDbkMirrors+62
   \   04CD   9E....         MOV       DATKwpTxBuffer+58,A
   1690                      LAPKwpWriteDiagnosticResponse((U32)(1+cNbTPS_CLI                   ), mDATRead(U8Bit, EEP_TPS_CLI,                      Default));
   \   04D0   8E....         MOV       A,DATDbkMirrors+46
   \   04D3   9E....         MOV       DATKwpTxBuffer+59,A
   1691                      LAPKwpWriteDiagnosticResponse((U32)(1+cNbTPS_CLIDEGRAD             ), mDATRead(U8Bit, EEP_TPS_CLIDEGRAD,                Default));
   \   04D6   8E....         MOV       A,DATDbkMirrors+47
   \   04D9   9E....         MOV       DATKwpTxBuffer+60,A
   1692          
   1693          
   1694                      u8ResponseLengthL = cRDBLIDAns_FactoryConfig_Lgth;
   \   04DC   891C           MOVW      AX,SP
   \   04DE   D6             MOVW      HL,AX
   \   04DF   A13A           MOV       A,#58
   \   04E1   9B....         BR        N:??LAPAfsTreatReadDataByLocalIdentifierService_1
   1695                      break;
   1696          
   1697                  case cRDBLID_BCMIdentificationID :
   1698          
   1699                      u8TempVarL = ReadECU_LOG(&u8ResponseLengthL);
   1700                      
   1701                      //CCOV adzhelp: Bootloader is not available in unit test framework
   1702                      if (u8TempVarL == cLAPKwpServiceIsCorrect)
   \                     ??LAPAfsTreatSecurityAccessService_105:
   \   04E4   891C           MOVW      AX,SP
   \   04E6   16....         MOVW      HL,#LWRD(ReadECU_LOG)
   \   04E9   A4..           MOV       E,#BYTE3(ReadECU_LOG)
   \   04EB   ..             CALLT     [__T_?FAR_FAST_CALL_L07]
   \   04EC   4D00           CMP       A,#0
   \   04EE   BD4D           BNZ       ??LAPAfsTreatSecurityAccessService_174
   1703                      {
   1704                          // Serial number is obtained from EEP if it exists
   1705                          if (   (mDATReadTable(U8Bit, EEP_SerialNumber, cByte0, Default) != 0) 
   1706                               ||(mDATReadTable(U8Bit, EEP_SerialNumber, cByte1, Default) != 0) 
   1707                               ||(mDATReadTable(U8Bit, EEP_SerialNumber, cByte2, Default) != 0) )
   \   04F0   8E....         MOV       A,DATSbkMirrors+20
   \   04F3   4D00           CMP       A,#0
   \   04F5   BD0E           BNZ       ??LAPAfsTreatSecurityAccessService_175
   \   04F7   8E....         MOV       A,DATSbkMirrors+21
   \   04FA   4D00           CMP       A,#0
   \   04FC   BD07           BNZ       ??LAPAfsTreatSecurityAccessService_175
   \   04FE   8E....         MOV       A,DATSbkMirrors+22
   \   0501   4D00           CMP       A,#0
   \   0503   AD1D           BZ        ??LAPAfsTreatSecurityAccessService_176
   1708                          {
   1709                              // Serial number exists in EEP, use it
   1710                              for (u8IndexL = 0; u8IndexL < cEEP_SerialNumberLength; u8IndexL++)
   \                     ??LAPAfsTreatSecurityAccessService_175:
   \   0505   12....         MOVW      BC,#DATKwpTxBuffer+26
   \   0508   14....         MOVW      DE,#DATSbkMirrors
   \   050B   A003           MOV       X,#3
   1711                              {
   1712                                  LAPKwpWriteDiagnosticResponse((cEEP_SerialNumberIndex+u8IndexL),mDATReadTable(U8Bit, EEP_SerialNumber, u8IndexL, Default));
   \                     ??LAPAfsTreatReadDataByLocalIdentifierService_4:
   \   050D   B5             PUSH      DE
   \   050E   B6             POP       HL
   \   050F   E6             XCHW      AX,HL
   \   0510   CA1400         ADDW      AX,#20
   \   0513   E6             XCHW      AX,HL
   \   0514   87             MOV       A,[HL]
   \   0515   B3             PUSH      BC
   \   0516   B6             POP       HL
   \   0517   97             MOV       [HL],A
   1713                              }
   \   0518   84             INCW      DE
   \   0519   B3             PUSH      BC
   \   051A   B6             POP       HL
   \   051B   86             INCW      HL
   \   051C   B7             PUSH      HL
   \   051D   B2             POP       BC
   \   051E   50             DEC       X
   \   051F   60             MOV       A,X
   \   0520   BDEB           BNZ       ??LAPAfsTreatReadDataByLocalIdentifierService_4
   1714                          }
   1715                          else
   1716                          {
   1717                              // Serial number already taken from log zone
   1718                          }
   1719                          
   1720                          // Version identification is taken from ROM
   1721                          u8BytePos = cVersionIndex;
   1722                          LAPKwpWriteDiagnosticResponse(u8BytePos,mDATReadTable(U8Bit, VerVersionNum,0,Default));
   \                     ??LAPAfsTreatSecurityAccessService_176:
   \   0522   8E....         MOV       A,DATCmnVerVersionNum
   \   0525   9E....         MOV       DATKwpTxBuffer+19,A
   1723                          u8BytePos++;
   1724                          LAPKwpWriteDiagnosticResponse(u8BytePos,mDATReadTable(U8Bit, VerVersionNum,1,Default));
   \   0528   8E....         MOV       A,DATCmnVerVersionNum+1
   \   052B   9E....         MOV       DATKwpTxBuffer+20,A
   1725                          u8BytePos++;
   1726                          LAPKwpWriteDiagnosticResponse(u8BytePos,mDATReadTable(U8Bit, VerRevisionNum,0,Default));
   \   052E   8E....         MOV       A,DATCmnVerRevisionNum
   \   0531   9E....         MOV       DATKwpTxBuffer+21,A
   1727                          u8BytePos++;
   1728                          LAPKwpWriteDiagnosticResponse(u8BytePos,mDATReadTable(U8Bit, VerRevisionNum,1,Default));
   \   0534   8E....         MOV       A,DATCmnVerRevisionNum+1
   \   0537   9E....         MOV       DATKwpTxBuffer+22,A
   \   053A   9B....         BR        N:??LAPAfsTreatSecurityAccessService_177
   1729                      }
   1730                      else
   1731                      {
   1732                      #if defined(COMPILATION_NATIVE) || defined(UTEST) || defined(DEBUG)
   1733                          // ECU reference cannot be obtained from log zone, get it from ROM
   1734                          // (for simulation, unit test and debugger)
   1735          
   1736                          u8BytePos = cByte2;
   1737          
   1738                          for(u8IndexL=0;u8IndexL< cEEP_ECUReferenceLength;u8IndexL++)
   \                     ??LAPAfsTreatSecurityAccessService_174:
   \   053D   12....         MOVW      BC,#DATKwpTxBuffer+5
   \   0540   14....         MOVW      DE,#DATSbkMirrors
   \   0543   A005           MOV       X,#5
   1739                          {
   1740                              // ECU reference
   1741                              LAPKwpWriteDiagnosticResponse(u8BytePos+u8IndexL,mDATReadTable(U8Bit,EEP_ECUReference,u8IndexL,Default));
   \                     ??LAPAfsTreatReadDataByLocalIdentifierService_5:
   \   0545   B5             PUSH      DE
   \   0546   B6             POP       HL
   \   0547   E6             XCHW      AX,HL
   \   0548   CA0F00         ADDW      AX,#15
   \   054B   E6             XCHW      AX,HL
   \   054C   87             MOV       A,[HL]
   \   054D   B3             PUSH      BC
   \   054E   B6             POP       HL
   \   054F   97             MOV       [HL],A
   1742                          }
   \   0550   84             INCW      DE
   \   0551   B3             PUSH      BC
   \   0552   B6             POP       HL
   \   0553   86             INCW      HL
   \   0554   B7             PUSH      HL
   \   0555   B2             POP       BC
   \   0556   50             DEC       X
   \   0557   60             MOV       A,X
   \   0558   BDEB           BNZ       ??LAPAfsTreatReadDataByLocalIdentifierService_5
   1743          
   1744                          u8BytePos += cEEP_ECUReferenceLength;
   1745          
   1746                          LAPKwpWriteDiagnosticResponse(u8BytePos,mDATRead(U8Bit, EEP_VDiag, Default));
   \   055A   8E....         MOV       A,DATDbkMirrors
   \   055D   9E....         MOV       DATKwpTxBuffer+10,A
   1747                          u8BytePos++;
   1748                          // Supplier's Code
   1749                          LAPKwpWriteDiagnosticResponse(u8BytePos, cSupplierCode1);
   \   0560   A130           MOV       A,#48
   \   0562   16....         MOVW      HL,#DATKwpTxBuffer+11
   \   0565   97             MOV       [HL],A
   1750                          u8BytePos++;
   1751                          LAPKwpWriteDiagnosticResponse(u8BytePos, cSupplierCode2);
   \   0566   A132           MOV       A,#50
   \   0568   86             INCW      HL
   \   0569   97             MOV       [HL],A
   1752                          u8BytePos++;
   1753                          LAPKwpWriteDiagnosticResponse(u8BytePos, cSupplierCode3);
   \   056A   A131           MOV       A,#49
   \   056C   86             INCW      HL
   \   056D   97             MOV       [HL],A
   1754                          u8BytePos++;
   1755                          for(u8IndexL=0;u8IndexL< cEEP_PieNumberLength;u8IndexL++)
   \   056E   12....         MOVW      BC,#DATKwpTxBuffer+14
   \   0571   14....         MOVW      DE,#DATSbkMirrors
   \   0574   A005           MOV       X,#5
   1756                          {
   1757                              LAPKwpWriteDiagnosticResponse(u8BytePos+u8IndexL,mDATReadTable(U8Bit,EEP_PieNumber,u8IndexL,Default));  
   \                     ??LAPAfsTreatReadDataByLocalIdentifierService_6:
   \   0576   B5             PUSH      DE
   \   0577   B6             POP       HL
   \   0578   E6             XCHW      AX,HL
   \   0579   CA0A00         ADDW      AX,#10
   \   057C   E6             XCHW      AX,HL
   \   057D   87             MOV       A,[HL]
   \   057E   B3             PUSH      BC
   \   057F   B6             POP       HL
   \   0580   97             MOV       [HL],A
   1758                          }
   \   0581   84             INCW      DE
   \   0582   B3             PUSH      BC
   \   0583   B6             POP       HL
   \   0584   86             INCW      HL
   \   0585   B7             PUSH      HL
   \   0586   B2             POP       BC
   \   0587   50             DEC       X
   \   0588   60             MOV       A,X
   \   0589   BDEB           BNZ       ??LAPAfsTreatReadDataByLocalIdentifierService_6
   1759                          u8BytePos += cEEP_PieNumberLength;
   1760                          LAPKwpWriteDiagnosticResponse(u8BytePos,mDATReadTable(U8Bit, VerVersionNum,0,Default));
   \   058B   8E....         MOV       A,DATCmnVerVersionNum
   \   058E   9E....         MOV       DATKwpTxBuffer+19,A
   1761                          u8BytePos++;
   1762                          LAPKwpWriteDiagnosticResponse(u8BytePos,mDATReadTable(U8Bit, VerVersionNum,1,Default));
   \   0591   8E....         MOV       A,DATCmnVerVersionNum+1
   \   0594   9E....         MOV       DATKwpTxBuffer+20,A
   1763                          u8BytePos++;
   1764                          LAPKwpWriteDiagnosticResponse(u8BytePos,mDATReadTable(U8Bit, VerRevisionNum,0,Default));
   \   0597   8E....         MOV       A,DATCmnVerRevisionNum
   \   059A   9E....         MOV       DATKwpTxBuffer+21,A
   1765                          u8BytePos++;
   1766                          LAPKwpWriteDiagnosticResponse(u8BytePos,mDATReadTable(U8Bit, VerRevisionNum,1,Default));
   \   059D   8E....         MOV       A,DATCmnVerRevisionNum+1
   \   05A0   9E....         MOV       DATKwpTxBuffer+22,A
   1767                          u8BytePos++;
   1768                      
   1769                          LAPKwpWriteDiagnosticResponse(u8BytePos,mDATReadTable(U8Bit,EEP_PieIndex,0,Default));
   \   05A3   8E....         MOV       A,DATSbkMirrors+23
   \   05A6   9E....         MOV       DATKwpTxBuffer+23,A
   1770                          u8BytePos++;
   1771                          LAPKwpWriteDiagnosticResponse(u8BytePos,mDATReadTable(U8Bit,EEP_PieIndex,1,Default));
   \   05A9   8E....         MOV       A,DATSbkMirrors+24
   \   05AC   9E....         MOV       DATKwpTxBuffer+24,A
   1772                          u8BytePos++; 
   1773                      
   1774                          LAPKwpWriteDiagnosticResponse(u8BytePos,mDATRead(U8Bit,EEP_ECUType,Default));
   \   05AF   8E....         MOV       A,DATSbkMirrors+32
   \   05B2   9E....         MOV       DATKwpTxBuffer+25,A
   1775                          u8BytePos++; 
   1776                          // Cm006459: BCM Serial Number
   1777                          for (u8IndexL = 0; u8IndexL < cEEP_SerialNumberLength; u8IndexL++)
   \   05B5   12....         MOVW      BC,#DATKwpTxBuffer+26
   \   05B8   14....         MOVW      DE,#DATSbkMirrors
   \   05BB   A003           MOV       X,#3
   1778                          {
   1779                              LAPKwpWriteDiagnosticResponse((u8BytePos+u8IndexL),mDATReadTable(U8Bit, EEP_SerialNumber, u8IndexL, Default));
   \                     ??LAPAfsTreatReadDataByLocalIdentifierService_7:
   \   05BD   B5             PUSH      DE
   \   05BE   B6             POP       HL
   \   05BF   E6             XCHW      AX,HL
   \   05C0   CA1400         ADDW      AX,#20
   \   05C3   E6             XCHW      AX,HL
   \   05C4   87             MOV       A,[HL]
   \   05C5   B3             PUSH      BC
   \   05C6   B6             POP       HL
   \   05C7   97             MOV       [HL],A
   1780                          }
   \   05C8   84             INCW      DE
   \   05C9   B3             PUSH      BC
   \   05CA   B6             POP       HL
   \   05CB   86             INCW      HL
   \   05CC   B7             PUSH      HL
   \   05CD   B2             POP       BC
   \   05CE   50             DEC       X
   \   05CF   60             MOV       A,X
   \   05D0   BDEB           BNZ       ??LAPAfsTreatReadDataByLocalIdentifierService_7
   1781                      #else
   1782                          // target with no bootloader
   1783                          u8RequestStatusL = cLAPKwpConditionNotCorrect;
   1784                      #endif
   1785                      }
   1786          
   1787                      u8ResponseLengthL = cRDBLIDAns_BCMIdentification_Lgth;
   \                     ??LAPAfsTreatSecurityAccessService_177:
   \   05D2   891C           MOVW      AX,SP
   \   05D4   D6             MOVW      HL,AX
   \   05D5   A11A           MOV       A,#26
   \   05D7   9B....         BR        N:??LAPAfsTreatReadDataByLocalIdentifierService_1
   1788                      break;
   1789          
   1790          
   1791                  case cRDBLID_ImmoDataID :
   1792                      for(u8IndexL=0;u8IndexL<(cRDBLIDAns_ImmoData_Lgth - cDataOffset);u8IndexL++)
   \                     ??LAPAfsTreatSecurityAccessService_111:
   \   05DA   16....         MOVW      HL,#DATKwpTxBuffer+5
   \   05DD   A018           MOV       X,#24
   1793                      {
   1794                          LAPKwpWriteDiagnosticResponse(cByte2+u8IndexL,0x00);
   \                     ??LAPAfsTreatReadDataByLocalIdentifierService_8:
   \   05DF   A100           MOV       A,#0
   \   05E1   97             MOV       [HL],A
   1795                      }
   \   05E2   86             INCW      HL
   \   05E3   50             DEC       X
   \   05E4   BDF9           BNZ       ??LAPAfsTreatReadDataByLocalIdentifierService_8
   1796                      u8IndexL = cByte2;
   1797                      //Byte 1
   1798                      bDiagVERLOGON = (mDATRead(U1Bit, VERLOGON, Default) 
   1799                                      || (cFalse == mDATRead(U1Bit, EEP_EraseAFSCodeRequest,Default)));
   \   05E6   8E....         MOV       A,DATCmnImmoData+12
   \   05E9   4D00           CMP       A,#0
   \   05EB   BD0C           BNZ       ??LAPAfsTreatSecurityAccessService_178
   \   05ED   16....         MOVW      HL,#DATDbkMirrors+143
   \   05F0   31B602         BT        [HL].3, ??LAPAfsTreatSecurityAccessService_179
   \   05F3   FA04           BR        ??LAPAfsTreatSecurityAccessService_178
   \                     ??LAPAfsTreatSecurityAccessService_179:
   \   05F5   A100           MOV       A,#0
   \   05F7   FA02           BR        ??LAPAfsTreatSecurityAccessService_180
   \                     ??LAPAfsTreatSecurityAccessService_178:
   \   05F9   A101           MOV       A,#1
   1800                      //QACJ 3198: akodzhh: Variable is initialized and then modified bit by bit before being used
   1801                      u8TempVarL = 0x00;
   1802                      u8TempVarL =(mDATRead(U1Bit, EEP_BCMBlank, Default)) |
   1803                                  (mDATRead(U1Bit, DATTrpIdentifierOfPresentKeyIsReceived, Default)<<c1Bits) |
   1804                                  (mDATRead(U1Bit, DATTrpIdentifierOfPresentKeyIsValid, Default)   <<c2Bits) |
   1805                                  (mDATRead(U1Bit, DATTrpResponseToChallengeIsPresent, Default)    <<c3Bits) |
   1806                                  (mDATRead(U1Bit, DATTrpResponseToChallengeIsValid, Default)      <<c4Bits) |
   1807                                  (bDiagVERLOGON <<c5Bits);   // Protected Vehicle
   1808                                  // Reserved 6
   1809                                  // Reserved 7                  
   1810                      LAPKwpWriteDiagnosticResponse(u8IndexL,u8TempVarL);
   \                     ??LAPAfsTreatSecurityAccessService_180:
   \   05FB   A020           MOV       X,#32
   \   05FD   3188           MULU      X
   \   05FF   60             MOV       A,X
   \   0600   72             MOV       C,A
   \   0601   16....         MOVW      HL,#DatTrpExportData+51
   \   0604   87             MOV       A,[HL]
   \   0605   5D01           AND       A,#1
   \   0607   A010           MOV       X,#16
   \   0609   3188           MULU      X
   \   060B   60             MOV       A,X
   \   060C   73             MOV       B,A
   \   060D   8E....         MOV       A,DatTrpExportData+50
   \   0610   24             ROR       A,0x1
   \   0611   25             RORC      A,0x1
   \   0612   25             RORC      A,0x1
   \   0613   25             RORC      A,0x1
   \   0614   5D08           AND       A,#8
   \   0616   74             MOV       E,A
   \   0617   8E....         MOV       A,DatTrpExportData+50
   \   061A   5D60           AND       A,#96
   \   061C   24             ROR       A,0x1
   \   061D   25             RORC      A,0x1
   \   061E   25             RORC      A,0x1
   \   061F   25             RORC      A,0x1
   \   0620   16....         MOVW      HL,#DATDbkMirrors+143
   \   0623   70             MOV       X,A
   \   0624   87             MOV       A,[HL]
   \   0625   5D01           AND       A,#1
   \   0627   30             XCH       A,X
   \   0628   6160           OR        X,A
   \   062A   64             MOV       A,E
   \   062B   6160           OR        X,A
   \   062D   63             MOV       A,B
   \   062E   6160           OR        X,A
   \   0630   62             MOV       A,C
   \   0631   6160           OR        X,A
   \   0633   60             MOV       A,X
   \   0634   9E....         MOV       DATKwpTxBuffer+5,A
   1811                      u8IndexL++;
   1812          
   1813                      //Byte 2
   1814                      //QACJ 3198: akodzhh: Variable is initialized and then modified bit by bit before being used
   1815                      u8TempVarL = 0x00;
   1816                      u8TempVarL =(((U8)(1<<mDATRead(U8Bit, DATTrpIndexOfKeyRecognized, Default)) & cMaskIndexOfKeyRecognized)) |
   1817                                  ((mDATRead(U8Bit, DATTrpDiagKeyFrequency, Default) & cMaskDiagKeyFrequency)<<c4Bits)|
   1818                                  ( mDATRead(U1Bit, VirginKeyAuthentOk, Default)  <<c7Bits); // HK TODO: ?cle_vierge(transport key)
   1819                      LAPKwpWriteDiagnosticResponse(u8IndexL,u8TempVarL);
   \   0637   A100           MOV       A,#0
   \   0639   16....         MOVW      HL,#DatTrpExportData+50
   \   063C   71B4           MOV1      CY,[HL].3
   \   063E   27             ROLC      A,0x1
   \   063F   A080           MOV       X,#128
   \   0641   3188           MULU      X
   \   0643   60             MOV       A,X
   \   0644   74             MOV       E,A
   \   0645   8E....         MOV       A,DatTrpExportData+40
   \   0648   5D07           AND       A,#7
   \   064A   A010           MOV       X,#16
   \   064C   3188           MULU      X
   \   064E   60             MOV       A,X
   \   064F   73             MOV       B,A
   \   0650   8E....         MOV       A,DatTrpExportData+41
   \   0653   72             MOV       C,A
   \   0654   100100         MOVW      AX,#1
   \   0657   ..             CALLT     [__T_?I_LSH_L02]
   \   0658   60             MOV       A,X
   \   0659   5D0F           AND       A,#15
   \   065B   616B           OR        A,B
   \   065D   616C           OR        A,E
   \   065F   9E....         MOV       DATKwpTxBuffer+6,A
   1820                      u8IndexL++;
   1821          
   1822                      //Byte 3
   1823                      //QACJ 3198: akodzhh: Variable is initialized and then modified bit by bit before being used
   1824                      u8TempVarL = 0x00;
   1825                      u8TempVarL = (mDATRead(U1Bit, DATTrpPresentKeyLocked,Default)) |
   1826                                  ((mDATRead(U8Bit,LearningModeInProgress,Default) & cMaskLearningModeInProgress) <<c1Bits) |
   1827                                  (mDATRead(U1Bit, EEP_AppCleNonEffect, Default)           <<c4Bits) |
   1828                                  // Reserved 5
   1829                                  (mDATRead(U1Bit, EEP_CodeAFSAvailable, Default)          <<c6Bits) |
   1830                                  (mDATRead(U1Bit, AFSCodeIsOk,Default)                    <<c7Bits    );
   1831                      LAPKwpWriteDiagnosticResponse(u8IndexL,u8TempVarL);
   \   0662   16....         MOVW      HL,#DATDbkMirrors+143
   \   0665   31C704         BF        [HL].4, ??LAPAfsTreatSecurityAccessService_181
   \   0668   A201           MOV       C,#1
   \   066A   FA02           BR        ??LAPAfsTreatSecurityAccessService_182
   \                     ??LAPAfsTreatSecurityAccessService_181:
   \   066C   A200           MOV       C,#0
   \                     ??LAPAfsTreatSecurityAccessService_182:
   \   066E   319704         BF        [HL].1, ??LAPAfsTreatSecurityAccessService_183
   \   0671   A301           MOV       B,#1
   \   0673   FA02           BR        ??LAPAfsTreatSecurityAccessService_184
   \                     ??LAPAfsTreatSecurityAccessService_183:
   \   0675   A300           MOV       B,#0
   \                     ??LAPAfsTreatSecurityAccessService_184:
   \   0677   16....         MOVW      HL,#DATCmnImmoData+5
   \   067A   87             MOV       A,[HL]
   \   067B   5D01           AND       A,#1
   \   067D   A080           MOV       X,#128
   \   067F   3188           MULU      X
   \   0681   60             MOV       A,X
   \   0682   74             MOV       E,A
   \   0683   63             MOV       A,B
   \   0684   A040           MOV       X,#64
   \   0686   3188           MULU      X
   \   0688   60             MOV       A,X
   \   0689   73             MOV       B,A
   \   068A   62             MOV       A,C
   \   068B   A010           MOV       X,#16
   \   068D   3188           MULU      X
   \   068F   60             MOV       A,X
   \   0690   72             MOV       C,A
   \   0691   8E....         MOV       A,DATCmnImmoData+17
   \   0694   5D07           AND       A,#7
   \   0696   21             CLR1      CY
   \   0697   27             ROLC      A,0x1
   \   0698   16....         MOVW      HL,#DatTrpExportData+51
   \   069B   70             MOV       X,A
   \   069C   A100           MOV       A,#0
   \   069E   7194           MOV1      CY,[HL].1
   \   06A0   27             ROLC      A,0x1
   \   06A1   30             XCH       A,X
   \   06A2   6160           OR        X,A
   \   06A4   62             MOV       A,C
   \   06A5   6160           OR        X,A
   \   06A7   63             MOV       A,B
   \   06A8   6160           OR        X,A
   \   06AA   64             MOV       A,E
   \   06AB   6160           OR        X,A
   \   06AD   60             MOV       A,X
   \   06AE   9E....         MOV       DATKwpTxBuffer+7,A
   1832                      u8IndexL++;
   1833          
   1834                      //Byte 4
   1835                      //QACJ 3198: akodzhh: Variable is initialized and then modified bit by bit before being used
   1836                      u8TempVarL = 0x00;
   1837                      u8TempVarL =   // Reserved 0..6
   1838                                  
   1839                                  (mDATRead(U1Bit, EEP_EraseAFSCodeRequest,Default)     <<c7Bits); 
   1840                      LAPKwpWriteDiagnosticResponse(u8IndexL,u8TempVarL);
   \   06B1   A100           MOV       A,#0
   \   06B3   16....         MOVW      HL,#DATDbkMirrors+143
   \   06B6   71B4           MOV1      CY,[HL].3
   \   06B8   27             ROLC      A,0x1
   \   06B9   A080           MOV       X,#128
   \   06BB   3188           MULU      X
   \   06BD   60             MOV       A,X
   \   06BE   9E....         MOV       DATKwpTxBuffer+8,A
   1841                      u8IndexL++;
   1842          
   1843                      //Byte 5
   1844                      LAPKwpWriteDiagnosticResponse(u8IndexL,((U8)(mDATRead(U32Bit,DATTrpIdentifierOfPresentKey,Default)>>c24Bits)));
   \   06C1   02....         MOVW      AX,DatTrpExportData+14
   \   06C4   9E....         MOV       DATKwpTxBuffer+9,A
   1845                      u8IndexL++;
   1846                      //Byte 6
   1847                      LAPKwpWriteDiagnosticResponse(u8IndexL,((U8)(mDATRead(U32Bit,DATTrpIdentifierOfPresentKey,Default)>>c16Bits)));
   \   06C7   60             MOV       A,X
   \   06C8   9E....         MOV       DATKwpTxBuffer+10,A
   1848                      u8IndexL++;
   1849                      //Byte 7
   1850                      LAPKwpWriteDiagnosticResponse(u8IndexL,((U8)(mDATRead(U32Bit,DATTrpIdentifierOfPresentKey,Default)>>c8Bits)));
   \   06CB   02....         MOVW      AX,DatTrpExportData+12
   \   06CE   9E....         MOV       DATKwpTxBuffer+11,A
   1851                      u8IndexL++;
   1852                      //Byte 8
   1853                      LAPKwpWriteDiagnosticResponse(u8IndexL,((U8)mDATRead(U32Bit,DATTrpIdentifierOfPresentKey   ,Default)));
   \   06D1   60             MOV       A,X
   \   06D2   9E....         MOV       DATKwpTxBuffer+12,A
   1854                      u8IndexL++;
   1855          
   1856                      //Byte 9 to 11
   1857                      if ((mDATRead(U8Bit,LearningModeInProgress,Default) != cDATNoLearningMode)
   1858                        &&(mDATRead(U8Bit,LearningModeInProgress,Default) != cDATBcmReplacement))
   \   06D5   8E....         MOV       A,DATCmnImmoData+17
   \   06D8   4D00           CMP       A,#0
   \   06DA   AD15           BZ        ??LAPAfsTreatSecurityAccessService_185
   \   06DC   4D02           CMP       A,#2
   \   06DE   AD11           BZ        ??LAPAfsTreatSecurityAccessService_185
   1859                      {
   1860                          LAPKwpWriteDiagnosticResponse(u8IndexL,mDATRead(U8Bit,NumberOfKeysLearnt,Default));
   \   06E0   8E....         MOV       A,DATCmnImmoData+13
   \   06E3   9E....         MOV       DATKwpTxBuffer+13,A
   1861                          u8IndexL++;
   1862                          LAPKwpWriteDiagnosticResponse(u8IndexL,mDATRead(U8Bit,NumberOfKeys433MHzLearnt,Default));
   \   06E6   8E....         MOV       A,DATCmnImmoData+16
   \   06E9   9E....         MOV       DATKwpTxBuffer+14,A
   1863                          u8IndexL++;
   1864                          LAPKwpWriteDiagnosticResponse(u8IndexL,mDATRead(U8Bit,NumberOfKeys315MHzLearnt,Default));
   \   06EC   8E....         MOV       A,DATCmnImmoData+14
   \   06EF   FA0F           BR        ??LAPAfsTreatSecurityAccessService_186
   1865                          u8IndexL++;
   1866                      }   
   1867                      else
   1868                      {
   1869                          LAPKwpWriteDiagnosticResponse(u8IndexL,mDATRead(U8Bit,EEP_NbKeysLearnt,Default));
   \                     ??LAPAfsTreatSecurityAccessService_185:
   \   06F1   8E....         MOV       A,DATDbkMirrors+141
   \   06F4   9E....         MOV       DATKwpTxBuffer+13,A
   1870                          u8IndexL++;
   1871                          LAPKwpWriteDiagnosticResponse(u8IndexL,mDATRead(U8Bit,EEP_NbKeysStd433MhzLearnt,Default));
   \   06F7   8E....         MOV       A,DATDbkMirrors+138
   \   06FA   9E....         MOV       DATKwpTxBuffer+14,A
   1872                          u8IndexL++;
   1873                          LAPKwpWriteDiagnosticResponse(u8IndexL,mDATRead(U8Bit,EEP_NbKeysStd315MhzLearnt,Default));
   \   06FD   8E....         MOV       A,DATDbkMirrors+139
   \                     ??LAPAfsTreatSecurityAccessService_186:
   \   0700   9E....         MOV       DATKwpTxBuffer+15,A
   1874                          u8IndexL++;
   1875                      }
   1876          
   1877                      // Cm005064; Byte 12,13 - RESERVED
   1878                      LAPKwpWriteDiagnosticResponse(u8IndexL,cReservedValue);
   \   0703   A1FF           MOV       A,#255
   \   0705   16....         MOVW      HL,#DATKwpTxBuffer+16
   \   0708   97             MOV       [HL],A
   1879                      u8IndexL++;
   1880                      LAPKwpWriteDiagnosticResponse(u8IndexL,cReservedValue);
   \   0709   86             INCW      HL
   \   070A   97             MOV       [HL],A
   1881                      u8IndexL++;
   1882          
   1883                      //Byte 14
   1884                      //QACJ 3198: akodzhh: Variable is initialized and then modified bit by bit before being used
   1885                      u8TempVarL = 0x00;
   1886                      u8TempVarL =( mDATRead(U1Bit,LastOpeningPanelControl,Default))|
   1887                                  ( mDATRead(U1Bit,LastCommandOrigin,Default)                     <<c1Bits) |
   1888                                  ( mDATRead(U1Bit,VehicleIsAutoRelocked,Default)                 <<c2Bits) |
   1889                                  ( mDATRead(U1Bit,EEP_CARCLIENT,Default)                         <<c3Bits) | // CONDAROU_ACTIV
   1890                                  ( mDATRead(U1Bit,VehicleIsLockedWithSpeed,Default)              <<c4Bits) | // CONDA_ROULANT
   1891                                  ( mDATRead(U1Bit,VehiculeHasBeenMoving,Default)                 <<c5Bits) | // VEHICULE_ROULANT
   1892                                  ( mDATRead(U1Bit,PWR_IGN,Default)                               <<c6Bits);
   1893                                  // Reserved 7
   1894                      LAPKwpWriteDiagnosticResponse(u8IndexL,u8TempVarL);
   \   070B   16....         MOVW      HL,#DATDbkMirrors+25
   \   070E   31B704         BF        [HL].3, ??LAPAfsTreatSecurityAccessService_187
   \   0711   A501           MOV       D,#1
   \   0713   FA02           BR        ??LAPAfsTreatSecurityAccessService_188
   \                     ??LAPAfsTreatSecurityAccessService_187:
   \   0715   A500           MOV       D,#0
   \                     ??LAPAfsTreatSecurityAccessService_188:
   \   0717   F0..           MOV       A,S:DATDinInputBuffers+6
   \   0719   5D01           AND       A,#1
   \   071B   A040           MOV       X,#64
   \   071D   3188           MULU      X
   \   071F   60             MOV       A,X
   \   0720   72             MOV       C,A
   \   0721   8E....         MOV       A,DATCmnData+27
   \   0724   A020           MOV       X,#32
   \   0726   3188           MULU      X
   \   0728   60             MOV       A,X
   \   0729   73             MOV       B,A
   \   072A   8E....         MOV       A,DATCmnData+26
   \   072D   A010           MOV       X,#16
   \   072F   3188           MULU      X
   \   0731   60             MOV       A,X
   \   0732   74             MOV       E,A
   \   0733   65             MOV       A,D
   \   0734   A008           MOV       X,#8
   \   0736   3188           MULU      X
   \   0738   60             MOV       A,X
   \   0739   75             MOV       D,A
   \   073A   8E....         MOV       A,DATCmnData+25
   \   073D   26             ROL       A,0x1
   \   073E   27             ROLC      A,0x1
   \   073F   5DFC           AND       A,#252
   \   0741   70             MOV       X,A
   \   0742   8E....         MOV       A,DATCmnData+24
   \   0745   21             CLR1      CY
   \   0746   27             ROLC      A,0x1
   \   0747   68....         OR        A,DATCmnData+28
   \   074A   6168           OR        A,X
   \   074C   616D           OR        A,D
   \   074E   616C           OR        A,E
   \   0750   616B           OR        A,B
   \   0752   616A           OR        A,C
   \   0754   9E....         MOV       DATKwpTxBuffer+18,A
   1895                      u8IndexL++;
   1896          
   1897                      //Byte 15   HK TODO #3 #6 #7 Bits Reserved - chek
   1898                      LAPKwpWriteDiagnosticResponse(u8IndexL,mDATRead(U8Bit,RfPushMemorized,Default));
   \   0757   8E....         MOV       A,DATRfPushMemorized
   \   075A   9E....         MOV       DATKwpTxBuffer+19,A
   1899                      u8IndexL++;
   1900          
   1901                      //Byte 16 to 19 // Ident_Cle
   1902                      LAPKwpWriteDiagnosticResponse(u8IndexL,(((U8)(mDATRead(U32Bit,RfRCFrameIDReceived,Default)>>c24Bits) &cLSBMask)));
   \   075D   02....         MOVW      AX,DATRfRCFrameIDEReceived+2
   \   0760   9E....         MOV       DATKwpTxBuffer+20,A
   1903                      u8IndexL++;
   1904                      LAPKwpWriteDiagnosticResponse(u8IndexL,(((U8)(mDATRead(U32Bit,RfRCFrameIDReceived,Default)>>c16Bits) &cLSBMask)));
   \   0763   60             MOV       A,X
   \   0764   9E....         MOV       DATKwpTxBuffer+21,A
   1905                      u8IndexL++;
   1906                      LAPKwpWriteDiagnosticResponse(u8IndexL,(((U8)(mDATRead(U32Bit,RfRCFrameIDReceived,Default)>>c8Bits ) &cLSBMask)));
   \   0767   02....         MOVW      AX,DATRfRCFrameIDEReceived
   \   076A   9E....         MOV       DATKwpTxBuffer+22,A
   1907                      u8IndexL++;
   1908                      LAPKwpWriteDiagnosticResponse(u8IndexL,(((U8)(mDATRead(U32Bit,RfRCFrameIDReceived,Default)         ) &cLSBMask)));
   \   076D   60             MOV       A,X
   \   076E   9E....         MOV       DATKwpTxBuffer+23,A
   1909                      u8IndexL++;
   1910          
   1911                      //Byte 20 and 21
   1912                      u8TempVarL = (U8)(mDATRead(U16Bit,AuthentPermanentTotalCounter,Default)>>c8Bits);
   1913                      LAPKwpWriteDiagnosticResponse(u8IndexL,u8TempVarL);
   \   0771   02....         MOVW      AX,DATCmnImmoData+24
   \   0774   9E....         MOV       DATKwpTxBuffer+24,A
   1914                      u8IndexL++;
   1915                      u8TempVarL = (U8)(mDATRead(U16Bit,AuthentPermanentTotalCounter,Default));
   1916                      LAPKwpWriteDiagnosticResponse(u8IndexL,u8TempVarL);
   \   0777   8E....         MOV       A,DATCmnImmoData+24
   \   077A   9E....         MOV       DATKwpTxBuffer+25,A
   1917                      u8IndexL++;
   1918                      //Byte 22
   1919                      LAPKwpWriteDiagnosticResponse(u8IndexL,mDATRead(U8Bit,AuthentPermanentFailCounter,Default));
   \   077D   8E....         MOV       A,DATCmnImmoData+19
   \   0780   9E....         MOV       DATKwpTxBuffer+26,A
   1920                      u8IndexL++;
   1921                      //Byte 23
   1922                      LAPKwpWriteDiagnosticResponse(u8IndexL,mDATRead(U8Bit,AuthentPermanentResynchroFailCounter,Default));
   \   0783   8E....         MOV       A,DATCmnImmoData+20
   \   0786   9E....         MOV       DATKwpTxBuffer+27,A
   1923                      u8IndexL++;
   1924                      //Byte 24 RESERVED
   1925                      u8TempVarL = cReservedValue; 
   1926                      LAPKwpWriteDiagnosticResponse(u8IndexL,u8TempVarL);
   \   0789   A1FF           MOV       A,#255
   \   078B   16....         MOVW      HL,#DATKwpTxBuffer+28
   \   078E   97             MOV       [HL],A
   1927          
   1928          
   1929                      u8ResponseLengthL = cRDBLIDAns_ImmoData_Lgth;
   \   078F   9B....         BR        N:??LAPAfsTreatSecurityAccessService_177
   1930                      break;
   1931          
   1932          
   1933                  case cRDBLID_APVCodeID :
   1934                      if(mDATRead(U1Bit,EEP_CodeAFSAvailable,Default) != cFalse)
   \                     ??LAPAfsTreatSecurityAccessService_108:
   \   0792   16....         MOVW      HL,#DATDbkMirrors+143
   \   0795   319733         BF        [HL].1, ??LAPAfsTreatSecurityAccessService_189
   1935                      {
   1936                          u8BytePos = cByte2;
   1937                          mDATControl(Apr,cDATAprReadAfterSaleCode);
   \   0798   A106           MOV       A,#6
   \   079A   16....         MOVW      HL,#LWRD(DATAprControl)
   \   079D   A4..           MOV       E,#BYTE3(DATAprControl)
   \   079F   ..             CALLT     [__T_?FAR_CALL_L07]
   1938                          for(u8IndexL=0;u8IndexL<cDATTrpISKLengthInBytes;u8IndexL++)
   \   07A0   12....         MOVW      BC,#DATKwpTxBuffer+5
   \   07A3   14....         MOVW      DE,#DatAprExportData
   \   07A6   A006           MOV       X,#6
   1939                          { // APV code +checksum
   1940                              LAPKwpWriteDiagnosticResponse(cByte2+u8IndexL,mDATReadTable(U8Bit, DATAprAfterSaleCode,u8IndexL,Default));
   \                     ??LAPAfsTreatReadDataByLocalIdentifierService_9:
   \   07A8   B5             PUSH      DE
   \   07A9   B6             POP       HL
   \   07AA   E6             XCHW      AX,HL
   \   07AB   CA1400         ADDW      AX,#20
   \   07AE   E6             XCHW      AX,HL
   \   07AF   87             MOV       A,[HL]
   \   07B0   B3             PUSH      BC
   \   07B1   B6             POP       HL
   \   07B2   97             MOV       [HL],A
   1941                          }
   \   07B3   84             INCW      DE
   \   07B4   B3             PUSH      BC
   \   07B5   B6             POP       HL
   \   07B6   86             INCW      HL
   \   07B7   B7             PUSH      HL
   \   07B8   B2             POP       BC
   \   07B9   50             DEC       X
   \   07BA   60             MOV       A,X
   \   07BB   BDEB           BNZ       ??LAPAfsTreatReadDataByLocalIdentifierService_9
   1942                          u8BytePos += cDATTrpISKLengthInBytes;
   1943                          LAPKwpWriteDiagnosticResponse(u8BytePos, 0); 
   \   07BD   A100           MOV       A,#0
   \   07BF   16....         MOVW      HL,#DATKwpTxBuffer+11
   \   07C2   97             MOV       [HL],A
   1944          
   1945                          u8ResponseLengthL = cRDBLIDAns_APVCode_Lgth;
   \   07C3   891C           MOVW      AX,SP
   \   07C5   D6             MOVW      HL,AX
   \   07C6   A109           MOV       A,#9
   \   07C8   9B....         BR        N:??LAPAfsTreatReadDataByLocalIdentifierService_1
   1946                      }
   1947                      else
   1948                      {
   1949                          u8RequestStatusL = cLAPKwpConditionNotCorrect;
   \                     ??LAPAfsTreatSecurityAccessService_189:
   \   07CB   A122           MOV       A,#34
   1950                      }
   1951                      break;
   1952          
   1953                  case cRDBLID_InputAndVehicleStateID :
   1954                      u8BytePos = cByte2;
   1955                      //QACJ 3198: akodzhh: Variable is initialized and then modified bit by bit before being used
   1956                      u8TempVarL = 0x00; // Byte 1
   1957                      u8TempVarL = (mDATRead(U1Bit,PWR_IGN,       Default)   ) 
   1958                                  |(mDATRead(U1Bit,DOOR_LOCK_SW,  Default)<<c1Bits)
   1959                                  |(mDATRead(U1Bit,DOOR_UNLOCK_SW,Default)<<c2Bits)
   1960                                  |(mDATRead(U1Bit,RR_WASHER_SW  ,Default)<<c5Bits)
   1961                                  |(mDATRead(U1Bit,DEFROSTER_SW  ,Default)<<c6Bits)  // LUNETTE - Rear window input
   1962                                  |(mDATRead(U1Bit,DI_DATA_IMMOBILIZER, Default)<<c7Bits); // TRANSPONDEUR - Transponder line                    ;
   1963                      LAPKwpWriteDiagnosticResponse(u8BytePos,u8TempVarL);
   1964                      u8BytePos++;
   1965          
   1966                      //QACJ 3198: akodzhh: Variable is initialized and then modified bit by bit before being used
   1967                      u8TempVarL = 0x00; // Byte 2
   1968                      u8TempVarL = (mDATRead(U1Bit,RR_AUTOSTOP_SW,Default))
   1969                                  |(mDATRead(U1Bit,RR_WIPER_INT_SW,Default)<<c2Bits);                    
   1970                      LAPKwpWriteDiagnosticResponse(u8BytePos,u8TempVarL);
   1971                      u8BytePos++;
   1972          
   1973                      //QACJ 3198: akodzhh: Variable is initialized and then modified bit by bit before being used
   1974                      u8TempVarL = 0x00; // Byte 3 
   1975                      u8TempVarL =  (mDATRead(U1Bit,POSITION_LIGHTS,Default)   )  // CDE_FEUX_LANT - Side light input
   1976                                   |(mDATRead(U1Bit,HAZARD_SW,      Default)<<c1Bits)
   1977                                   |(mDATRead(U1Bit,R_FLASHER_SW,   Default)<<c2Bits)
   1978                                   |(mDATRead(U1Bit,L_FLASHER_SW,   Default)<<c3Bits)
   1979                                   |(mDATRead(U1Bit,FR_DOORS_SW,    Default)<<c4Bits) 
   1980                                   |(mDATRead(U1Bit,FR_AUTOSTOP_SW, Default)<<c5Bits)
   1981                                   |(mDATRead(U1Bit,RR_DOORS_SW,    Default)<<c6Bits)
   1982                                   |(mDATRead(U1Bit,FR_WASHER_SW,   Default)<<c7Bits);
   1983                      LAPKwpWriteDiagnosticResponse(u8BytePos,u8TempVarL);
   1984                      u8BytePos++;
   1985          
   1986                      //QACJ 3198: akodzhh: Variable is initialized and then modified bit by bit before being used
   1987                      u8TempVarL = 0x00; // Byte 4
   1988                      u8TempVarL = (mDATRead(U1Bit,FR_WIPER_INT_SW,Default)   )                    
   1989                                  |(mDATRead(U1Bit,AIRBAG_CRASH,   Default)<<c7Bits);
   1990                      LAPKwpWriteDiagnosticResponse(u8BytePos,u8TempVarL);
   1991                      u8BytePos++;
   1992          
   1993                      //QACJ 3198: akodzhh: Variable is initialized and then modified bit by bit before being used
   1994                      u8TempVarL = 0x00; // Byte 5
   1995                      u8TempVarL = (mDATRead(U1Bit,DI_VERLOG,   Default)<<c1Bits)
   1996                                  // FR_FOG_SW/HIGH_LOW_BEAM(P0.4)                        
   1997                                  |(mDATRead(U1Bit,HIGH_LOW_BEAM,   Default)<<c3Bits)   // BRAV+CODE_PHARE - front fog lights + code/light input
   1998                                  |(mDATRead(U1Bit,RR_FOG_SW,   Default)<<c6Bits)
   1999                                  |(mDATRead(U1Bit,SEATBELT_REMINDER_SW,Default)<<c7Bits);
   2000                      LAPKwpWriteDiagnosticResponse(u8BytePos,u8TempVarL);
   2001                      u8BytePos++;
   2002          
   2003                      //QACJ 3198: akodzhh: Variable is initialized and then modified bit by bit before being used
   2004                      u8TempVarL = 0x00; // Byte 6
   2005                      u8TempVarL =  (mDATRead(U1Bit,ENGINE_RPM,Default)<<c1Bits);    // MOT_TOURNANT - Engine running           
   2006                      LAPKwpWriteDiagnosticResponse(u8BytePos,u8TempVarL);
   2007          
   2008          
   2009                      u8ResponseLengthL = cRDBLIDAns_InputAndVehicleStateLgth;
   2010                      break;
   2011          
   2012                  case cRDBLID_OutputStateID :
   2013                      for(u8IndexL=0;u8IndexL<(U8)(cRDBLIDAns_OutputStateLgth - cDataOffset);u8IndexL++)
   2014                      {
   2015                          LAPKwpWriteDiagnosticResponse(cByte2+u8IndexL,0x00);
   2016                      } 
   2017                      if (mDATRead(U8Bit, PWM_ROOMLAMPDiagRatio, Default) != 0) // Read DATPwmHardBuffer
   2018                      {
   2019                          u8PlafValueL = 1;
   2020                      }
   2021                      else
   2022                      {
   2023                          u8PlafValueL = 0;
   2024                      }
   2025          
   2026                      u8BytePos = cByte2;
   2027                      u8TempVarL = (mDATRead(U1Bit,LOCK_DOORS,   Immediate)         )     
   2028                                  |(mDATRead(U1Bit,UNLOCK_DRIVER_DOOR,Immediate) <<c1Bits)  // Cm005581: prsFS_DIAG-802
   2029                                  |(mDATRead(U1Bit,UNLOCK_DRIVER_DOOR,Immediate) <<c2Bits)
   2030                                  |(mDATRead(U1Bit,DI_RIGHT,     Immediate) <<c3Bits) 
   2031                                  |(mDATRead(U1Bit,DI_LEFT,      Immediate) <<c4Bits)
   2032                                  // HK TODO:  Nominal/Double frequency indicator - bits 5,6 
   2033                                  |((mDATRead(U8Bit,FlashingFrequency,Default) & cMaskFlashingFrequency)<<c5Bits)
   2034                                  |( u8PlafValueL<<c7Bits);
   2035                      LAPKwpWriteDiagnosticResponse(u8BytePos,u8TempVarL);
   2036                      u8BytePos++;
   2037          
   2038                      //QACJ 3198: akodzhh: Variable is initialized and then modified bit by bit before being used
   2039                      u8TempVarL = 0x00;
   2040                      u8TempVarL = (mDATRead(U1Bit,FRONT_WIPER,    Immediate))
   2041                                  // Reserved 1 
   2042                                  |(mDATRead(U1Bit,OPEN_DOOR_LED,  Immediate)<<c2Bits) 
   2043                                  |(mDATRead(U1Bit,VERLOG_LED   ,  Immediate)<<c3Bits)
   2044                                  // Reserved 4                        
   2045                                  |(mDATRead(U1Bit,RR_WIPER_RR_FOG_LAMP,  Immediate)<<c5Bits)
   2046                                  // Reserved 6 
   2047                                  |(mDATRead(U1Bit,BAT_LIGHT_TEMPO,Immediate)<<c7Bits);
   2048          
   2049                      LAPKwpWriteDiagnosticResponse(u8BytePos,u8TempVarL);
   2050                      u8BytePos++;
   2051          
   2052                      // Byte #8 Cm005581: prsFS_DIAG-802
   2053                      //QACJ 3198: akodzhh: Variable is initialized and then modified bit by bit before being used
   2054                      u8TempVarL = 0x00;
   2055                      u8TempVarL =// Reserved 0 
   2056                                   (mDATRead(U1Bit,RR_WIPER_RR_FOG_LAMP, Immediate )<<c1Bits)
   2057                                  // Reserved 2
   2058                                  // Reserved 3
   2059                                  |(mDATRead(U1Bit,HORN_RL, Immediate)<<c4Bits)
   2060                                  // Reserved 5
   2061                                  // Reserved 6 
   2062                                  |(mDATRead(U1Bit,DEFROSTER, Immediate)<<c7Bits);
   2063          
   2064                      LAPKwpWriteDiagnosticResponse(u8BytePos,u8TempVarL);
   2065                      
   2066          
   2067                      // Byte 9,10 Reserved
   2068                      
   2069                      // Byet 11 
   2070                      u8TempVarL =  mDATRead(U1Bit, IsBuzzerSoundPlaying, Default) & 0x01;
   2071                      //Bits 1..7 Reserved 
   2072          
   2073                      LAPKwpWriteDiagnosticResponse(cByteOutputStateBuzzer,u8TempVarL);
   2074          
   2075                      u8ResponseLengthL = cRDBLIDAns_OutputStateLgth;
   2076                      break;
   2077          
   2078          
   2079                  case cRDBLID_VINID :
   2080                      for(u8IndexL=0; u8IndexL<(U8)(cRDBLIDAns_VIN_Lgth - cDataOffset); u8IndexL++)
   2081                      {
   2082                          LAPKwpWriteDiagnosticResponse(cByte2+u8IndexL,mDATReadTable(U8Bit,EEP_VehicleIdentifierNumber,u8IndexL,Default));
   2083                      }
   2084                      u8ResponseLengthL = cRDBLIDAns_VIN_Lgth;
   2085                      break;
   2086          
   2087                  case cRDBLID_CodedValueID :
   2088          
   2089                      for(u8IndexL=0;u8IndexL<(U8)(cRDBLIDAns_CodedValueLgth - cDataOffset);u8IndexL++)
   2090                      {
   2091                          LAPKwpWriteDiagnosticResponse(cByte2+u8IndexL,cReservedValue);
   2092                      }
   2093          
   2094                      u8BytePos = cByte2; 
   2095                      //HK TODO: EAVAV -  Value of the variable intermittent facility ring (not used)? (U16 in AW1092 - AnaCmdEsavCadenceInMilliVolt)
   2096                      LAPKwpWriteDiagnosticResponse(u8BytePos,  0x00); // FR_WIPER_INT_SW
   2097                      u8BytePos++;
   2098                      LAPKwpWriteDiagnosticResponse(u8BytePos,  0);
   2099                      u8BytePos++;
   2100                      LAPKwpWriteDiagnosticResponse(u8BytePos,  mDATRead(U8Bit, VEHICLE_SPEED, Default));
   2101                      
   2102                      // reserved 5..6 FFh             
   2103                      // CLR: #78
   2104                      LAPKwpWriteDiagnosticResponse(cByteSTATUS_CLIGN,  mDATRead(U8Bit, STATUS_CLIGN  , Default) ); 
   2105                      // reserved 8..13 FFh
   2106                      // CLR: #78
   2107                      LAPKwpWriteDiagnosticResponse(cByteTENSION_BATTERIE, mDATRead(U8Bit, TENSION_BATTERIE, Default)); 
   2108                      // reserved 15..17 FFh
   2109                      // blank    18..21 00h
   2110                      u8BytePos = cByte18;
   2111                      LAPKwpWriteDiagnosticResponse(u8BytePos, (U8)0x00);
   2112                      u8BytePos++;
   2113                      LAPKwpWriteDiagnosticResponse(u8BytePos, (U8)0x00);             
   2114                      u8BytePos++;
   2115                      LAPKwpWriteDiagnosticResponse(u8BytePos, (U8)0x00);
   2116                      u8BytePos++;
   2117                      LAPKwpWriteDiagnosticResponse(u8BytePos, (U8)0x00);
   2118          
   2119                      u8ResponseLengthL = cRDBLIDAns_CodedValueLgth;
   2120                      break;
   2121          
   2122                  default :
   2123                  #ifdef BOOTLOADER_IS_SUPPORTED
   2124                      if( mIsECU_LOG_ID(LAPKwpReadDiagnosticRequest(1)))
   2125                      {
   2126                          u8RequestStatusL = ReadECU_LOG(&u8ResponseLengthL);
   2127                      }
   2128                      else
   2129                  #endif
   2130                      {
   2131                          u8RequestStatusL = 
   2132                          LIBCfdExecuteConfDiagRequest(   LAPKwpReadDiagnosticRequest(0),
   2133                                                          LAPKwpReadDiagnosticRequest(1),
   2134                                                          &u8ResponseLengthL);
   2135                      }
   2136                      
   2137                      break;
   2138                  }
   2139          
   2140              }
   2141              else
   2142              {
   2143                  u8RequestStatusL = cLAPKwpInvalidFormat;
   2144              }
   2145          
   2146              if(u8RequestStatusL == cLAPKwpServiceIsCorrect)
   2147              {
   2148                  LAPKwpWriteDiagnosticResponse(1,LAPKwpReadDiagnosticRequest(1));
   2149                  LAPKwpPreparePositiveResponse(u8ResponseLengthL);
   2150              }
   2151              else
   2152              {
   2153                  LAPKwpPrepareNegativeResponse(u8RequestStatusL);
   \                     ??LAPAfsTreatReadDataByLocalIdentifierService_10:
   \   07CD   9A....         CALL      LAPKwpPrepareNegativeResponse
   2154              }
   2155              LAPKwpSetServiceIsFinished();
   \                     ??LAPAfsTreatReadDataByLocalIdentifierService_11:
   \   07D0   A103           MOV       A,#3
   \   07D2   9E....         MOV       u8LAPKwpRequestStatus,A
   2156          }
   \   07D5   B0             POP       AX
   \   07D6   B0             POP       AX
   \   07D7   B2             POP       BC
   \   07D8   AF             RET       
   \                     ??LAPAfsTreatSecurityAccessService_112:
   \   07D9   3143..04       BF        S:DATDinInputBuffers+6.4, ??LAPAfsTreatSecurityAccessService_190
   \   07DD   A201           MOV       C,#1
   \   07DF   FA02           BR        ??LAPAfsTreatSecurityAccessService_191
   \                     ??LAPAfsTreatSecurityAccessService_190:
   \   07E1   A200           MOV       C,#0
   \                     ??LAPAfsTreatSecurityAccessService_191:
   \   07E3   3113..04       BF        S:DATDinInputBuffers+8.1, ??LAPAfsTreatSecurityAccessService_192
   \   07E7   A301           MOV       B,#1
   \   07E9   FA02           BR        ??LAPAfsTreatSecurityAccessService_193
   \                     ??LAPAfsTreatSecurityAccessService_192:
   \   07EB   A300           MOV       B,#0
   \                     ??LAPAfsTreatSecurityAccessService_193:
   \   07ED   3123..04       BF        S:DATDinInputBuffers+5.2, ??LAPAfsTreatSecurityAccessService_194
   \   07F1   A401           MOV       E,#1
   \   07F3   FA02           BR        ??LAPAfsTreatSecurityAccessService_195
   \                     ??LAPAfsTreatSecurityAccessService_194:
   \   07F5   A400           MOV       E,#0
   \                     ??LAPAfsTreatSecurityAccessService_195:
   \   07F7   A100           MOV       A,#0
   \   07F9   7154..         MOV1      CY,S:DATDinInputBuffers.5
   \   07FC   27             ROLC      A,0x1
   \   07FD   A080           MOV       X,#128
   \   07FF   3188           MULU      X
   \   0801   60             MOV       A,X
   \   0802   75             MOV       D,A
   \   0803   F0..           MOV       A,S:DATDinInputBuffers+3
   \   0805   5D01           AND       A,#1
   \   0807   A040           MOV       X,#64
   \   0809   3188           MULU      X
   \   080B   60             MOV       A,X
   \   080C   76             MOV       L,A
   \   080D   64             MOV       A,E
   \   080E   A020           MOV       X,#32
   \   0810   3188           MULU      X
   \   0812   60             MOV       A,X
   \   0813   74             MOV       E,A
   \   0814   63             MOV       A,B
   \   0815   26             ROL       A,0x1
   \   0816   27             ROLC      A,0x1
   \   0817   5DFC           AND       A,#252
   \   0819   73             MOV       B,A
   \   081A   62             MOV       A,C
   \   081B   21             CLR1      CY
   \   081C   27             ROLC      A,0x1
   \   081D   70             MOV       X,A
   \   081E   F0..           MOV       A,S:DATDinInputBuffers+6
   \   0820   5D01           AND       A,#1
   \   0822   30             XCH       A,X
   \   0823   6160           OR        X,A
   \   0825   63             MOV       A,B
   \   0826   6160           OR        X,A
   \   0828   64             MOV       A,E
   \   0829   6160           OR        X,A
   \   082B   66             MOV       A,L
   \   082C   6160           OR        X,A
   \   082E   65             MOV       A,D
   \   082F   6160           OR        X,A
   \   0831   60             MOV       A,X
   \   0832   9E....         MOV       DATKwpTxBuffer+5,A
   \   0835   3113..04       BF        S:DATDinInputBuffers+2.1, ??LAPAfsTreatSecurityAccessService_196
   \   0839   A001           MOV       X,#1
   \   083B   FA02           BR        ??LAPAfsTreatSecurityAccessService_197
   \                     ??LAPAfsTreatSecurityAccessService_196:
   \   083D   A000           MOV       X,#0
   \                     ??LAPAfsTreatSecurityAccessService_197:
   \   083F   3133..04       BF        S:DATDinInputBuffers+5.3, ??LAPAfsTreatSecurityAccessService_198
   \   0843   A101           MOV       A,#1
   \   0845   FA02           BR        ??LAPAfsTreatSecurityAccessService_199
   \                     ??LAPAfsTreatSecurityAccessService_198:
   \   0847   A100           MOV       A,#0
   \                     ??LAPAfsTreatSecurityAccessService_199:
   \   0849   26             ROL       A,0x1
   \   084A   27             ROLC      A,0x1
   \   084B   5DFC           AND       A,#252
   \   084D   6160           OR        X,A
   \   084F   60             MOV       A,X
   \   0850   9E....         MOV       DATKwpTxBuffer+6,A
   \   0853   891C           MOVW      AX,SP
   \   0855   80             INCW      AX
   \   0856   D6             MOVW      HL,AX
   \   0857   3133..04       BF        S:DATDinInputBuffers+4.3, ??LAPAfsTreatSecurityAccessService_200
   \   085B   A101           MOV       A,#1
   \   085D   FA02           BR        ??LAPAfsTreatSecurityAccessService_201
   \                     ??LAPAfsTreatSecurityAccessService_200:
   \   085F   A100           MOV       A,#0
   \                     ??LAPAfsTreatSecurityAccessService_201:
   \   0861   97             MOV       [HL],A
   \   0862   3143..04       BF        S:DATDinInputBuffers+1.4, ??LAPAfsTreatSecurityAccessService_202
   \   0866   A101           MOV       A,#1
   \   0868   FA02           BR        ??LAPAfsTreatSecurityAccessService_203
   \                     ??LAPAfsTreatSecurityAccessService_202:
   \   086A   A100           MOV       A,#0
   \                     ??LAPAfsTreatSecurityAccessService_203:
   \   086C   86             INCW      HL
   \   086D   97             MOV       [HL],A
   \   086E   3123..04       BF        S:DATDinInputBuffers+3.2, ??LAPAfsTreatSecurityAccessService_204
   \   0872   A201           MOV       C,#1
   \   0874   FA02           BR        ??LAPAfsTreatSecurityAccessService_205
   \                     ??LAPAfsTreatSecurityAccessService_204:
   \   0876   A200           MOV       C,#0
   \                     ??LAPAfsTreatSecurityAccessService_205:
   \   0878   3133..04       BF        S:DATDinInputBuffers+3.3, ??LAPAfsTreatSecurityAccessService_206
   \   087C   A301           MOV       B,#1
   \   087E   FA02           BR        ??LAPAfsTreatSecurityAccessService_207
   \                     ??LAPAfsTreatSecurityAccessService_206:
   \   0880   A300           MOV       B,#0
   \                     ??LAPAfsTreatSecurityAccessService_207:
   \   0882   3133..04       BF        S:DATDinInputBuffers+6.3, ??LAPAfsTreatSecurityAccessService_208
   \   0886   A401           MOV       E,#1
   \   0888   FA02           BR        ??LAPAfsTreatSecurityAccessService_209
   \                     ??LAPAfsTreatSecurityAccessService_208:
   \   088A   A400           MOV       E,#0
   \                     ??LAPAfsTreatSecurityAccessService_209:
   \   088C   3123..04       BF        S:DATDinInputBuffers+2.2, ??LAPAfsTreatSecurityAccessService_210
   \   0890   A501           MOV       D,#1
   \   0892   FA02           BR        ??LAPAfsTreatSecurityAccessService_211
   \                     ??LAPAfsTreatSecurityAccessService_210:
   \   0894   A500           MOV       D,#0
   \                     ??LAPAfsTreatSecurityAccessService_211:
   \   0896   F0..           MOV       A,S:DATDinInputBuffers+4
   \   0898   5D01           AND       A,#1
   \   089A   A080           MOV       X,#128
   \   089C   3188           MULU      X
   \   089E   60             MOV       A,X
   \   089F   B1             PUSH      AX
   \   08A0   F0..           MOV       A,S:DATDinInputBuffers+8
   \   08A2   5D01           AND       A,#1
   \   08A4   A040           MOV       X,#64
   \   08A6   3188           MULU      X
   \   08A8   60             MOV       A,X
   \   08A9   B1             PUSH      AX
   \   08AA   65             MOV       A,D
   \   08AB   A020           MOV       X,#32
   \   08AD   3188           MULU      X
   \   08AF   60             MOV       A,X
   \   08B0   B1             PUSH      AX
   \   08B1   64             MOV       A,E
   \   08B2   A010           MOV       X,#16
   \   08B4   3188           MULU      X
   \   08B6   60             MOV       A,X
   \   08B7   75             MOV       D,A
   \   08B8   63             MOV       A,B
   \   08B9   A008           MOV       X,#8
   \   08BB   3188           MULU      X
   \   08BD   60             MOV       A,X
   \   08BE   74             MOV       E,A
   \   08BF   62             MOV       A,C
   \   08C0   26             ROL       A,0x1
   \   08C1   27             ROLC      A,0x1
   \   08C2   5DFC           AND       A,#252
   \   08C4   73             MOV       B,A
   \   08C5   87             MOV       A,[HL]
   \   08C6   21             CLR1      CY
   \   08C7   27             ROLC      A,0x1
   \   08C8   72             MOV       C,A
   \   08C9   891C           MOVW      AX,SP
   \   08CB   CA0700         ADDW      AX,#7
   \   08CE   D6             MOVW      HL,AX
   \   08CF   87             MOV       A,[HL]
   \   08D0   616A           OR        A,C
   \   08D2   616B           OR        A,B
   \   08D4   616C           OR        A,E
   \   08D6   616D           OR        A,D
   \   08D8   30             XCH       A,X
   \   08D9   9A....         CALL      ?POPB_L_L06
   \   08DC   30             XCH       A,X
   \   08DD   6168           OR        A,X
   \   08DF   30             XCH       A,X
   \   08E0   9A....         CALL      ?POPB_L_L06
   \   08E3   30             XCH       A,X
   \   08E4   6168           OR        A,X
   \   08E6   30             XCH       A,X
   \   08E7   9A....         CALL      ?POPB_L_L06
   \   08EA   30             XCH       A,X
   \   08EB   6168           OR        A,X
   \   08ED   9E....         MOV       DATKwpTxBuffer+7,A
   \   08F0   3123..04       BF        S:DATDinInputBuffers+8.2, ??LAPAfsTreatSecurityAccessService_212
   \   08F4   A201           MOV       C,#1
   \   08F6   FA02           BR        ??LAPAfsTreatSecurityAccessService_213
   \                     ??LAPAfsTreatSecurityAccessService_212:
   \   08F8   A200           MOV       C,#0
   \                     ??LAPAfsTreatSecurityAccessService_213:
   \   08FA   A100           MOV       A,#0
   \   08FC   7114..         MOV1      CY,S:DATDinInputBuffers.1
   \   08FF   27             ROLC      A,0x1
   \   0900   A080           MOV       X,#128
   \   0902   3188           MULU      X
   \   0904   60             MOV       A,X
   \   0905   6162           OR        C,A
   \   0907   62             MOV       A,C
   \   0908   9E....         MOV       DATKwpTxBuffer+8,A
   \   090B   3113..04       BF        S:DATDinInputBuffers+5.1, ??LAPAfsTreatSecurityAccessService_214
   \   090F   A201           MOV       C,#1
   \   0911   FA02           BR        ??LAPAfsTreatSecurityAccessService_215
   \                     ??LAPAfsTreatSecurityAccessService_214:
   \   0913   A200           MOV       C,#0
   \                     ??LAPAfsTreatSecurityAccessService_215:
   \   0915   A100           MOV       A,#0
   \   0917   7114..         MOV1      CY,S:DATDinInputBuffers+4.1
   \   091A   27             ROLC      A,0x1
   \   091B   A080           MOV       X,#128
   \   091D   3188           MULU      X
   \   091F   60             MOV       A,X
   \   0920   73             MOV       B,A
   \   0921   62             MOV       A,C
   \   0922   A040           MOV       X,#64
   \   0924   3188           MULU      X
   \   0926   60             MOV       A,X
   \   0927   72             MOV       C,A
   \   0928   F0..           MOV       A,S:DATDinInputBuffers+5
   \   092A   5D01           AND       A,#1
   \   092C   A008           MOV       X,#8
   \   092E   3188           MULU      X
   \   0930   F0..           MOV       A,S:DATDinInputBuffers+2
   \   0932   5D01           AND       A,#1
   \   0934   27             ROLC      A,0x1
   \   0935   6168           OR        A,X
   \   0937   616A           OR        A,C
   \   0939   616B           OR        A,B
   \   093B   9E....         MOV       DATKwpTxBuffer+9,A
   \   093E   8E....         MOV       A,bDATSpdENGINE_RPM
   \   0941   27             ROLC      A,0x1
   \                     ??LAPAfsTreatReadDataByLocalIdentifierService_12:
   \   0942   9E....         MOV       DATKwpTxBuffer+10,A
   \   0945   891C           MOVW      AX,SP
   \   0947   D6             MOVW      HL,AX
   \   0948   A108           MOV       A,#8
   \   094A   9B....         BR        N:??LAPAfsTreatReadDataByLocalIdentifierService_1
   \                     ??LAPAfsTreatSecurityAccessService_113:
   \   094D   16....         MOVW      HL,#DATKwpTxBuffer+5
   \   0950   A006           MOV       X,#6
   \                     ??LAPAfsTreatReadDataByLocalIdentifierService_13:
   \   0952   A100           MOV       A,#0
   \   0954   97             MOV       [HL],A
   \   0955   86             INCW      HL
   \   0956   50             DEC       X
   \   0957   BDF9           BNZ       ??LAPAfsTreatReadDataByLocalIdentifierService_13
   \   0959   8E....         MOV       A,DATPwmHardBuffer+2
   \   095C   4D00           CMP       A,#0
   \   095E   AD04           BZ        ??LAPAfsTreatSecurityAccessService_216
   \   0960   A101           MOV       A,#1
   \   0962   FA02           BR        ??LAPAfsTreatSecurityAccessService_217
   \                     ??LAPAfsTreatSecurityAccessService_216:
   \   0964   A100           MOV       A,#0
   \                     ??LAPAfsTreatSecurityAccessService_217:
   \   0966   16....         MOVW      HL,#DATDouOutputBuffer+3
   \   0969   31B70B         BF        [HL].3, ??LAPAfsTreatSecurityAccessService_218
   \   096C   D6             MOVW      HL,AX
   \   096D   891C           MOVW      AX,SP
   \   096F   80             INCW      AX
   \   0970   80             INCW      AX
   \   0971   E6             XCHW      AX,HL
   \   0972   70             MOV       X,A
   \   0973   A101           MOV       A,#1
   \   0975   FA09           BR        ??LAPAfsTreatSecurityAccessService_219
   \                     ??LAPAfsTreatSecurityAccessService_218:
   \   0977   D6             MOVW      HL,AX
   \   0978   891C           MOVW      AX,SP
   \   097A   80             INCW      AX
   \   097B   80             INCW      AX
   \   097C   E6             XCHW      AX,HL
   \   097D   70             MOV       X,A
   \   097E   A100           MOV       A,#0
   \                     ??LAPAfsTreatSecurityAccessService_219:
   \   0980   97             MOV       [HL],A
   \   0981   30             XCH       A,X
   \   0982   16....         MOVW      HL,#DATDouOutputBuffer+3
   \   0985   31B70A         BF        [HL].3, ??LAPAfsTreatSecurityAccessService_220
   \   0988   D6             MOVW      HL,AX
   \   0989   891C           MOVW      AX,SP
   \   098B   80             INCW      AX
   \   098C   E6             XCHW      AX,HL
   \   098D   70             MOV       X,A
   \   098E   A101           MOV       A,#1
   \   0990   FA08           BR        ??LAPAfsTreatSecurityAccessService_221
   \                     ??LAPAfsTreatSecurityAccessService_220:
   \   0992   D6             MOVW      HL,AX
   \   0993   891C           MOVW      AX,SP
   \   0995   80             INCW      AX
   \   0996   E6             XCHW      AX,HL
   \   0997   70             MOV       X,A
   \   0998   A100           MOV       A,#0
   \                     ??LAPAfsTreatSecurityAccessService_221:
   \   099A   97             MOV       [HL],A
   \   099B   60             MOV       A,X
   \   099C   16....         MOVW      HL,#DATDouOutputBuffer+3
   \   099F   31F704         BF        [HL].7, ??LAPAfsTreatSecurityAccessService_222
   \   09A2   A201           MOV       C,#1
   \   09A4   FA02           BR        ??LAPAfsTreatSecurityAccessService_223
   \                     ??LAPAfsTreatSecurityAccessService_222:
   \   09A6   A200           MOV       C,#0
   \                     ??LAPAfsTreatSecurityAccessService_223:
   \   09A8   31E704         BF        [HL].6, ??LAPAfsTreatSecurityAccessService_224
   \   09AB   A301           MOV       B,#1
   \   09AD   FA02           BR        ??LAPAfsTreatSecurityAccessService_225
   \                     ??LAPAfsTreatSecurityAccessService_224:
   \   09AF   A300           MOV       B,#0
   \                     ??LAPAfsTreatSecurityAccessService_225:
   \   09B1   A080           MOV       X,#128
   \   09B3   3188           MULU      X
   \   09B5   60             MOV       A,X
   \   09B6   B1             PUSH      AX
   \   09B7   8E....         MOV       A,DATCmnData+1
   \   09BA   5D03           AND       A,#3
   \   09BC   A020           MOV       X,#32
   \   09BE   3188           MULU      X
   \   09C0   60             MOV       A,X
   \   09C1   75             MOV       D,A
   \   09C2   63             MOV       A,B
   \   09C3   A010           MOV       X,#16
   \   09C5   3188           MULU      X
   \   09C7   60             MOV       A,X
   \   09C8   74             MOV       E,A
   \   09C9   62             MOV       A,C
   \   09CA   A008           MOV       X,#8
   \   09CC   3188           MULU      X
   \   09CE   60             MOV       A,X
   \   09CF   73             MOV       B,A
   \   09D0   891C           MOVW      AX,SP
   \   09D2   CA0300         ADDW      AX,#3
   \   09D5   D6             MOVW      HL,AX
   \   09D6   87             MOV       A,[HL]
   \   09D7   26             ROL       A,0x1
   \   09D8   27             ROLC      A,0x1
   \   09D9   5DFC           AND       A,#252
   \   09DB   72             MOV       C,A
   \   09DC   AE01           MOV       A,[HL+0x01]
   \   09DE   21             CLR1      CY
   \   09DF   27             ROLC      A,0x1
   \   09E0   16....         MOVW      HL,#DATDouOutputBuffer+3
   \   09E3   70             MOV       X,A
   \   09E4   87             MOV       A,[HL]
   \   09E5   5D01           AND       A,#1
   \   09E7   30             XCH       A,X
   \   09E8   6160           OR        X,A
   \   09EA   62             MOV       A,C
   \   09EB   6160           OR        X,A
   \   09ED   63             MOV       A,B
   \   09EE   6160           OR        X,A
   \   09F0   64             MOV       A,E
   \   09F1   6160           OR        X,A
   \   09F3   65             MOV       A,D
   \   09F4   6160           OR        X,A
   \   09F6   9A....         CALL      ?POPB_H_L06
   \   09F9   6160           OR        X,A
   \   09FB   60             MOV       A,X
   \   09FC   9E....         MOV       DATKwpTxBuffer+5,A
   \   09FF   31C704         BF        [HL].4, ??LAPAfsTreatSecurityAccessService_226
   \   0A02   A201           MOV       C,#1
   \   0A04   FA02           BR        ??LAPAfsTreatSecurityAccessService_227
   \                     ??LAPAfsTreatSecurityAccessService_226:
   \   0A06   A200           MOV       C,#0
   \                     ??LAPAfsTreatSecurityAccessService_227:
   \   0A08   16....         MOVW      HL,#DATDouOutputBuffer
   \   0A0B   31B704         BF        [HL].3, ??LAPAfsTreatSecurityAccessService_228
   \   0A0E   A301           MOV       B,#1
   \   0A10   FA02           BR        ??LAPAfsTreatSecurityAccessService_229
   \                     ??LAPAfsTreatSecurityAccessService_228:
   \   0A12   A300           MOV       B,#0
   \                     ??LAPAfsTreatSecurityAccessService_229:
   \   0A14   31A704         BF        [HL].2, ??LAPAfsTreatSecurityAccessService_230
   \   0A17   A401           MOV       E,#1
   \   0A19   FA02           BR        ??LAPAfsTreatSecurityAccessService_231
   \                     ??LAPAfsTreatSecurityAccessService_230:
   \   0A1B   A400           MOV       E,#0
   \                     ??LAPAfsTreatSecurityAccessService_231:
   \   0A1D   16....         MOVW      HL,#DATDouOutputBuffer+3
   \   0A20   31D704         BF        [HL].5, ??LAPAfsTreatSecurityAccessService_232
   \   0A23   A501           MOV       D,#1
   \   0A25   FA02           BR        ??LAPAfsTreatSecurityAccessService_233
   \                     ??LAPAfsTreatSecurityAccessService_232:
   \   0A27   A500           MOV       D,#0
   \                     ??LAPAfsTreatSecurityAccessService_233:
   \   0A29   A100           MOV       A,#0
   \   0A2B   71A4           MOV1      CY,[HL].2
   \   0A2D   27             ROLC      A,0x1
   \   0A2E   A080           MOV       X,#128
   \   0A30   3188           MULU      X
   \   0A32   60             MOV       A,X
   \   0A33   76             MOV       L,A
   \   0A34   65             MOV       A,D
   \   0A35   A020           MOV       X,#32
   \   0A37   3188           MULU      X
   \   0A39   60             MOV       A,X
   \   0A3A   75             MOV       D,A
   \   0A3B   64             MOV       A,E
   \   0A3C   A008           MOV       X,#8
   \   0A3E   3188           MULU      X
   \   0A40   63             MOV       A,B
   \   0A41   26             ROL       A,0x1
   \   0A42   27             ROLC      A,0x1
   \   0A43   5DFC           AND       A,#252
   \   0A45   6162           OR        C,A
   \   0A47   60             MOV       A,X
   \   0A48   6162           OR        C,A
   \   0A4A   65             MOV       A,D
   \   0A4B   6162           OR        C,A
   \   0A4D   66             MOV       A,L
   \   0A4E   6162           OR        C,A
   \   0A50   62             MOV       A,C
   \   0A51   9E....         MOV       DATKwpTxBuffer+6,A
   \   0A54   A6..           MOV       L,#LOW(DATDouOutputBuffer+3)
   \   0A56   31D704         BF        [HL].5, ??LAPAfsTreatSecurityAccessService_234
   \   0A59   A201           MOV       C,#1
   \   0A5B   FA02           BR        ??LAPAfsTreatSecurityAccessService_235
   \                     ??LAPAfsTreatSecurityAccessService_234:
   \   0A5D   A200           MOV       C,#0
   \                     ??LAPAfsTreatSecurityAccessService_235:
   \   0A5F   16....         MOVW      HL,#DATDouOutputBuffer+2
   \   0A62   31A704         BF        [HL].2, ??LAPAfsTreatSecurityAccessService_236
   \   0A65   A401           MOV       E,#1
   \   0A67   FA02           BR        ??LAPAfsTreatSecurityAccessService_237
   \                     ??LAPAfsTreatSecurityAccessService_236:
   \   0A69   A400           MOV       E,#0
   \                     ??LAPAfsTreatSecurityAccessService_237:
   \   0A6B   A100           MOV       A,#0
   \   0A6D   16....         MOVW      HL,#DATDouOutputBuffer+1
   \   0A70   7194           MOV1      CY,[HL].1
   \   0A72   27             ROLC      A,0x1
   \   0A73   A080           MOV       X,#128
   \   0A75   3188           MULU      X
   \   0A77   60             MOV       A,X
   \   0A78   73             MOV       B,A
   \   0A79   64             MOV       A,E
   \   0A7A   A010           MOV       X,#16
   \   0A7C   3188           MULU      X
   \   0A7E   62             MOV       A,C
   \   0A7F   27             ROLC      A,0x1
   \   0A80   6168           OR        A,X
   \   0A82   616B           OR        A,B
   \   0A84   9E....         MOV       DATKwpTxBuffer+7,A
   \   0A87   9A....         CALL      DATBuzIsSoundPlaying
   \   0A8A   5D01           AND       A,#1
   \   0A8C   9B....         BR        N:??LAPAfsTreatReadDataByLocalIdentifierService_12
   \                     ??LAPAfsTreatSecurityAccessService_106:
   \   0A8F   12....         MOVW      BC,#DATKwpTxBuffer+5
   \   0A92   14....         MOVW      DE,#DATSbkMirrors
   \   0A95   A013           MOV       X,#19
   \                     ??LAPAfsTreatReadDataByLocalIdentifierService_14:
   \   0A97   B5             PUSH      DE
   \   0A98   B6             POP       HL
   \   0A99   E6             XCHW      AX,HL
   \   0A9A   CA2600         ADDW      AX,#38
   \   0A9D   E6             XCHW      AX,HL
   \   0A9E   87             MOV       A,[HL]
   \   0A9F   B3             PUSH      BC
   \   0AA0   B6             POP       HL
   \   0AA1   97             MOV       [HL],A
   \   0AA2   84             INCW      DE
   \   0AA3   B3             PUSH      BC
   \   0AA4   B6             POP       HL
   \   0AA5   86             INCW      HL
   \   0AA6   B7             PUSH      HL
   \   0AA7   B2             POP       BC
   \   0AA8   50             DEC       X
   \   0AA9   60             MOV       A,X
   \   0AAA   BDEB           BNZ       ??LAPAfsTreatReadDataByLocalIdentifierService_14
   \   0AAC   891C           MOVW      AX,SP
   \   0AAE   D6             MOVW      HL,AX
   \   0AAF   A115           MOV       A,#21
   \   0AB1   9B....         BR        N:??LAPAfsTreatReadDataByLocalIdentifierService_1
   \                     ??LAPAfsTreatSecurityAccessService_114:
   \   0AB4   16....         MOVW      HL,#DATKwpTxBuffer+5
   \   0AB7   A014           MOV       X,#20
   \                     ??LAPAfsTreatReadDataByLocalIdentifierService_15:
   \   0AB9   A1FF           MOV       A,#255
   \   0ABB   97             MOV       [HL],A
   \   0ABC   86             INCW      HL
   \   0ABD   50             DEC       X
   \   0ABE   BDF9           BNZ       ??LAPAfsTreatReadDataByLocalIdentifierService_15
   \   0AC0   A100           MOV       A,#0
   \   0AC2   16....         MOVW      HL,#DATKwpTxBuffer+5
   \   0AC5   97             MOV       [HL],A
   \   0AC6   86             INCW      HL
   \   0AC7   97             MOV       [HL],A
   \   0AC8   8E....         MOV       A,u8DATSpdVEHICLE_SPEED
   \   0ACB   9E....         MOV       DATKwpTxBuffer+7,A
   \   0ACE   16....         MOVW      HL,#LWRD(DATPanCalculateFlashersCurrent8Bit)
   \   0AD1   A4..           MOV       E,#BYTE3(DATPanCalculateFlashersCurrent8Bit)
   \   0AD3   ..             CALLT     [__T_?FAR_CALL_L07]
   \   0AD4   9E....         MOV       DATKwpTxBuffer+10,A
   \   0AD7   16....         MOVW      HL,#LWRD(DATPanCalculateBatteryVoltage8Bit)
   \   0ADA   A4..           MOV       E,#BYTE3(DATPanCalculateBatteryVoltage8Bit)
   \   0ADC   ..             CALLT     [__T_?FAR_CALL_L07]
   \   0ADD   9E....         MOV       DATKwpTxBuffer+17,A
   \   0AE0   A100           MOV       A,#0
   \   0AE2   16....         MOVW      HL,#DATKwpTxBuffer+21
   \   0AE5   97             MOV       [HL],A
   \   0AE6   86             INCW      HL
   \   0AE7   97             MOV       [HL],A
   \   0AE8   86             INCW      HL
   \   0AE9   97             MOV       [HL],A
   \   0AEA   86             INCW      HL
   \   0AEB   97             MOV       [HL],A
   \   0AEC   891C           MOVW      AX,SP
   \   0AEE   D6             MOVW      HL,AX
   \   0AEF   A116           MOV       A,#22
   \   0AF1   9B....         BR        N:??LAPAfsTreatReadDataByLocalIdentifierService_1
   \                     ??LAPAfsTreatSecurityAccessService_115:
   \   0AF4   5DF0           AND       A,#240
   \   0AF6   4DF0           CMP       A,#240
   \   0AF8   891C           MOVW      AX,SP
   \   0AFA   BD1D           BNZ       ??LAPAfsTreatSecurityAccessService_238
   \   0AFC   16....         MOVW      HL,#LWRD(ReadECU_LOG)
   \   0AFF   A4..           MOV       E,#BYTE3(ReadECU_LOG)
   \   0B01   ..             CALLT     [__T_?FAR_FAST_CALL_L07]
   \                     ??LAPAfsTreatReadDataByLocalIdentifierService_16:
   \   0B02   4D00           CMP       A,#0
   \   0B04   AD03           BZ        $+5
   \   0B06   9B....         BR        N:??LAPAfsTreatReadDataByLocalIdentifierService_10
   \                     ??LAPAfsTreatSecurityAccessService_139:
   \   0B09   8E....         MOV       A,DATKwpRxBuffer+4
   \   0B0C   9E....         MOV       DATKwpTxBuffer+4,A
   \   0B0F   891C           MOVW      AX,SP
   \   0B11   D6             MOVW      HL,AX
   \   0B12   87             MOV       A,[HL]
   \   0B13   9A....         CALL      LAPKwpPreparePositiveResponse
   \   0B16   9B....         BR        N:??LAPAfsTreatReadDataByLocalIdentifierService_11
   \                     ??LAPAfsTreatSecurityAccessService_238:
   \   0B19   B1             PUSH      AX
   \   0B1A   8E....         MOV       A,DATKwpRxBuffer+4
   \   0B1D   73             MOV       B,A
   \   0B1E   8E....         MOV       A,DATKwpRxBuffer+3
   \   0B21   16....         MOVW      HL,#LWRD(LIBCfdExecuteConfDiagRequest)
   \   0B24   A4..           MOV       E,#BYTE3(LIBCfdExecuteConfDiagRequest)
   \   0B26   ..             CALLT     [__T_?FAR_CALL_L07]
   \   0B27   FAD9           BR        ??LAPAfsTreatReadDataByLocalIdentifierService_16
   \                     ??LAPAfsTreatSecurityAccessService_104:
   \   0B29   A112           MOV       A,#18
   \   0B2B   9B....         BR        N:??LAPAfsTreatReadDataByLocalIdentifierService_10
   \   0B2E                  REQUIRE ?CL78K_V4_6_L00
   2157          
   2158          //==============================================================================
   2159          // DESCRIPTION:         LAPAfsTreatInputOutputControlByLocalIdentifierService
   2160          //
   2161          // PARAMETERS:          none
   2162          //
   2163          // RETURN VALUE:        none
   2164          //
   2165          // DESIGN INFORMATION:  refer to Detailed Design Document
   2166          //==============================================================================

   \                                 In  segment BCODE, align 1, keep-with-next
   2167          MEM_TYPE void LAPAfsTreatInputOutputControlByLocalIdentifierService(void)
   \                     LAPAfsTreatInputOutputControlByLocalIdentifierService:
   2168          {
   \   0000                  ; * Stack frame (at entry) *
   \   0000                  ; Param size: 0
   \   0000   B3             PUSH      BC
   \   0001                  ; Total Auto size: 2
   \   0001   B7             PUSH      HL
   2169              U8  u8RequestStatusL;
   2170              U8  u8OutputRequestL;
   2171              U8  u8IndexL;
   2172          
   2173              u8RequestStatusL = cLAPKwpInvalidFormat;
   \   0002   A212           MOV       C,#18
   2174              u8OutputRequestL = cNoOutputControl;
   \   0004   891C           MOVW      AX,SP
   \   0006   D6             MOVW      HL,AX
   \   0007   A1FF           MOV       A,#255
   \   0009   97             MOV       [HL],A
   2175          
   2176              mLIBassert(cNbOutputToControl <= cNoOutputControl);
   2177              // Search output controled
   2178              for (u8IndexL=0; u8IndexL<cNbOutputToControl; u8IndexL++)
   \   000A   A000           MOV       X,#0
   \   000C   14....         MOVW      DE,#TableIOCBLIDIdentifier
   2179              {
   2180                  if (LAPKwpReadDiagnosticRequest(1) == TableIOCBLIDIdentifier[u8IndexL])
   \                     ??LAPAfsTreatInputOutputControlByLocalIdentifie_0:
   \   000F   B5             PUSH      DE
   \   0010   B6             POP       HL
   \   0011   87             MOV       A,[HL]
   \   0012   48....         CMP       A,DATKwpRxBuffer+4
   \   0015   BD06           BNZ       ??LAPAfsTreatSecurityAccessService_239
   2181                  {
   2182                      u8OutputRequestL = u8IndexL;
   \   0017   D6             MOVW      HL,AX
   \   0018   891C           MOVW      AX,SP
   \   001A   E6             XCHW      AX,HL
   \   001B   60             MOV       A,X
   \   001C   97             MOV       [HL],A
   2183                  }
   2184              }
   \                     ??LAPAfsTreatSecurityAccessService_239:
   \   001D   40             INC       X
   \   001E   60             MOV       A,X
   \   001F   B5             PUSH      DE
   \   0020   B6             POP       HL
   \   0021   86             INCW      HL
   \   0022   B7             PUSH      HL
   \   0023   B4             POP       DE
   \   0024   4D11           CMP       A,#17
   \   0026   8DE7           BC        ??LAPAfsTreatInputOutputControlByLocalIdentifie_0
   2185          
   2186              if( (u8OutputRequestL != cNoOutputControl) &&
   2187                  (mDATRead(U8Bit,DATKwpRxFrameLgth,Default) == cIOCBLIDReq_Lgth ))
   \   0028   891C           MOVW      AX,SP
   \   002A   D6             MOVW      HL,AX
   \   002B   87             MOV       A,[HL]
   \   002C   41             INC       A
   \   002D   AD71           BZ        ??LAPAfsTreatSecurityAccessService_240
   \   002F   8E....         MOV       A,DATKwpRxFrameLgth
   \   0032   4D04           CMP       A,#4
   \   0034   BD6A           BNZ       ??LAPAfsTreatSecurityAccessService_240
   2188              {
   2189                  if((LAPKwpReadDiagnosticRequest(cByte2) == cIOCBLID_StartRoutineID                ) &&
   2190                     ((LAPKwpReadDiagnosticRequest(cByte3) == cIOCBLID_DeactivationParam       ) ||
   2191                      (LAPKwpReadDiagnosticRequest(cByte3) == cIOCBLID_PermanentActivationParam) ||
   2192                      (LAPKwpReadDiagnosticRequest(cByte3) == cIOCBLID_TemporaryActivationParam)    ))
   \   0036   8E....         MOV       A,DATKwpRxBuffer+5
   \   0039   4D00           CMP       A,#0
   \   003B   AD03           BZ        $+5
   \   003D   9B....         BR        N:??LAPAfsTreatSecurityAccessService_241
   \   0040   8E....         MOV       A,DATKwpRxBuffer+6
   \   0043   4D00           CMP       A,#0
   \   0045   AD4B           BZ        ??LAPAfsTreatSecurityAccessService_242
   \   0047   4DFF           CMP       A,#255
   \   0049   AD03           BZ        ??LAPAfsTreatSecurityAccessService_243
   \   004B   51             DEC       A
   \   004C   BD52           BNZ       ??LAPAfsTreatSecurityAccessService_240
   2193                  {
   2194                      // Start Routine Request
   2195                      if(LAPKwpReadDiagnosticRequest(cByte3) == cIOCBLID_DeactivationParam)
   2196                      {
   2197                          // deactivation Reaquest
   2198          
   2199                          // Special outputs
   2200                          if(   (u8OutputRequestL == cHornRlIndex)
   2201                              &&(mDATRead(U8Bit,EEP_PerimeterAlarmState, Default ) == cPAlaStateActivated) )
   2202                          {
   2203                              // prsFS_ASA-452 IO control of horn is inhibited 
   2204                              u8RequestStatusL = cLAPKwpConditionNotCorrect;
   2205                          }
   2206                          else // Normal outputs
   2207                          {
   2208                              u8RequestStatusL = DeactiveOutputControl(u8OutputRequestL);
   2209                              if((u8RequestStatusL == cLAPKwpServiceIsCorrect) && (LAPKwpIsServiceFinished() !=cFalse))
   2210                              {
   2211                                  // The active output is deactivate
   2212                                  LAPKwpWriteDiagnosticResponse(cByte2,cIOCBLID_RoutineIsFinishedID);
   2213                                  u8OutputRequestInProgress = cNoOutputControl;
   2214                              }
   2215                              //CCOV: akodzhh: can't be covered, now supported outputs are always deactivated at this step.
   2216                              //CCOV: akodzhh: can't be covered, now supported outputs are always deactivated at this step.
   2217                              else
   2218                              {
   2219                                  // Wait the next graph cycle
   2220                              }
   2221                          }
   2222                      }
   2223                      else 
   2224                      {
   2225                          // Activation request
   2226                          if(  u8OutputRequestInProgress != cNoOutputControl)
   \                     ??LAPAfsTreatSecurityAccessService_243:
   \   004E   8E....         MOV       A,u8OutputRequestInProgress
   \   0051   4DFF           CMP       A,#255
   \   0053   AD0D           BZ        ??LAPAfsTreatSecurityAccessService_244
   2227                          {
   2228                              // desactivate the currently active output
   2229                              //QACJ 3200: akodzhh: Return value is intentionally ignored here
   2230                              DeactiveOutputControl(u8OutputRequestInProgress); // Ignore Status
   \   0055   16....         MOVW      HL,#LWRD(DeactiveOutputControl)
   \   0058   A4..           MOV       E,#BYTE3(DeactiveOutputControl)
   \   005A   ..             CALLT     [__T_?FAR_FAST_CALL_L07]
   2231                          }
   2232          
   2233                          if(u8OutputRequestInProgress == cNoOutputControl) 
   \   005B   8E....         MOV       A,u8OutputRequestInProgress
   \   005E   4DFF           CMP       A,#255
   \   0060   BD3E           BNZ       ??LAPAfsTreatSecurityAccessService_240
   2234                          { 
   2235                              u8RequestStatusL = WriteOuputByDiag (u8OutputRequestL, LAPKwpReadDiagnosticRequest(cByte3));
   \                     ??LAPAfsTreatSecurityAccessService_244:
   \   0062   8E....         MOV       A,DATKwpRxBuffer+6
   \   0065   73             MOV       B,A
   \   0066   891C           MOVW      AX,SP
   \   0068   D6             MOVW      HL,AX
   \   0069   87             MOV       A,[HL]
   \   006A   16....         MOVW      HL,#LWRD(WriteOuputByDiag)
   \   006D   A4..           MOV       E,#BYTE3(WriteOuputByDiag)
   \   006F   ..             CALLT     [__T_?FAR_FAST_CALL_L07]
   \   0070   72             MOV       C,A
   2236          
   2237                              if(u8RequestStatusL == cLAPKwpServiceIsCorrect)
   \   0071   4D00           CMP       A,#0
   \   0073   BD16           BNZ       ??LAPAfsTreatSecurityAccessService_245
   2238                              {
   2239                                  u8OutputRequestInProgress = u8OutputRequestL;
   \   0075   891C           MOVW      AX,SP
   \   0077   D6             MOVW      HL,AX
   \   0078   87             MOV       A,[HL]
   \   0079   9E....         MOV       u8OutputRequestInProgress,A
   2240                                  if(LAPKwpReadDiagnosticRequest(cByte3) == cIOCBLID_TemporaryActivationParam)
   \   007C   8E....         MOV       A,DATKwpRxBuffer+6
   \   007F   51             DEC       A
   \   0080   BD03           BNZ       ??LAPAfsTreatSecurityAccessService_246
   2241                                  {
   2242                                      TOSSeqActiverGraphe(cTOSSeqLAPAfsIOControlByLocalID);
   \   0082   A105           MOV       A,#5
   \   0084   ..             CALLT     [__T_TOSSeqActivateGraph]
   2243                                  }
   2244                                  LAPKwpWriteDiagnosticResponse(cByte2,cIOCBLID_RoutineInProgressID);
   \                     ??LAPAfsTreatSecurityAccessService_246:
   \   0085   A101           MOV       A,#1
   \   0087   16....         MOVW      HL,#DATKwpTxBuffer+5
   \   008A   97             MOV       [HL],A
   2245                              }
   2246                              LAPKwpSetServiceIsFinished();
   \                     ??LAPAfsTreatSecurityAccessService_245:
   \   008B   A103           MOV       A,#3
   \   008D   9E....         MOV       u8LAPKwpRequestStatus,A
   \   0090   FA15           BR        ??LAPAfsTreatSecurityAccessService_247
   2247                          }
   2248                          //CCOV: akodzhh: can't be covered, now supported outputs are always deactivated in one step.
   2249                          else
   2250                          {
   2251                          // Wait the next graph cycle
   2252                          }
   2253                      }
   \                     ??LAPAfsTreatSecurityAccessService_242:
   \   0092   87             MOV       A,[HL]
   \   0093   4D0B           CMP       A,#11
   \   0095   BD1A           BNZ       ??LAPAfsTreatSecurityAccessService_248
   \   0097   8E....         MOV       A,DATDbkMirrors+66
   \   009A   4D02           CMP       A,#2
   \   009C   BD13           BNZ       ??LAPAfsTreatSecurityAccessService_248
   \   009E   A222           MOV       C,#34
   2254                  }
   2255                  else 
   2256                  {
   2257                      if(LAPKwpReadDiagnosticRequest(cByte2) == cIOCBLID_ReadStatusID)
   2258                      { // Read Status Request
   2259                          LAPKwpWriteDiagnosticResponse(cByte2,ReadIOCBILStatus(u8OutputRequestL));
   2260                          u8RequestStatusL = cLAPKwpServiceIsCorrect;
   2261                          LAPKwpSetServiceIsFinished();
   2262                      }
   2263                  }
   2264              }
   2265              //CCOV: akodzhh: can't be covered, now supported outputs are always deactivated in one step.
   2266              if(LAPKwpIsServiceTreated() == cFalse)
   \                     ??LAPAfsTreatSecurityAccessService_240:
   \   00A0   8E....         MOV       A,u8LAPKwpRequestStatus
   \   00A3   4D02           CMP       A,#2
   \   00A5   AD4C           BZ        ??LAPAfsTreatSecurityAccessService_249
   2267              {
   2268                  // Request treatment is finished or status is not correct
   2269                  if(u8RequestStatusL != cLAPKwpServiceIsCorrect)
   \                     ??LAPAfsTreatSecurityAccessService_247:
   \   00A7   62             MOV       A,C
   \   00A8   4D00           CMP       A,#0
   \   00AA   AD37           BZ        ??LAPAfsTreatSecurityAccessService_250
   2270                  {
   2271                      LAPKwpPrepareNegativeResponse(u8RequestStatusL);
   \   00AC   9A....         CALL      LAPKwpPrepareNegativeResponse
   \   00AF   FA3D           BR        ??LAPAfsTreatSecurityAccessService_251
   2272                  }
   \                     ??LAPAfsTreatSecurityAccessService_248:
   \   00B1   87             MOV       A,[HL]
   \   00B2   16....         MOVW      HL,#LWRD(DeactiveOutputControl)
   \   00B5   A4..           MOV       E,#BYTE3(DeactiveOutputControl)
   \   00B7   ..             CALLT     [__T_?FAR_FAST_CALL_L07]
   \   00B8   72             MOV       C,A
   \   00B9   4D00           CMP       A,#0
   \   00BB   BDE3           BNZ       ??LAPAfsTreatSecurityAccessService_240
   \   00BD   8E....         MOV       A,u8LAPKwpRequestStatus
   \   00C0   4D03           CMP       A,#3
   \   00C2   BDDC           BNZ       ??LAPAfsTreatSecurityAccessService_240
   \   00C4   A102           MOV       A,#2
   \   00C6   16....         MOVW      HL,#DATKwpTxBuffer+5
   \   00C9   97             MOV       [HL],A
   \   00CA   A1FF           MOV       A,#255
   \   00CC   9E....         MOV       u8OutputRequestInProgress,A
   \   00CF   FA12           BR        ??LAPAfsTreatSecurityAccessService_250
   \                     ??LAPAfsTreatSecurityAccessService_241:
   \   00D1   51             DEC       A
   \   00D2   BDCC           BNZ       ??LAPAfsTreatSecurityAccessService_240
   \   00D4   87             MOV       A,[HL]
   \   00D5   16....         MOVW      HL,#LWRD(ReadIOCBILStatus)
   \   00D8   A4..           MOV       E,#BYTE3(ReadIOCBILStatus)
   \   00DA   ..             CALLT     [__T_?FAR_FAST_CALL_L07]
   \   00DB   9E....         MOV       DATKwpTxBuffer+5,A
   \   00DE   A103           MOV       A,#3
   \   00E0   9E....         MOV       u8LAPKwpRequestStatus,A
   2273                  else
   2274                  {
   2275                      LAPKwpWriteDiagnosticResponse(1,LAPKwpReadDiagnosticRequest(1));
   \                     ??LAPAfsTreatSecurityAccessService_250:
   \   00E3   8E....         MOV       A,DATKwpRxBuffer+4
   \   00E6   9E....         MOV       DATKwpTxBuffer+4,A
   2276                      LAPKwpPreparePositiveResponse(cIOCBLIDAns_Lgth);
   \   00E9   A103           MOV       A,#3
   \   00EB   9A....         CALL      LAPKwpPreparePositiveResponse
   2277                  }
   2278                  LAPKwpSetServiceIsFinished(); // Force the end of the treatment for enable the answer
   \                     ??LAPAfsTreatSecurityAccessService_251:
   \   00EE   A103           MOV       A,#3
   \   00F0   9E....         MOV       u8LAPKwpRequestStatus,A
   2279              }
   2280          }
   \                     ??LAPAfsTreatSecurityAccessService_249:
   \   00F3   B0             POP       AX
   \   00F4   B2             POP       BC
   \   00F5   AF             RET       
   \   00F6                  REQUIRE ?CL78K_V4_6_L00
   2281          
   2282          //==============================================================================
   2283          // DESCRIPTION:         LAPAfsTreatLearningModeControlService
   2284          //
   2285          // PARAMETERS:          none
   2286          //
   2287          // RETURN VALUE:        none
   2288          //
   2289          // DESIGN INFORMATION:  refer to Detailed Design Document
   2290          //==============================================================================

   \                                 In  segment BCODE, align 1, keep-with-next
   2291          MEM_TYPE void LAPAfsTreatLearningModeControlService(void)
   \                     LAPAfsTreatLearningModeControlService:
   2292          {
   \   0000                  ; * Stack frame (at entry) *
   \   0000                  ; Param size: 0
   \   0000   B3             PUSH      BC
   \   0001                  ; Total Auto size: 0
   2293              U8  u8RequestStatusL;
   2294              U8  u8IndexL;
   2295          
   2296              u8RequestStatusL = cLAPKwpServiceIsCorrect;
   2297          
   2298              switch (LAPKwpReadDiagnosticRequest(1))
   \   0001   8E....         MOV       A,DATKwpRxBuffer+4
   \   0004   4D01           CMP       A,#1
   \   0006   AD4D           BZ        ??LAPAfsTreatSecurityAccessService_252
   \   0008   4D02           CMP       A,#2
   \   000A   AD0D           BZ        ??LAPAfsTreatSecurityAccessService_253
   \   000C   4D81           CMP       A,#129
   \   000E   BD03           BNZ       $+5
   \   0010   9B....         BR        N:??LAPAfsTreatSecurityAccessService_254
   \   0013   4D82           CMP       A,#130
   \   0015   AD29           BZ        ??LAPAfsTreatSecurityAccessService_255
   \   0017   FA22           BR        ??LAPAfsTreatSecurityAccessService_256
   2299              {
   2300              case cLMC_EnterInFactoryLearningModeID:
   2301                  if(mDATRead(U8Bit,DATKwpRxFrameLgth,Default) == cLMCReq_Factory_Lgth)
   \                     ??LAPAfsTreatSecurityAccessService_253:
   \   0019   8E....         MOV       A,DATKwpRxFrameLgth
   \   001C   4D02           CMP       A,#2
   \   001E   BD1B           BNZ       ??LAPAfsTreatSecurityAccessService_256
   2302                  {
   2303                      if(mDATRead(U1Bit,FactoryModeAuthorized,Default) != cFalse)
   \   0020   8E....         MOV       A,DATCmnImmoData
   \   0023   4D00           CMP       A,#0
   \   0025   BD03           BNZ       $+5
   \   0027   9B....         BR        N:??LAPAfsTreatSecurityAccessService_257
   2304                      {
   2305                          TOSSendControl(cTOSControlStartLearningInFactoryMode);
   \   002A   A113           MOV       A,#19
   \   002C   ..             CALLT     [__T_TOSSendControl]
   2306                      }
   2307                      else
   2308                      {
   2309                          u8RequestStatusL = cLAPKwpConditionNotCorrect;
   2310                      }
   2311          
   2312                  }
   2313                  else
   2314                  {
   2315                      u8RequestStatusL = cLAPKwpInvalidFormat;
   2316                  }
   2317                  break;
   2318          
   2319              case cLMC_LeaveInFactoryLearningModeID:
   2320                  if(mDATRead(U8Bit,DATKwpRxFrameLgth,Default) == cLMCReq_Factory_Lgth)
   2321                  {
   2322                      if(     (cDATFactoryMode == mDATRead(U8Bit,LearningModeInProgress,Default))
   2323                          &&  (cFalse == mDATRead(U1Bit, PWR_IGN, Default))
   2324                        )
   2325                      {
   2326                          TOSSendControl(cTOSControlExitFromLearningInFactoryMode);
   2327                      }
   2328                      else
   2329                      {
   2330                          u8RequestStatusL = cLAPKwpConditionNotCorrect;
   2331                      }
   2332          
   2333                  }
   2334                  else
   2335                  {
   2336                      u8RequestStatusL = cLAPKwpInvalidFormat;
   2337                  }
   2338                  break;
   2339          
   2340              case cLMC_EnterInAFSLearningModeID:
   2341                  if(mDATRead(U8Bit,DATKwpRxFrameLgth,Default) == cLMCReq_EnterInAFSLearningMode_Lgth)
   2342                  {
   2343                      if(mDATRead(U1Bit,AfterSaleModeAuthorized,Default) == cTrue)
   2344                      {
   2345                          for(u8IndexL=0;u8IndexL<cDATTrpISKLengthInBytes;u8IndexL++)
   2346                          {
   2347                              mDATWriteTable(U8Bit,DATAprDiagAfterSaleCode,u8IndexL,LAPKwpReadDiagnosticRequest(cByte2+u8IndexL),Default);
   2348                          }
   2349          
   2350                          if(mDATRead(U1Bit, EEP_BCMBlank, Default) == cFalse)
   2351                          {
   2352                              //------------------------------------------
   2353                              // BCM is not blank => test After Sale code
   2354                              //------------------------------------------
   2355                              mDATControl(Apr,cDATAprTestDiagAfterSaleCode);
   2356                              mDATWrite(U1Bit,AFSCodeIsOk,mDATRead(U1Bit,DATAprAfterSaleCodeRecognized,Default),Default);
   2357                              if(mDATRead(U1Bit,AFSCodeIsOk,Default) == cFalse)
   2358                              {
   2359                                  u8RequestStatusL = cLAPKwpConditionNotCorrect;
   2360                              }
   2361                          }
   2362                          if(u8RequestStatusL == cLAPKwpServiceIsCorrect)
   2363                          {
   2364                              TOSSendControl(cTOSControlStartLearningInAfterSaleMode);
   2365                          }
   2366          
   2367                      }
   2368                      else
   2369                      {
   2370                          u8RequestStatusL = cLAPKwpConditionNotCorrect;
   2371                      }
   2372                  }
   2373                  else
   2374                  {
   2375                      u8RequestStatusL = cLAPKwpInvalidFormat;
   2376                  }
   2377                  break;
   2378          
   2379              case cLMC_LeaveInAFSLearningModeID:
   2380                  if(mDATRead(U8Bit,DATKwpRxFrameLgth,Default) == cLMCReq_LeaveInAFSLearningMode_Lgth)
   2381                  {
   2382                      if(LAPKwpReadDiagnosticRequest(cByte2) == cLMCL_AFSLearningValidation)
   2383                      {
   2384                          if(mDATRead(U1Bit,AfterSaleModeValidationAuthorized,Default) == cTrue)
   2385                          {
   2386                              TOSSendControl(cTOSControlValidateLearningInAfterSaleMode);
   2387                              if(     (mDATRead(U8Bit,LearningModeInProgress,Default) == cDATBcmReplacement)
   2388                                  ||  (   (mDATRead(U8Bit,LearningModeInProgress,Default) == cDATKeyReassignment)
   2389                                       && (0 == mDATRead(U8Bit, NumberOfKeysLearnt, Default))
   2390                                      )
   2391                                )
   2392                              {
   2393                                  u8RequestStatusL = cLAPKwpConditionNotCorrect;
   2394                              }
   2395                              else
   2396                              {
   2397          
   2398                              }
   2399                          }
   2400                          else
   2401                          {
   2402                              u8RequestStatusL = cLAPKwpConditionNotCorrect;
   2403                          }
   2404                      }
   2405                      else if(LAPKwpReadDiagnosticRequest(cByte2) == cLMCL_AFSLearningCancel)
   2406                      {
   2407                          if( (mDATRead(U8Bit,LearningModeInProgress,Default) == cDATBcmReplacement) 
   2408                            ||(mDATRead(U8Bit,LearningModeInProgress,Default) == cDATKeyReassignment))
   2409                          {
   2410                              TOSSendControl(cTOSControlGiveUpLearningInAfterSaleMode);
   2411                          }
   2412                          else
   2413                          {
   2414                              u8RequestStatusL = cLAPKwpConditionNotCorrect;
   2415                          }
   2416                      }
   2417                      else
   2418                      {
   2419                          u8RequestStatusL = cLAPKwpConditionNotCorrect;
   2420                      }
   2421          
   2422                  }
   2423                  else
   2424                  {
   2425                      u8RequestStatusL = cLAPKwpInvalidFormat;
   2426                  }
   2427                  break;
   2428          
   2429              default :
   2430                  u8RequestStatusL = cLAPKwpInvalidFormat;
   2431                  break;
   2432              }
   2433          
   2434              if(u8RequestStatusL != cLAPKwpServiceIsCorrect)
   2435              {
   2436                  LAPKwpPrepareNegativeResponse(u8RequestStatusL);
   2437              }
   2438              else
   2439              {
   2440                  LAPKwpWriteDiagnosticResponse(1,LAPKwpReadDiagnosticRequest(1));
   \                     ??LAPAfsTreatLearningModeControlService_0:
   \   002D   8E....         MOV       A,DATKwpRxBuffer+4
   \   0030   9E....         MOV       DATKwpTxBuffer+4,A
   2441                  LAPKwpPreparePositiveResponse(cLMCAns_Lgth);
   \   0033   A102           MOV       A,#2
   \   0035   9A....         CALL      LAPKwpPreparePositiveResponse
   2442              }
   2443              LAPKwpSetServiceIsFinished();
   \                     ??LAPAfsTreatLearningModeControlService_1:
   \   0038   9B....         BR        N:?Subroutine0
   \                     ??LAPAfsTreatSecurityAccessService_256:
   \   003B   A112           MOV       A,#18
   \   003D   9B....         BR        N:??LAPAfsTreatSecurityAccessService_258
   \                     ??LAPAfsTreatSecurityAccessService_255:
   \   0040   8E....         MOV       A,DATKwpRxFrameLgth
   \   0043   4D02           CMP       A,#2
   \   0045   BDF4           BNZ       ??LAPAfsTreatSecurityAccessService_256
   \   0047   8E....         MOV       A,DATCmnImmoData+17
   \   004A   51             DEC       A
   \   004B   BD7C           BNZ       ??LAPAfsTreatSecurityAccessService_257
   \   004D   8C..79         BT        S:DATDinInputBuffers+6.0, ??LAPAfsTreatSecurityAccessService_257
   \   0050   A114           MOV       A,#20
   \   0052   ..             CALLT     [__T_TOSSendControl]
   \   0053   FAD8           BR        ??LAPAfsTreatLearningModeControlService_0
   \                     ??LAPAfsTreatSecurityAccessService_252:
   \   0055   8E....         MOV       A,DATKwpRxFrameLgth
   \   0058   4D08           CMP       A,#8
   \   005A   BDDF           BNZ       ??LAPAfsTreatSecurityAccessService_256
   \   005C   8E....         MOV       A,DATCmnImmoData+1
   \   005F   51             DEC       A
   \   0060   BD67           BNZ       ??LAPAfsTreatSecurityAccessService_257
   \   0062   14....         MOVW      DE,#DatAprExportData
   \   0065   12....         MOVW      BC,#DATKwpRxBuffer+5
   \   0068   A006           MOV       X,#6
   \                     ??LAPAfsTreatLearningModeControlService_2:
   \   006A   B3             PUSH      BC
   \   006B   B6             POP       HL
   \   006C   87             MOV       A,[HL]
   \   006D   B5             PUSH      DE
   \   006E   B6             POP       HL
   \   006F   E6             XCHW      AX,HL
   \   0070   CA1A00         ADDW      AX,#26
   \   0073   E6             XCHW      AX,HL
   \   0074   97             MOV       [HL],A
   \   0075   B3             PUSH      BC
   \   0076   B6             POP       HL
   \   0077   86             INCW      HL
   \   0078   B7             PUSH      HL
   \   0079   B2             POP       BC
   \   007A   84             INCW      DE
   \   007B   50             DEC       X
   \   007C   BDEC           BNZ       ??LAPAfsTreatLearningModeControlService_2
   \   007E   16....         MOVW      HL,#DATDbkMirrors+143
   \   0081   318612         BT        [HL].0, ??LAPAfsTreatSecurityAccessService_259
   \   0084   A105           MOV       A,#5
   \   0086   16....         MOVW      HL,#LWRD(DATAprControl)
   \   0089   A4..           MOV       E,#BYTE3(DATAprControl)
   \   008B   ..             CALLT     [__T_?FAR_CALL_L07]
   \   008C   8E....         MOV       A,DatAprExportData+34
   \   008F   9E....         MOV       DATCmnImmoData+5,A
   \   0092   4D00           CMP       A,#0
   \   0094   AD33           BZ        ??LAPAfsTreatSecurityAccessService_257
   \                     ??LAPAfsTreatSecurityAccessService_259:
   \   0096   A115           MOV       A,#21
   \   0098   ..             CALLT     [__T_TOSSendControl]
   \   0099   FA92           BR        ??LAPAfsTreatLearningModeControlService_0
   \                     ??LAPAfsTreatSecurityAccessService_254:
   \   009B   8E....         MOV       A,DATKwpRxFrameLgth
   \   009E   4D03           CMP       A,#3
   \   00A0   BD99           BNZ       ??LAPAfsTreatSecurityAccessService_256
   \   00A2   8E....         MOV       A,DATKwpRxBuffer+5
   \   00A5   51             DEC       A
   \   00A6   BD29           BNZ       ??LAPAfsTreatSecurityAccessService_260
   \   00A8   8E....         MOV       A,DATCmnImmoData+9
   \   00AB   51             DEC       A
   \   00AC   BD1B           BNZ       ??LAPAfsTreatSecurityAccessService_257
   \   00AE   A116           MOV       A,#22
   \   00B0   ..             CALLT     [__T_TOSSendControl]
   \   00B1   8E....         MOV       A,DATCmnImmoData+17
   \   00B4   4D02           CMP       A,#2
   \   00B6   AD11           BZ        ??LAPAfsTreatSecurityAccessService_257
   \   00B8   4D04           CMP       A,#4
   \   00BA   AD03           BZ        $+5
   \   00BC   9B....         BR        N:??LAPAfsTreatLearningModeControlService_0
   \   00BF   8E....         MOV       A,DATCmnImmoData+13
   \   00C2   4D00           CMP       A,#0
   \   00C4   AD03           BZ        $+5
   \   00C6   9B....         BR        N:??LAPAfsTreatLearningModeControlService_0
   \                     ??LAPAfsTreatSecurityAccessService_257:
   \   00C9   A122           MOV       A,#34
   \                     ??LAPAfsTreatSecurityAccessService_258:
   \   00CB   9A....         CALL      LAPKwpPrepareNegativeResponse
   \   00CE   9B....         BR        N:??LAPAfsTreatLearningModeControlService_1
   \                     ??LAPAfsTreatSecurityAccessService_260:
   \   00D1   8E....         MOV       A,DATKwpRxBuffer+5
   \   00D4   4D00           CMP       A,#0
   \   00D6   BDF1           BNZ       ??LAPAfsTreatSecurityAccessService_257
   \   00D8   8E....         MOV       A,DATCmnImmoData+17
   \   00DB   4D02           CMP       A,#2
   \   00DD   AD04           BZ        ??LAPAfsTreatSecurityAccessService_261
   \   00DF   4D04           CMP       A,#4
   \   00E1   BDE6           BNZ       ??LAPAfsTreatSecurityAccessService_257
   \                     ??LAPAfsTreatSecurityAccessService_261:
   \   00E3   A117           MOV       A,#23
   \   00E5   ..             CALLT     [__T_TOSSendControl]
   \   00E6   9B....         BR        N:??LAPAfsTreatLearningModeControlService_0
   \   00E9                  REQUIRE ?CL78K_V4_6_L00
   2444          
   2445          }

   \                                 In  segment BCODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   0000   A103           MOV       A,#3
   \   0002   9E....         MOV       u8LAPKwpRequestStatus,A
   \   0005   B2             POP       BC
   \   0006   AF             RET       
   \   0007                  REQUIRE ?CL78K_V4_6_L00
   2446          
   2447          //==============================================================================
   2448          // DESCRIPTION:         LAPAfsInitSession
   2449          //
   2450          // PARAMETERS:          none
   2451          //
   2452          // RETURN VALUE:        none
   2453          //
   2454          // DESIGN INFORMATION:  refer to Detailed Design Document
   2455          //==============================================================================

   \                                 In  segment BCODE, align 1, keep-with-next
   2456          MEM_TYPE void LAPAfsInitSession(void)
   \                     LAPAfsInitSession:
   2457          {
   \   0000                  ; * Stack frame (at entry) *
   \   0000                  ; Param size: 0
   \   0000                  ; Total Auto size: 0
   2458              u8OutputRequestInProgress = cNoOutputControl;    
   \   0000   A1FF           MOV       A,#255
   \   0002   9E....         MOV       u8OutputRequestInProgress,A
   2459              u8RoutineRequestInProgress = cNoRoutineControl;
   \   0005   A100           MOV       A,#0
   \   0007   9E....         MOV       u8RoutineRequestInProgress,A
   2460          }
   \   000A   AF             RET       
   \   000B                  REQUIRE ?CL78K_V4_6_L00
   2461          
   2462          //==============================================================================
   2463          // DESCRIPTION:         LAPAfsCloseSession
   2464          //
   2465          // PARAMETERS:          none
   2466          //
   2467          // RETURN VALUE:        none
   2468          //
   2469          // DESIGN INFORMATION:  refer to Detailed Design Document
   2470          //==============================================================================

   \                                 In  segment BCODE, align 1, keep-with-next
   2471          MEM_TYPE void LAPAfsCloseSession(void)
   \                     LAPAfsCloseSession:
   2472          {
   \   0000                  ; * Stack frame (at entry) *
   \   0000                  ; Param size: 0
   \   0000                  ; Total Auto size: 0
   2473              if(  u8OutputRequestInProgress != cNoOutputControl)
   \   0000   8E....         MOV       A,u8OutputRequestInProgress
   \   0003   4DFF           CMP       A,#255
   \   0005   AD06           BZ        ??LAPAfsTreatSecurityAccessService_262
   2474              {
   2475                  // desactivate the currently active output
   2476                  // Ignore Status
   2477                  //QACJ 3200: akodzhh: Return value is intentionally ignored here
   2478                  DeactiveOutputControl(u8OutputRequestInProgress);
   \   0007   16....         MOVW      HL,#LWRD(DeactiveOutputControl)
   \   000A   A4..           MOV       E,#BYTE3(DeactiveOutputControl)
   \   000C   ..             CALLT     [__T_?FAR_FAST_CALL_L07]
   2479              }
   2480          
   2481              if( (mDATRead(U8Bit, LearningModeInProgress,Default) == cDATKeyReassignment) ||
   2482                  (mDATRead(U8Bit, LearningModeInProgress,Default) == cDATBcmReplacement))
   \                     ??LAPAfsTreatSecurityAccessService_262:
   \   000D   8E....         MOV       A,DATCmnImmoData+17
   \   0010   4D04           CMP       A,#4
   \   0012   AD04           BZ        ??LAPAfsTreatSecurityAccessService_263
   \   0014   4D02           CMP       A,#2
   \   0016   BD03           BNZ       ??LAPAfsTreatSecurityAccessService_264
   2483              {
   2484                  TOSSendControl(cTOSControlGiveUpLearningInAfterSaleMode);
   \                     ??LAPAfsTreatSecurityAccessService_263:
   \   0018   A117           MOV       A,#23
   \   001A   ..             CALLT     [__T_TOSSendControl]
   2485              }
   2486              if(mDATRead(U8Bit, LearningModeInProgress,Default) == cDATFactoryMode)
   \                     ??LAPAfsTreatSecurityAccessService_264:
   \   001B   8E....         MOV       A,DATCmnImmoData+17
   \   001E   51             DEC       A
   \   001F   BD03           BNZ       ??LAPAfsTreatSecurityAccessService_265
   2487              {
   2488                  TOSSendControl(cTOSControlExitFromLearningInFactoryMode);
   \   0021   A114           MOV       A,#20
   \   0023   ..             CALLT     [__T_TOSSendControl]
   2489              }
   2490          
   2491              // Stop the mode "Permanent authentication"
   2492              TOSSendControl(cTOSControlStopPermanentAuthentication);  
   \                     ??LAPAfsTreatSecurityAccessService_265:
   \   0024   A119           MOV       A,#25
   \   0026   ..             CALLT     [__T_TOSSendControl]
   2493          
   2494          
   2495          }
   \   0027   AF             RET       
   \   0028                  REQUIRE ?CL78K_V4_6_L00
   2496          
   2497          //==============================================================================
   2498          // DESCRIPTION:         FreeActuator
   2499          //
   2500          // PARAMETERS:          none
   2501          //
   2502          // RETURN VALUE:        none
   2503          //
   2504          // DESIGN INFORMATION:  refer to Detailed Design Document
   2505          //==============================================================================

   \                                 In  segment CODE, align 1, keep-with-next
   2506          void FreeActuator(void)
   \                     FreeActuator:
   2507          {
   \   0000                  ; * Stack frame (at entry) *
   \   0000                  ; Param size: 0
   \   0000   B5             PUSH      DE
   \   0001                  ; Total Auto size: 0
   2508          #ifdef X90_PROJECT
   2509              FreeActuator_Static();
   \   0001   16....         MOVW      HL,#LWRD(FreeActuator_Static)
   \   0004   A4..           MOV       E,#BYTE3(FreeActuator_Static)
   \   0006   ..             CALLT     [__T_?FAR_CALL_L07]
   2510          }
   \   0007   B4             POP       DE
   \   0008   AF             RET       
   \   0009                  REQUIRE ?CL78K_V4_6_L00
   2511          #pragma optimize=no_inline

   \                                 In  segment BCODE, align 1, keep-with-next
   2512          static MEM_TYPE void FreeActuator_Static(void)
   \                     FreeActuator_Static:
   2513          {
   \   0000                  ; * Stack frame (at entry) *
   \   0000                  ; Param size: 0
   \   0000   B3             PUSH      BC
   \   0001                  ; Total Auto size: 2
   \   0001   B7             PUSH      HL
   2514          #endif
   2515              if ( u8OutputRequestInProgress < cNbTorToControl)
   \   0002   8E....         MOV       A,u8OutputRequestInProgress
   \   0005   4D0D           CMP       A,#13
   \   0007   9D70           BNC       ??LAPAfsTreatSecurityAccessService_266
   2516              {
   2517                  mDATWriteTable(U1Bit,DATPouDiagBuffer,TableTorIndex[u8OutputRequestInProgress],0,Default);
   \   0009   A002           MOV       X,#2
   \   000B   3188           MULU      X
   \   000D   CA....         ADDW      AX,#TableTorIndex
   \   0010   D6             MOVW      HL,AX
   \   0011   87             MOV       A,[HL]
   \   0012   70             MOV       X,A
   \   0013   AE01           MOV       A,[HL+0x01]
   \   0015   75             MOV       D,A
   \   0016   60             MOV       A,X
   \   0017   35             XCH       A,D
   \   0018   72             MOV       C,A
   \   0019   65             MOV       A,D
   \   001A   74             MOV       E,A
   \   001B   100000         MOVW      AX,#0
   \   001E   75             MOV       D,A
   \   001F   ..             CALLT     [__T_?I_LSH_L02]
   \   0020   60             MOV       A,X
   \   0021   73             MOV       B,A
   \   0022   100100         MOVW      AX,#1
   \   0025   ..             CALLT     [__T_?I_LSH_L02]
   \   0026   60             MOV       A,X
   \   0027   7DFF           XOR       A,#255
   \   0029   72             MOV       C,A
   \   002A   C4             MOVW      AX,DE
   \   002B   CA....         ADDW      AX,#S:DATPouDiagBuffer
   \   002E   D6             MOVW      HL,AX
   \   002F   87             MOV       A,[HL]
   \   0030   615A           AND       A,C
   \   0032   616B           OR        A,B
   \   0034   97             MOV       [HL],A
   2518                  mDATWriteTable(U1Bit,DATPouDiagMaskBuffer,TableTorIndex[u8OutputRequestInProgress],0,Default);
   \   0035   8E....         MOV       A,u8OutputRequestInProgress
   \   0038   A002           MOV       X,#2
   \   003A   3188           MULU      X
   \   003C   CA....         ADDW      AX,#TableTorIndex
   \   003F   D6             MOVW      HL,AX
   \   0040   87             MOV       A,[HL]
   \   0041   70             MOV       X,A
   \   0042   AE01           MOV       A,[HL+0x01]
   \   0044   D6             MOVW      HL,AX
   \   0045   891C           MOVW      AX,SP
   \   0047   E6             XCHW      AX,HL
   \   0048   72             MOV       C,A
   \   0049   60             MOV       A,X
   \   004A   97             MOV       [HL],A
   \   004B   100000         MOVW      AX,#0
   \   004E   ..             CALLT     [__T_?I_LSH_L02]
   \   004F   60             MOV       A,X
   \   0050   73             MOV       B,A
   \   0051   100100         MOVW      AX,#1
   \   0054   ..             CALLT     [__T_?I_LSH_L02]
   \   0055   60             MOV       A,X
   \   0056   7DFF           XOR       A,#255
   \   0058   72             MOV       C,A
   \   0059   C4             MOVW      AX,DE
   \   005A   CA....         ADDW      AX,#S:DATPouDiagMaskBuffer
   \   005D   D6             MOVW      HL,AX
   \   005E   87             MOV       A,[HL]
   \   005F   615A           AND       A,C
   \   0061   616B           OR        A,B
   \   0063   97             MOV       [HL],A
   2519                  if(u8OutputRequestInProgress == cDoorlockLedIndex)
   \   0064   8E....         MOV       A,u8OutputRequestInProgress
   \   0067   4D08           CMP       A,#8
   \   0069   BD79           BNZ       ??LAPAfsTreatSecurityAccessService_267
   2520                  {            
   2521                      mLIBassert(mDATRead(U1Bit,IsAlaDiagEnabled, Default ) == cTrue);
   \   006B   8E....         MOV       A,bIsAlaDiagEnabled
   \   006E   51             DEC       A
   \   006F   AD03           BZ        ??LAPAfsTreatSecurityAccessService_268
   \   0071   9A....         CALL      LIBAssertionFailed
   2522                      TOSSendControl(cTOSControlAlaDiagDisable);
   \                     ??LAPAfsTreatSecurityAccessService_268:
   \   0074   A11C           MOV       A,#28
   \   0076   ..             CALLT     [__T_TOSSendControl]
   \   0077   FA6B           BR        ??LAPAfsTreatSecurityAccessService_267
   2523                  }
   2524              }
   2525              else if (u8OutputRequestInProgress < (cNbTorToControl+cNbSerialLineToControl))
   \                     ??LAPAfsTreatSecurityAccessService_266:
   \   0079   4D0F           CMP       A,#15
   \   007B   9D3E           BNC       ??LAPAfsTreatSecurityAccessService_269
   2526              {
   2527          
   2528                  if( u8OutputRequestInProgress == cNbTorToControl)
   \   007D   4D0D           CMP       A,#13
   \   007F   BD1C           BNZ       ??LAPAfsTreatSecurityAccessService_270
   2529                  {
   2530                      mDATWrite(U1Bit,DO_DATA_IMMOBILIZERDiag, 0,Default);
   \   0081   8E....         MOV       A,bDO_DATA_IMMOBILIZERDiagEnabled
   \   0084   4D00           CMP       A,#0
   \   0086   BD03           BNZ       ??LAPAfsTreatSecurityAccessService_271
   \   0088   9A....         CALL      LIBAssertionFailed
   \                     ??LAPAfsTreatSecurityAccessService_271:
   \   008B   A104           MOV       A,#4
   \   008D   16....         MOVW      HL,#LWRD(LDBDouControl)
   \   0090   A4..           MOV       E,#BYTE3(LDBDouControl)
   \   0092   ..             CALLT     [__T_?FAR_CALL_L07]
   2531                      mDATWrite(U1Bit,DO_DATA_IMMOBILIZERDiagEnabled, cFalse, Default);
   \   0093   A100           MOV       A,#0
   \   0095   9E....         MOV       bDO_DATA_IMMOBILIZERDiagEnabled,A
   \   0098   A10D           MOV       A,#13
   \   009A   ..             CALLT     [__T_DATTrpControl]
   \   009B   FA47           BR        ??LAPAfsTreatSecurityAccessService_267
   2532                  }
   2533                  else
   2534                  {
   2535                      mDATWrite(U1Bit,DO_VERLOGDiag     , 0,Default);
   \                     ??LAPAfsTreatSecurityAccessService_270:
   \   009D   A100           MOV       A,#0
   \   009F   9E....         MOV       bDO_VERLOG,A
   \   00A2   8E....         MOV       A,bDO_VERLOGDiagEnabled
   \   00A5   4D00           CMP       A,#0
   \   00A7   BD03           BNZ       ??LAPAfsTreatSecurityAccessService_272
   \   00A9   9A....         CALL      LIBAssertionFailed
   \                     ??LAPAfsTreatSecurityAccessService_272:
   \   00AC   A106           MOV       A,#6
   \   00AE   16....         MOVW      HL,#LWRD(LDBDouControl)
   \   00B1   A4..           MOV       E,#BYTE3(LDBDouControl)
   \   00B3   ..             CALLT     [__T_?FAR_CALL_L07]
   2536                      mDATWrite(U1Bit,DO_VERLOGDiagEnabled, cFalse, Default);
   \   00B4   A100           MOV       A,#0
   \   00B6   9E....         MOV       bDO_VERLOGDiagEnabled,A
   \   00B9   FA29           BR        ??LAPAfsTreatSecurityAccessService_267
   2537                  }
   2538              }
   2539              else if(u8OutputRequestInProgress < cNbOutputToControl)
   \                     ??LAPAfsTreatSecurityAccessService_269:
   \   00BB   4D11           CMP       A,#17
   \   00BD   9D22           BNC       ??LAPAfsTreatSecurityAccessService_273
   2540              { 
   2541                  if( u8OutputRequestInProgress == (cNbTorToControl+cNbSerialLineToControl))
   \   00BF   4D0F           CMP       A,#15
   \   00C1   BD19           BNZ       ??LAPAfsTreatSecurityAccessService_274
   2542                  {//PWM output
   2543                      mDATWrite(U1Bit,PWM_ROOMLAMPDiagMask,  0, Default); 
   \   00C3   16....         MOVW      HL,#u8DATPwmDiagMask
   \   00C6   7183           CLR1      [HL].0
   \   00C8   8E....         MOV       A,DATPwmSoftBuffer+2
   \   00CB   74             MOV       E,A
   \   00CC   02....         MOVW      AX,DATPwmSoftBuffer
   \   00CF   D2             MOVW      BC,AX
   \   00D0   64             MOV       A,E
   \   00D1   70             MOV       X,A
   \   00D2   A100           MOV       A,#0
   \   00D4   16....         MOVW      HL,#LWRD(DATPwmWriteOutput)
   \   00D7   A4..           MOV       E,#BYTE3(DATPwmWriteOutput)
   \   00D9   ..             CALLT     [__T_?FAR_CALL_L07]
   \   00DA   FA08           BR        ??LAPAfsTreatSecurityAccessService_267
   2544                  }
   2545                  else // Buzzer
   2546                  {
   2547                      mDATControl(DATBuzDiagBuzz, Stop);
   \                     ??LAPAfsTreatSecurityAccessService_274:
   \   00DC   9A....         CALL      DATBuzDiagBuzzStop
   \   00DF   FA03           BR        ??LAPAfsTreatSecurityAccessService_267
   2548                  }
   2549          
   2550              }
   2551              //CCOV: akodzhh: can't be covered, no other outputs
   2552              else
   2553              {
   2554                  mLIBassert(cFalse);
   \                     ??LAPAfsTreatSecurityAccessService_273:
   \   00E1   9A....         CALL      LIBAssertionFailed
   2555              }
   2556              u8OutputRequestInProgress = cNoOutputControl;
   \                     ??LAPAfsTreatSecurityAccessService_267:
   \   00E4   A1FF           MOV       A,#255
   \   00E6   9E....         MOV       u8OutputRequestInProgress,A
   2557          }
   \   00E9   B0             POP       AX
   \   00EA   B2             POP       BC
   \   00EB   AF             RET       
   \   00EC                  REQUIRE ?CL78K_V4_6_L00
   2558          
   2559          //==============================================================================
   2560          // DESCRIPTION:         StartActivationTimeOut
   2561          //
   2562          // PARAMETERS:          none
   2563          //
   2564          // RETURN VALUE:        none
   2565          //
   2566          // DESIGN INFORMATION:  refer to Detailed Design Document
   2567          //==============================================================================

   \                                 In  segment CODE, align 1, keep-with-next
   2568          void StartActivationTimeOut(void)
   \                     StartActivationTimeOut:
   2569          {
   \   0000                  ; * Stack frame (at entry) *
   \   0000                  ; Param size: 0
   \   0000   B3             PUSH      BC
   \   0001                  ; Total Auto size: 0
   2570              BOOL bIsCpeOutput;
   2571          
   2572              bIsCpeOutput = IsCpeOutput(u8OutputRequestInProgress);
   \   0001   8E....         MOV       A,u8OutputRequestInProgress
   \   0004   72             MOV       C,A
   \   0005   16....         MOVW      HL,#TableIOCBLIDIdentifier
   \   0008   AA             MOV       A,[HL+C]
   \   0009   4D80           CMP       A,#128
   \   000B   AD08           BZ        ??LAPAfsTreatSecurityAccessService_280
   \   000D   4D81           CMP       A,#129
   \   000F   AD04           BZ        ??LAPAfsTreatSecurityAccessService_280
   \   0011   4D82           CMP       A,#130
   \   0013   BD1B           BNZ       ??LAPAfsTreatSecurityAccessService_281
   2573              if(bIsCpeOutput == cTrue)
   2574              {
   2575                  OutputControlTimeOutValue = cIOCBLIDCpeTimeOutInTick;
   \                     ??LAPAfsTreatSecurityAccessService_280:
   \   0015   8E....         MOV       A,DATPeeCalibrationData+13
   \   0018   A00A           MOV       X,#10
   \   001A   3188           MULU      X
   \   001C   A20A           MOV       C,#10
   \   001E   3182           DIVUW     C
   \   0020   6168           OR        A,X
   \   0022   BD11           BNZ       ??LAPAfsTreatSecurityAccessService_282
   \   0024   100000         MOVW      AX,#0
   \                     ??StartActivationTimeOut_0:
   \   0027   03....         MOVW      OutputControlTimeOutValue,AX
   2576              }
   2577              else
   2578              {
   2579                  OutputControlTimeOutValue = cIOCBLIDNormalOutputTimeOut;
   2580              }
   2581              
   2582              TOSStartTempo(&OutputControlTimeOut);
   \   002A   10....         MOVW      AX,#OutputControlTimeOut
   \   002D   ..             CALLT     [__T_TOSStartTimer]
   2583          }
   \   002E   B2             POP       BC
   \   002F   AF             RET       
   \                     ??LAPAfsTreatSecurityAccessService_281:
   \   0030   102C01         MOVW      AX,#300
   \   0033   FAF2           BR        ??StartActivationTimeOut_0
   \                     ??LAPAfsTreatSecurityAccessService_282:
   \   0035   8E....         MOV       A,DATPeeCalibrationData+13
   \   0038   A00A           MOV       X,#10
   \   003A   3188           MULU      X
   \   003C   A20A           MOV       C,#10
   \   003E   3182           DIVUW     C
   \   0040   90             DECW      AX
   \   0041   FAE4           BR        ??StartActivationTimeOut_0
   \   0043                  REQUIRE ?CL78K_V4_6_L00
   2584          
   2585          
   2586          //==============================================================================
   2587          // DESCRIPTION:         IOCBLIDTimeOutIsElapsed
   2588          //
   2589          // PARAMETERS:          none
   2590          //
   2591          // RETURN VALUE:        BOOL
   2592          //
   2593          // DESIGN INFORMATION:  refer to Detailed Design Document
   2594          //==============================================================================

   \                                 In  segment CODE, align 1, keep-with-next
   2595          BOOL IOCBLIDTimeOutIsElapsed(void)
   \                     IOCBLIDTimeOutIsElapsed:
   2596          {
   \   0000                  ; * Stack frame (at entry) *
   \   0000                  ; Param size: 0
   \   0000   B3             PUSH      BC
   \   0001                  ; Total Auto size: 0
   2597              return (BOOL)TOSIsTempoElapsed(&OutputControlTimeOut, OutputControlTimeOutValue);
   \   0001   02....         MOVW      AX,OutputControlTimeOutValue
   \   0004   D2             MOVW      BC,AX
   \   0005   10....         MOVW      AX,#OutputControlTimeOut
   \   0008   ..             CALLT     [__T_TOSIsTimerElapsed]
   \   0009   B2             POP       BC
   \   000A   AF             RET       
   \   000B                  REQUIRE ?CL78K_V4_6_L00
   2598          }
   2599          
   2600          //==============================================================================
   2601          // DESCRIPTION:         LAPAfsIsMaintainActiveState
   2602          //
   2603          // PARAMETERS:          none
   2604          //
   2605          // RETURN VALUE:        none
   2606          //
   2607          // DESIGN INFORMATION:  refer to Detailed Design Document
   2608          //==============================================================================

   \                                 In  segment CODE, align 1, keep-with-next
   2609          void LAPAfsIsMaintainActiveState(void)
   \                     LAPAfsIsMaintainActiveState:
   2610          {
   \   0000                  ; * Stack frame (at entry) *
   \   0000                  ; Param size: 0
   \   0000                  ; Total Auto size: 0
   2611              tTOSSeqGraphStateType IOControlGraphState;
   2612          
   2613              IOControlGraphState = TOSSeqGraphState(cTOSSeqLAPAfsIOControlByLocalID);      
   2614              if( IOControlGraphState == cTOSSeqActiveGraph ) 
   \   0000   A105           MOV       A,#5
   \   0002   ..             CALLT     [__T_TOSSeqGraphState]
   \   0003   51             DEC       A
   \   0004   BD04           BNZ       ??LAPAfsTreatSecurityAccessService_283
   2615              {
   2616                  TOSWriteSignal(cTOSSignalSomebodyMaintainActiveState);    
   \   0006   102900         MOVW      AX,#41
   \   0009   ..             CALLT     [__T_TOSWriteSignal]
   2617              }
   2618          }
   \                     ??LAPAfsTreatSecurityAccessService_283:
   \   000A   AF             RET       
   \   000B                  REQUIRE ?CL78K_V4_6_L00
   2619          
   2620          //==============================================================================
   2621          // DESCRIPTION:         LAPAfsTreatSecurityAccessService
   2622          //
   2623          // PARAMETERS:          none
   2624          //
   2625          // RETURN VALUE:        none
   2626          //
   2627          // DESIGN INFORMATION:  refer to Detailed Design Document
   2628          //==============================================================================

   \                                 In  segment BCODE, align 1, keep-with-next
   2629          MEM_TYPE void LAPAfsTreatSecurityAccessService(void)
   \                     LAPAfsTreatSecurityAccessService:
   2630          {
   \   0000                  ; * Stack frame (at entry) *
   \   0000                  ; Param size: 0
   \   0000   B3             PUSH      BC
   \   0001                  ; Total Auto size: 0
   2631          #ifdef BOOTLOADER_IS_SUPPORTED
   2632          
   2633              BOOL bCheckDynamicParameters;
   2634              #ifndef COMPILATION_NATIVE
   2635              tBootLinkTable* pReturnToBoot;
   2636              #endif
   2637          
   2638              if  ((mDATRead(U8Bit,DATKwpRxFrameLgth,Default) == cSAReq_Lngth)
   2639                &&(LAPKwpReadDiagnosticRequest(1) == cLIdReqSecurityAccess1))
   \   0001   8E....         MOV       A,DATKwpRxFrameLgth
   \   0004   4D02           CMP       A,#2
   \   0006   BD4E           BNZ       ??LAPAfsTreatSecurityAccessService_275
   \   0008   8E....         MOV       A,DATKwpRxBuffer+4
   \   000B   4D81           CMP       A,#129
   \   000D   BD47           BNZ       ??LAPAfsTreatSecurityAccessService_275
   2640              {
   2641                  //QACJ 0305: akodzhh: Cast is intentional and safe
   2642                  bCheckDynamicParameters = (BOOL)mLAPKwpCheckBootJumpConditions();
   \   000F   020C68         MOVW      AX,0x680C
   \   0012   EA6F42         CMPW      AX,#17007
   \   0015   BD20           BNZ       ??LAPAfsTreatSecurityAccessService_276
   \   0017   020E68         MOVW      AX,0x680E
   \   001A   EA746F         CMPW      AX,#28532
   \   001D   BD18           BNZ       ??LAPAfsTreatSecurityAccessService_276
   \   001F   8E....         MOV       A,bDATSpdENGINE_RPM
   \   0022   4D00           CMP       A,#0
   \   0024   BD11           BNZ       ??LAPAfsTreatSecurityAccessService_276
   \   0026   8E....         MOV       A,u8DATSpdVEHICLE_SPEED
   \   0029   4D00           CMP       A,#0
   \   002B   BD0A           BNZ       ??LAPAfsTreatSecurityAccessService_276
   \   002D   A100           MOV       A,#0
   \   002F   7104..         MOV1      CY,S:DATDinInputBuffers+6.0
   \   0032   01             NOT1      CY
   \   0033   27             ROLC      A,0x1
   \   0034   74             MOV       E,A
   \   0035   FA02           BR        ??LAPAfsTreatSecurityAccessService_277
   \                     ??LAPAfsTreatSecurityAccessService_276:
   \   0037   A400           MOV       E,#0
   2643                  LDBRefreshWatchDog();
   \                     ??LAPAfsTreatSecurityAccessService_277:
   \   0039   9A....         CALL      LDBRefreshWatchDog
   2644          
   2645                  if(bCheckDynamicParameters != cFalse)
   \   003C   64             MOV       A,E
   \   003D   4D00           CMP       A,#0
   \   003F   AD0E           BZ        ??LAPAfsTreatSecurityAccessService_278
   2646                  {
   2647                      //Execute specific command
   2648                      //QACJ 3141: akodzhh: Keep for readability
   2649                      mLAPKwpAddSpecificCommand();
   2650          
   2651                      #ifndef COMPILATION_NATIVE
   2652                      // call LIBReturnToBoot function (defined in LIB_BOO.C)
   2653                      pReturnToBoot = (tBootLinkTable *)cLIBBooBootLinkTableAddress;
   2654                      (*pReturnToBoot->pReturnToBootLink)(bCheckDynamicParameters,(U16)TOSClock);
   \   0041   02....         MOVW      AX,TOSClock
   \   0044   D2             MOVW      BC,AX
   \   0045   020068         MOVW      AX,0x6800
   \   0048   D6             MOVW      HL,AX
   \   0049   64             MOV       A,E
   \   004A   9A....         CALL      ?IND_CALL_L06
   \   004D   FA0C           BR        ??LAPAfsTreatSecurityAccessService_279
   2655                      // After the boot jump, a RESET is done by the BOOT
   2656                      #endif
   2657                  }
   2658                  else
   2659                  {
   2660                      LAPKwpPrepareNegativeResponse(cLAPKwpConditionNotCorrect);
   \                     ??LAPAfsTreatSecurityAccessService_278:
   \   004F   A122           MOV       A,#34
   \   0051   9A....         CALL      LAPKwpPrepareNegativeResponse
   \   0054   FA05           BR        ??LAPAfsTreatSecurityAccessService_279
   2661                      //Send negative response: execution condition not met
   2662                  }
   2663              }
   2664              else
   2665              {
   2666                  // Prepare negative response  : Sub service not supported - invalid format 
   2667                  LAPKwpPrepareNegativeResponse(cLAPKwpInvalidFormat);
   \                     ??LAPAfsTreatSecurityAccessService_275:
   \   0056   A112           MOV       A,#18
   \   0058   9A....         CALL      LAPKwpPrepareNegativeResponse
   2668              }
   2669          
   2670          #else  // bootloader not supported
   2671              // negative response
   2672              LAPKwpPrepareNegativeResponse(cLAPKwpServiceNotSupported);
   2673          #endif
   2674              LAPKwpSetServiceIsFinished();
   \                     ??LAPAfsTreatSecurityAccessService_279:
   \   005B                  REQUIRE ?CL78K_V4_6_L00
   \   005B                  REQUIRE ?Subroutine0
   \   005B                  ; // Fall through to label ?Subroutine0
   2675          }

   \                                 In  segment CLTVEC, align 2
   \                     __T_TOSSendControl:
   \   0000   ....           DW       TOSSendControl

   \                                 In  segment CLTVEC, align 2
   \                     __T_?I_LSH_L02:
   \   0000   ....           DW       ?I_LSH_L02

   \                                 In  segment CLTVEC, align 2
   \                     __T_DATTrpControl:
   \   0000   ....           DW       DATTrpControl

   \                                 In  segment CLTVEC, align 2
   \                     __T_?FAR_CALL_L07:
   \   0000   ....           DW       ?FAR_CALL_L07

   \                                 In  segment CLTVEC, align 2
   \                     __T_TOSSeqGraphState:
   \   0000   ....           DW       TOSSeqGraphState

   \                                 In  segment CLTVEC, align 2
   \                     __T_TOSSeqDeactivateGraph:
   \   0000   ....           DW       TOSSeqDeactivateGraph

   \                                 In  segment CLTVEC, align 2
   \                     __T_?FAR_FAST_CALL_L07:
   \   0000   ....           DW       ?FAR_FAST_CALL_L07

   \                                 In  segment CLTVEC, align 2
   \                     __T_TOSSeqActivateGraph:
   \   0000   ....           DW       TOSSeqActivateGraph

   \                                 In  segment CLTVEC, align 2
   \                     __T_TOSStartTimer:
   \   0000   ....           DW       TOSStartTimer

   \                                 In  segment CLTVEC, align 2
   \                     __T_TOSIsTimerElapsed:
   \   0000   ....           DW       TOSIsTimerElapsed

   \                                 In  segment CLTVEC, align 2
   \                     __T_TOSWriteSignal:
   \   0000   ....           DW       TOSWriteSignal

   \                                 In  segment SWITCH, align 1
   \                     `?<Jumptable for LAPAfsTreatWriteDataByLocalIde_0`:
   \   0000   0000           DW        0
   \   0002   2000           DW        32
   \   0004   ....           DW        ??LAPAfsTreatSecurityAccessService_75
   \   0006   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_0
   \   0008   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_3
   \   000A   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_4
   \   000C   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_5
   \   000E   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_6
   \   0010   ....           DW        ??LAPAfsTreatSecurityAccessService_75
   \   0012   ....           DW        ??LAPAfsTreatSecurityAccessService_75
   \   0014   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_7
   \   0016   ....           DW        ??LAPAfsTreatSecurityAccessService_75
   \   0018   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_8
   \   001A   ....           DW        ??LAPAfsTreatSecurityAccessService_75
   \   001C   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_10
   \   001E   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_12
   \   0020   ....           DW        ??LAPAfsTreatSecurityAccessService_75
   \   0022   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_14
   \   0024   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_16
   \   0026   ....           DW        ??LAPAfsTreatSecurityAccessService_78
   \   0028   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_18
   \   002A   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_20
   \   002C   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_22
   \   002E   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_24
   \   0030   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_26
   \   0032   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_28
   \   0034   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_30
   \   0036   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_32
   \   0038   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_33
   \   003A   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_34
   \   003C   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_35
   \   003E   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_36
   \   0040   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_39
   \   0042   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_40
   \   0044   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_41

   \                                 In  segment SWITCH, align 1
   \                     `?<Jumptable for LAPAfsTreatWriteDataByLocalIde_1`:
   \   0000   0100           DW        1
   \   0002   3800           DW        56
   \   0004   ....           DW        ??LAPAfsTreatSecurityAccessService_75
   \   0006   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_43
   \   0008   ....           DW        ??LAPAfsTreatSecurityAccessService_75
   \   000A   ....           DW        ??LAPAfsTreatSecurityAccessService_75
   \   000C   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_44
   \   000E   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_45
   \   0010   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_46
   \   0012   ....           DW        ??LAPAfsTreatSecurityAccessService_75
   \   0014   ....           DW        ??LAPAfsTreatSecurityAccessService_75
   \   0016   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_47
   \   0018   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_48
   \   001A   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_49
   \   001C   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_50
   \   001E   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_51
   \   0020   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_52
   \   0022   ....           DW        ??LAPAfsTreatSecurityAccessService_75
   \   0024   ....           DW        ??LAPAfsTreatSecurityAccessService_75
   \   0026   ....           DW        ??LAPAfsTreatSecurityAccessService_75
   \   0028   ....           DW        ??LAPAfsTreatSecurityAccessService_75
   \   002A   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_53
   \   002C   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_54
   \   002E   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_55
   \   0030   ....           DW        ??LAPAfsTreatSecurityAccessService_75
   \   0032   ....           DW        ??LAPAfsTreatSecurityAccessService_75
   \   0034   ....           DW        ??LAPAfsTreatSecurityAccessService_75
   \   0036   ....           DW        ??LAPAfsTreatSecurityAccessService_75
   \   0038   ....           DW        ??LAPAfsTreatSecurityAccessService_75
   \   003A   ....           DW        ??LAPAfsTreatSecurityAccessService_75
   \   003C   ....           DW        ??LAPAfsTreatSecurityAccessService_75
   \   003E   ....           DW        ??LAPAfsTreatSecurityAccessService_75
   \   0040   ....           DW        ??LAPAfsTreatSecurityAccessService_75
   \   0042   ....           DW        ??LAPAfsTreatSecurityAccessService_75
   \   0044   ....           DW        ??LAPAfsTreatSecurityAccessService_75
   \   0046   ....           DW        ??LAPAfsTreatSecurityAccessService_75
   \   0048   ....           DW        ??LAPAfsTreatSecurityAccessService_75
   \   004A   ....           DW        ??LAPAfsTreatSecurityAccessService_75
   \   004C   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_56
   \   004E   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_57
   \   0050   ....           DW        ??LAPAfsTreatSecurityAccessService_75
   \   0052   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_58
   \   0054   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_59
   \   0056   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_60
   \   0058   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_61
   \   005A   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_62
   \   005C   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_63
   \   005E   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_64
   \   0060   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_65
   \   0062   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_66
   \   0064   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_67
   \   0066   ....           DW        ??LAPAfsTreatSecurityAccessService_75
   \   0068   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_68
   \   006A   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_69
   \   006C   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_70
   \   006E   ....           DW        ??LAPAfsTreatSecurityAccessService_75
   \   0070   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_71
   \   0072   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_72
   \   0074   ....           DW        ??LAPAfsTreatWriteDataByLocalIdentifierService_73

   Segment part sizes:

     Function/Label                                   Bytes
     --------------                                   -----
     LAPAfsIOControlByLocalID                           12
     u8RoutineRequestInProgress                          1
     u8OutputRequestInProgress                           1
     OutputControlTimeOut                                2
     OutputControlTimeOutValue                           2
     TableIOCBLIDIdentifier                             17
     TableTorIndex                                      26
     TabIdentifierServiceSupportedInAfsSession
                                                         8
     TabServiceSupportedInAfsSession
                                                        32
     WriteOuputByDiag                                  321
     DeactiveOutputControl                             283
     ReadIOCBILStatus                                   85
     ReadECU_LOG                                        76
     LAPAfsTreatClearDiagnosticInformation
                                                        49
     ?Subroutine1                                        6
     LAPAfsClearFaultFlagsAndCounters
                                                         9
     LAPAfsClearFaultFlagsAndCounters_Static
                                                       413
     LAPAfsTreatStartRoutineByLocalIdentifierService
                                                       271
     LAPAfsTreatStopRoutineByLocalIdentifierService
                                                        54
     LAPAfsTreatWriteDataByLocalIdentifierService
                                                      1731
     LAPAfsTreatReadDataByLocalIdentifierService
                                                      2862
     LAPAfsTreatInputOutputControlByLocalIdentifierService
                                                       246
     LAPAfsTreatLearningModeControlService
                                                       233
     ?Subroutine0                                        7
     LAPAfsInitSession                                  11
     LAPAfsCloseSession                                 40
     FreeActuator                                        9
     FreeActuator_Static                               236
     StartActivationTimeOut                             67
     IOCBLIDTimeOutIsElapsed                            11
     LAPAfsIsMaintainActiveState                        11
     LAPAfsTreatSecurityAccessService
                                                        91
     __T_TOSSendControl                                  2
     __T_?I_LSH_L02                                      2
     __T_DATTrpControl                                   2
     __T_?FAR_CALL_L07                                   2
     __T_TOSSeqGraphState                                2
     __T_TOSSeqDeactivateGraph                           2
     __T_?FAR_FAST_CALL_L07                              2
     __T_TOSSeqActivateGraph                             2
     __T_TOSStartTimer                                   2
     __T_TOSIsTimerElapsed                               2
     __T_TOSWriteSignal                                  2
     ?<Jumptable for LAPAfsTreatWriteDataByLocalIde_0   70
     ?<Jumptable for LAPAfsTreatWriteDataByLocalIde_1  118

 
 7 015 bytes in segment BCODE
    22 bytes in segment CLTVEC
   107 bytes in segment CODE
    95 bytes in segment CONST
     6 bytes in segment NEAR_Z
   188 bytes in segment SWITCH
 
 7 122 bytes of CODE  memory (+ 22 bytes shared)
   283 bytes of CONST memory
     6 bytes of DATA  memory

Errors: none
Warnings: none
