/**************************************************************************

  Component             ParamDin.CPP
  -------------------------------------------------------------------------
  Copyright     This software is JCI property. Duplication or
                disclosure is prohibited without JCI written permission
  -------------------------------------------------------------------------
   
   - This file should only contain data useful to the programmer to use
     this component
   - Component exported macros, constants and types are defined in this file
   - Component exported variables and functions are declared in this file
     with the "extern" keyword
   
  -------------------------------------------------------------------------
    This file was generated by LDBPC Generator.dll 01.03
	
	Generation date : 15/02/2011 13:28
	Reference File  : ..\SOURCES\LAP\lap_sup.jil
	
***************************************************************************/



/*---------------------------------------------------------------------------
     Included files
  ---------------------------------------------------------------------------*/
#include "Ldbpc.h"     // Define the types and base constants
#include "Ldbpcpar.h"  // Define the setting librairy

#ifdef cLDBChannelDin

//--------------------------------------------------------------------------
//     CHANNEL Din
//--------------------------------------------------------------------------
// CallBack LDBRecevoirWithAddr to CallBack LDBRecevoirWithoutAddr
void DATDinCallBackRxWithAddr(tAddress Adresse, tStatus Statut)
{
    DATDinCallBackRxWithoutAddr(Statut);
}

void DinInit(void)
{
    tCallBackCanal CallBackCanal;
    memset(&CallBackCanal,0,sizeof(tCallBackCanal));
    S32 RefFluxIC;
    S32 RefTrame;


    // Creation of the Callback structure of the channel
    CallBackCanal.pCallBackCtrl        =   DATDinCallBackCtrl;
    CallBackCanal.pCallBackEndCtrl     =   DATDinCallBackEndCtrl;
    CallBackCanal.pCallBackTx          =   NULL;
    CallBackCanal.pCallBackRx          =   DATDinCallBackRxWithAddr;
    CallBackCanal.pTxSpontWithAddr     =   NULL;
    CallBackCanal.NbTxSpont            =   0;
    CallBackCanal.pRxSpontWithAddr     =   NULL;
    CallBackCanal.NbRxSpont            =   0;

    // Creation of the Din channel
    RESCreerCanal(cLDBChannelDin, "Din", &CallBackCanal, NULL, NULL);

    // Format of the Channel
    RESEcrireFormat( cLDBChannelDin, cCodageIntel);

    // Creation of the flux
    RESCreerFluxI(&RefFluxIC,cLDBChannelDin, cFluxIC, NULL);

    // Creation of the frames and the data 

    // Creation of the frame DinGeneratorMessage
    RESCreerTrameFI(&RefTrame, RefFluxIC, "DinGeneratorMessage", 0x0, 9
           , cFluxIC,0*(cTEMus/cLDBTick));

    // Creation of input of the frame DinGeneratorMessage
    RESCreerEntreeV(NULL, RefTrame, "AIRBAG_CRASH",1,0,6);
    RESCreerEntreeV(NULL, RefTrame, "DI_DATA_IMMOBILIZER",1,0,2);
    RESCreerEntreeV(NULL, RefTrame, "HAZARD_SW",1,0,11);
    RESCreerEntreeV(NULL, RefTrame, "DI_VERLOG",1,0,23);
    RESCreerEntreeV(NULL, RefTrame, "RR_AUTOSTOP_SW",1,0,22);
    RESCreerEntreeV(NULL, RefTrame, "FR_AUTOSTOP_SW",1,0,21);
    RESCreerEntreeV(NULL, RefTrame, "DI_VEHICLE_SPEED",1,0,20);
    RESCreerEntreeV(NULL, RefTrame, "DEFROSTER_SW",1,0,31);
    RESCreerEntreeV(NULL, RefTrame, "R_FLASHER_SW",1,0,29);
    RESCreerEntreeV(NULL, RefTrame, "L_FLASHER_SW",1,0,28);
    RESCreerEntreeV(NULL, RefTrame, "FR_WASHER_SW",1,0,39);
    RESCreerEntreeV(NULL, RefTrame, "SEATBELT_REMINDER_SW",1,0,38);
    RESCreerEntreeV(NULL, RefTrame, "POSITION_LIGHTS",1,0,36);
    RESCreerEntreeV(NULL, RefTrame, "HIGH_LOW_BEAM",1,0,47);
    RESCreerEntreeV(NULL, RefTrame, "RR_FOG_SW",1,0,46);
    RESCreerEntreeV(NULL, RefTrame, "RR_WASHER_SW",1,0,45);
    RESCreerEntreeV(NULL, RefTrame, "RR_WIPER_INT_SW",1,0,44);
    RESCreerEntreeV(NULL, RefTrame, "PWR_IGN",1,0,55);
    RESCreerEntreeV(NULL, RefTrame, "FR_DOORS_SW",1,0,52);
    RESCreerEntreeV(NULL, RefTrame, "DOOR_LOCK_SW",1,0,51);
    RESCreerEntreeV(NULL, RefTrame, "DI_ENGINE_RPM",1,0,63);
    RESCreerEntreeV(NULL, RefTrame, "RR_DOORS_SW",1,0,71);
    RESCreerEntreeV(NULL, RefTrame, "DOOR_UNLOCK_SW",1,0,70);
    RESCreerEntreeV(NULL, RefTrame, "FR_WIPER_INT_SW",1,0,69);

    // Creation of the controls 
    RESCreerControleEnt(NULL, cLDBChannelDin, "CtrlDinWakeUp", cLDBDinWakeUp);
    RESCreerControleSor(NULL, cLDBChannelDin, "CtrlDinEnterNominalMode", cLDBDinEnterNominalMode, 0*(cTEMus/cLDBTick));
    RESCreerControleSor(NULL, cLDBChannelDin, "CtrlDinEnterSleepMode", cLDBDinEnterSleepMode, 0*(cTEMus/cLDBTick));
    RESCreerControleSor(NULL, cLDBChannelDin, "CtrlDinEnableWakeUpInterrupt", cLDBDinEnableWakeUpInterrupt, 0*(cTEMus/cLDBTick));
}

#endif // cLDBChannelDin

