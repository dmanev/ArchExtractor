/**************************************************************************

  Component             ParamAna.CPP
  -------------------------------------------------------------------------
  Copyright     This software is JCI property. Duplication or
                disclosure is prohibited without JCI written permission
  -------------------------------------------------------------------------
   
   - This file should only contain data useful to the programmer to use
     this component
   - Component exported macros, constants and types are defined in this file
   - Component exported variables and functions are declared in this file
     with the "extern" keyword
   
  -------------------------------------------------------------------------
    This file was generated by LDBPC Generator.dll 01.03
	
	Generation date : 15/02/2011 13:28
	Reference File  : ..\SOURCES\LAP\lap_sup.jil
	
***************************************************************************/



/*---------------------------------------------------------------------------
     Included files
  ---------------------------------------------------------------------------*/
#include "Ldbpc.h"     // Define the types and base constants
#include "Ldbpcpar.h"  // Define the setting librairy

#ifdef cLDBChannelAna

//--------------------------------------------------------------------------
//     CHANNEL Ana
//--------------------------------------------------------------------------
// CallBack LDBRecevoirWithAddr to CallBack LDBRecevoirWithoutAddr
void DATAnaCallBackRxWithAddr(tAddress Adresse, tStatus Statut)
{
    DATAnaCallBackRxWithoutAddr(Statut);
}

void AnaInit(void)
{
    tCallBackCanal CallBackCanal;
    memset(&CallBackCanal,0,sizeof(tCallBackCanal));
    S32 RefFluxIC;
    S32 RefTrame;


    // Creation of the Callback structure of the channel
    CallBackCanal.pCallBackCtrl        =   NULL;
    CallBackCanal.pCallBackEndCtrl     =   DATAnaCallBackEndCtrl;
    CallBackCanal.pCallBackTx          =   NULL;
    CallBackCanal.pCallBackRx          =   DATAnaCallBackRxWithAddr;
    CallBackCanal.pTxSpontWithAddr     =   NULL;
    CallBackCanal.NbTxSpont            =   0;
    CallBackCanal.pRxSpontWithAddr     =   NULL;
    CallBackCanal.NbRxSpont            =   0;

    // Creation of the Ana channel
    RESCreerCanal(cLDBChannelAna, "Ana", &CallBackCanal, NULL, NULL);

    // Format of the Channel
    RESEcrireFormat( cLDBChannelAna, cCodageIntel);

    // Creation of the flux
    RESCreerFluxI(&RefFluxIC,cLDBChannelAna, cFluxIC, NULL);

    // Creation of the frames and the data 

    // Creation of the frame AnaGeneratorMessage
    RESCreerTrameFI(&RefTrame, RefFluxIC, "AnaGeneratorMessage", 0x0, 16
           , cFluxIC,0*(cTEMus/cLDBTick));

    // Creation of input of the frame AnaGeneratorMessage
    RESCreerEntreeV(NULL, RefTrame, "DIAG_BAT",16,766,112);
    RESCreerEntreeV(NULL, RefTrame, "DIAG_FLASHER",16,0,96);
    RESCreerEntreeV(NULL, RefTrame, "DIAG_DRIVER_ULQ",16,0,80);
    RESCreerEntreeV(NULL, RefTrame, "AI_FR_WIPER_INT_SW",16,0,64);
    RESCreerEntreeV(NULL, RefTrame, "DIAG_DRIVER_KLAXON",16,0,48);
    RESCreerEntreeV(NULL, RefTrame, "AI_DOOR_UNLOCK_SW",16,1023,32);
    RESCreerEntreeV(NULL, RefTrame, "AI_RR_DOORS_SW",16,1023,16);
    RESCreerEntreeV(NULL, RefTrame, "DIAG_DRIVER_HIGH_SIDE",16,0,0);

    // Creation of the controls 
    RESCreerControleSor(NULL, cLDBChannelAna, "CtrlAnaStart", cLDBAnaStart, 0*(cTEMus/cLDBTick));
    RESCreerControleSor(NULL, cLDBChannelAna, "CtrlAnaStop", cLDBAnaStop, 0*(cTEMus/cLDBTick));
}

#endif // cLDBChannelAna

