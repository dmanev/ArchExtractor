/**************************************************************************

  Component             DAT_PANx.H
  -------------------------------------------------------------------------
  Copyright     This software is JCI property. Duplication or
                disclosure is prohibited without JCI written permission
  -------------------------------------------------------------------------
   
   - This file should only contain data useful to the programmer to use
     this component
   - Component exported macros, constants and types are defined in this file
   - Component exported variables and functions are declared in this file
     with the "extern" keyword
   
  -------------------------------------------------------------------------
    This file was generated by DAT Generator.dll 01.08
	
	Generation date : 15/02/2011 13:28
	Reference File  : ..\SOURCES\LAP\lap_sup.jil
	
***************************************************************************/


#ifdef IS_INCLUDED_DAT_PANx_H
#else
#define IS_INCLUDED_DAT_PANx_H  (1)

/*---------------------------------------------------------------------------
     Included files
  ---------------------------------------------------------------------------*/
#include "deftypes.h"

/*---------------------------------------------------------------------------
     Message AnaGeneratorMessage
  ---------------------------------------------------------------------------*/
#define cDATPanNumberOfDataAnaGeneratorMessage   8
#define cDATPanSizeAnaGeneratorMessage           16
#ifdef cFormatIntel
#define cDATPanInitBufferAnaGeneratorMessage    {((U8)0x00UL), ((U8)0x00UL), ((U8)0xffUL), ((U8)0x03UL), ((U8)0xffUL), ((U8)0x03UL), ((U8)0x00UL), ((U8)0x00UL), ((U8)0x00UL), ((U8)0x00UL), ((U8)0x00UL), ((U8)0x00UL), ((U8)0x00UL), ((U8)0x00UL), ((U8)0xfeUL), ((U8)0x02UL)}
#define cDATPanDefaultBufferAnaGeneratorMessage {((U8)0x00UL), ((U8)0x00UL), ((U8)0x00UL), ((U8)0x00UL), ((U8)0x00UL), ((U8)0x00UL), ((U8)0x00UL), ((U8)0x00UL), ((U8)0x00UL), ((U8)0x00UL), ((U8)0x00UL), ((U8)0x00UL), ((U8)0x00UL), ((U8)0x00UL), ((U8)0x00UL), ((U8)0x00UL)}

#endif
#ifdef cFormatMotorola
#define cDATPanInitBufferAnaGeneratorMessage    {((U8)0x00UL), ((U8)0x00UL), ((U8)0x03UL), ((U8)0xffUL), ((U8)0x03UL), ((U8)0xffUL), ((U8)0x00UL), ((U8)0x00UL), ((U8)0x00UL), ((U8)0x00UL), ((U8)0x00UL), ((U8)0x00UL), ((U8)0x00UL), ((U8)0x00UL), ((U8)0x02UL), ((U8)0xfeUL)}
#define cDATPanDefaultBufferAnaGeneratorMessage {((U8)0x00UL), ((U8)0x00UL), ((U8)0x00UL), ((U8)0x00UL), ((U8)0x00UL), ((U8)0x00UL), ((U8)0x00UL), ((U8)0x00UL), ((U8)0x00UL), ((U8)0x00UL), ((U8)0x00UL), ((U8)0x00UL), ((U8)0x00UL), ((U8)0x00UL), ((U8)0x00UL), ((U8)0x00UL)}

#endif
/* DIAG_BAT -- Message AnaGeneratorMessage, Byte 14, MSB Bit 7, BitSize 16 */

#ifdef DIAG_BAT
#error "do not define DIAG_BAT. this token is used for macro concatenation." 
#endif

#define cDATPanDIAG_BATByteIndex ((U8) 14 )
#define cDATPanDIAG_BATBitIndex ((U8) 7 )

#define mDATReadU16BitDIAG_BATDelayed() \
  mDATPanReadU16Bit(AnaGeneratorMessage, 14 , 7, 16, Delayed)

#define mDATReadU16BitDIAG_BATImmediate() \
  mDATPanReadU16Bit(AnaGeneratorMessage, 14 , 7, 16, Immediate)

#define mDATReadU16BitDIAG_BATDefault() \
  mDATPanReadU16Bit(AnaGeneratorMessage, 14 , 7, 16, Delayed)

#define mDATWriteU16BitDIAG_BATDelayed(Value) \
  mDATPanWriteU16Bit(AnaGeneratorMessage, 14 , 7, 16, (Value), Delayed)

#define mDATWriteU16BitDIAG_BATImmediate(Value) \
  mDATPanWriteU16Bit(AnaGeneratorMessage, 14 , 7, 16, (Value), Immediate)

#define mDATWriteU16BitDIAG_BATDefault(Value) \
  mDATPanWriteU16Bit(AnaGeneratorMessage, 14 , 7, 16, (Value), Delayed)


/* DIAG_FLASHER -- Message AnaGeneratorMessage, Byte 12, MSB Bit 7, BitSize 16 */

#ifdef DIAG_FLASHER
#error "do not define DIAG_FLASHER. this token is used for macro concatenation." 
#endif

#define cDATPanDIAG_FLASHERByteIndex ((U8) 12 )
#define cDATPanDIAG_FLASHERBitIndex ((U8) 7 )

#define mDATReadU16BitDIAG_FLASHERDelayed() \
  mDATPanReadU16Bit(AnaGeneratorMessage, 12 , 7, 16, Delayed)

#define mDATReadU16BitDIAG_FLASHERImmediate() \
  mDATPanReadU16Bit(AnaGeneratorMessage, 12 , 7, 16, Immediate)

#define mDATReadU16BitDIAG_FLASHERDefault() \
  mDATPanReadU16Bit(AnaGeneratorMessage, 12 , 7, 16, Delayed)

#define mDATWriteU16BitDIAG_FLASHERDelayed(Value) \
  mDATPanWriteU16Bit(AnaGeneratorMessage, 12 , 7, 16, (Value), Delayed)

#define mDATWriteU16BitDIAG_FLASHERImmediate(Value) \
  mDATPanWriteU16Bit(AnaGeneratorMessage, 12 , 7, 16, (Value), Immediate)

#define mDATWriteU16BitDIAG_FLASHERDefault(Value) \
  mDATPanWriteU16Bit(AnaGeneratorMessage, 12 , 7, 16, (Value), Delayed)


/* DIAG_DRIVER_ULQ -- Message AnaGeneratorMessage, Byte 10, MSB Bit 7, BitSize 16 */

#ifdef DIAG_DRIVER_ULQ
#error "do not define DIAG_DRIVER_ULQ. this token is used for macro concatenation." 
#endif

#define cDATPanDIAG_DRIVER_ULQByteIndex ((U8) 10 )
#define cDATPanDIAG_DRIVER_ULQBitIndex ((U8) 7 )

#define mDATReadU16BitDIAG_DRIVER_ULQDelayed() \
  mDATPanReadU16Bit(AnaGeneratorMessage, 10 , 7, 16, Delayed)

#define mDATReadU16BitDIAG_DRIVER_ULQImmediate() \
  mDATPanReadU16Bit(AnaGeneratorMessage, 10 , 7, 16, Immediate)

#define mDATReadU16BitDIAG_DRIVER_ULQDefault() \
  mDATPanReadU16Bit(AnaGeneratorMessage, 10 , 7, 16, Delayed)

#define mDATWriteU16BitDIAG_DRIVER_ULQDelayed(Value) \
  mDATPanWriteU16Bit(AnaGeneratorMessage, 10 , 7, 16, (Value), Delayed)

#define mDATWriteU16BitDIAG_DRIVER_ULQImmediate(Value) \
  mDATPanWriteU16Bit(AnaGeneratorMessage, 10 , 7, 16, (Value), Immediate)

#define mDATWriteU16BitDIAG_DRIVER_ULQDefault(Value) \
  mDATPanWriteU16Bit(AnaGeneratorMessage, 10 , 7, 16, (Value), Delayed)


/* AI_FR_WIPER_INT_SW -- Message AnaGeneratorMessage, Byte 8, MSB Bit 7, BitSize 16 */

#ifdef AI_FR_WIPER_INT_SW
#error "do not define AI_FR_WIPER_INT_SW. this token is used for macro concatenation." 
#endif

#define cDATPanAI_FR_WIPER_INT_SWByteIndex ((U8) 8 )
#define cDATPanAI_FR_WIPER_INT_SWBitIndex ((U8) 7 )

#define mDATReadU16BitAI_FR_WIPER_INT_SWDelayed() \
  mDATPanReadU16Bit(AnaGeneratorMessage, 8 , 7, 16, Delayed)

#define mDATReadU16BitAI_FR_WIPER_INT_SWImmediate() \
  mDATPanReadU16Bit(AnaGeneratorMessage, 8 , 7, 16, Immediate)

#define mDATReadU16BitAI_FR_WIPER_INT_SWDefault() \
  mDATPanReadU16Bit(AnaGeneratorMessage, 8 , 7, 16, Delayed)

#define mDATWriteU16BitAI_FR_WIPER_INT_SWDelayed(Value) \
  mDATPanWriteU16Bit(AnaGeneratorMessage, 8 , 7, 16, (Value), Delayed)

#define mDATWriteU16BitAI_FR_WIPER_INT_SWImmediate(Value) \
  mDATPanWriteU16Bit(AnaGeneratorMessage, 8 , 7, 16, (Value), Immediate)

#define mDATWriteU16BitAI_FR_WIPER_INT_SWDefault(Value) \
  mDATPanWriteU16Bit(AnaGeneratorMessage, 8 , 7, 16, (Value), Delayed)


/* DIAG_DRIVER_KLAXON -- Message AnaGeneratorMessage, Byte 6, MSB Bit 7, BitSize 16 */

#ifdef DIAG_DRIVER_KLAXON
#error "do not define DIAG_DRIVER_KLAXON. this token is used for macro concatenation." 
#endif

#define cDATPanDIAG_DRIVER_KLAXONByteIndex ((U8) 6 )
#define cDATPanDIAG_DRIVER_KLAXONBitIndex ((U8) 7 )

#define mDATReadU16BitDIAG_DRIVER_KLAXONDelayed() \
  mDATPanReadU16Bit(AnaGeneratorMessage, 6 , 7, 16, Delayed)

#define mDATReadU16BitDIAG_DRIVER_KLAXONImmediate() \
  mDATPanReadU16Bit(AnaGeneratorMessage, 6 , 7, 16, Immediate)

#define mDATReadU16BitDIAG_DRIVER_KLAXONDefault() \
  mDATPanReadU16Bit(AnaGeneratorMessage, 6 , 7, 16, Delayed)

#define mDATWriteU16BitDIAG_DRIVER_KLAXONDelayed(Value) \
  mDATPanWriteU16Bit(AnaGeneratorMessage, 6 , 7, 16, (Value), Delayed)

#define mDATWriteU16BitDIAG_DRIVER_KLAXONImmediate(Value) \
  mDATPanWriteU16Bit(AnaGeneratorMessage, 6 , 7, 16, (Value), Immediate)

#define mDATWriteU16BitDIAG_DRIVER_KLAXONDefault(Value) \
  mDATPanWriteU16Bit(AnaGeneratorMessage, 6 , 7, 16, (Value), Delayed)


/* AI_DOOR_UNLOCK_SW -- Message AnaGeneratorMessage, Byte 4, MSB Bit 7, BitSize 16 */

#ifdef AI_DOOR_UNLOCK_SW
#error "do not define AI_DOOR_UNLOCK_SW. this token is used for macro concatenation." 
#endif

#define cDATPanAI_DOOR_UNLOCK_SWByteIndex ((U8) 4 )
#define cDATPanAI_DOOR_UNLOCK_SWBitIndex ((U8) 7 )

#define mDATReadU16BitAI_DOOR_UNLOCK_SWDelayed() \
  mDATPanReadU16Bit(AnaGeneratorMessage, 4 , 7, 16, Delayed)

#define mDATReadU16BitAI_DOOR_UNLOCK_SWImmediate() \
  mDATPanReadU16Bit(AnaGeneratorMessage, 4 , 7, 16, Immediate)

#define mDATReadU16BitAI_DOOR_UNLOCK_SWDefault() \
  mDATPanReadU16Bit(AnaGeneratorMessage, 4 , 7, 16, Delayed)

#define mDATWriteU16BitAI_DOOR_UNLOCK_SWDelayed(Value) \
  mDATPanWriteU16Bit(AnaGeneratorMessage, 4 , 7, 16, (Value), Delayed)

#define mDATWriteU16BitAI_DOOR_UNLOCK_SWImmediate(Value) \
  mDATPanWriteU16Bit(AnaGeneratorMessage, 4 , 7, 16, (Value), Immediate)

#define mDATWriteU16BitAI_DOOR_UNLOCK_SWDefault(Value) \
  mDATPanWriteU16Bit(AnaGeneratorMessage, 4 , 7, 16, (Value), Delayed)


/* AI_RR_DOORS_SW -- Message AnaGeneratorMessage, Byte 2, MSB Bit 7, BitSize 16 */

#ifdef AI_RR_DOORS_SW
#error "do not define AI_RR_DOORS_SW. this token is used for macro concatenation." 
#endif

#define cDATPanAI_RR_DOORS_SWByteIndex ((U8) 2 )
#define cDATPanAI_RR_DOORS_SWBitIndex ((U8) 7 )

#define mDATReadU16BitAI_RR_DOORS_SWDelayed() \
  mDATPanReadU16Bit(AnaGeneratorMessage, 2 , 7, 16, Delayed)

#define mDATReadU16BitAI_RR_DOORS_SWImmediate() \
  mDATPanReadU16Bit(AnaGeneratorMessage, 2 , 7, 16, Immediate)

#define mDATReadU16BitAI_RR_DOORS_SWDefault() \
  mDATPanReadU16Bit(AnaGeneratorMessage, 2 , 7, 16, Delayed)

#define mDATWriteU16BitAI_RR_DOORS_SWDelayed(Value) \
  mDATPanWriteU16Bit(AnaGeneratorMessage, 2 , 7, 16, (Value), Delayed)

#define mDATWriteU16BitAI_RR_DOORS_SWImmediate(Value) \
  mDATPanWriteU16Bit(AnaGeneratorMessage, 2 , 7, 16, (Value), Immediate)

#define mDATWriteU16BitAI_RR_DOORS_SWDefault(Value) \
  mDATPanWriteU16Bit(AnaGeneratorMessage, 2 , 7, 16, (Value), Delayed)


/* DIAG_DRIVER_HIGH_SIDE -- Message AnaGeneratorMessage, Byte 0, MSB Bit 7, BitSize 16 */

#ifdef DIAG_DRIVER_HIGH_SIDE
#error "do not define DIAG_DRIVER_HIGH_SIDE. this token is used for macro concatenation." 
#endif

#define cDATPanDIAG_DRIVER_HIGH_SIDEByteIndex ((U8) 0 )
#define cDATPanDIAG_DRIVER_HIGH_SIDEBitIndex ((U8) 7 )

#define mDATReadU16BitDIAG_DRIVER_HIGH_SIDEDelayed() \
  mDATPanReadU16Bit(AnaGeneratorMessage, 0 , 7, 16, Delayed)

#define mDATReadU16BitDIAG_DRIVER_HIGH_SIDEImmediate() \
  mDATPanReadU16Bit(AnaGeneratorMessage, 0 , 7, 16, Immediate)

#define mDATReadU16BitDIAG_DRIVER_HIGH_SIDEDefault() \
  mDATPanReadU16Bit(AnaGeneratorMessage, 0 , 7, 16, Delayed)

#define mDATWriteU16BitDIAG_DRIVER_HIGH_SIDEDelayed(Value) \
  mDATPanWriteU16Bit(AnaGeneratorMessage, 0 , 7, 16, (Value), Delayed)

#define mDATWriteU16BitDIAG_DRIVER_HIGH_SIDEImmediate(Value) \
  mDATPanWriteU16Bit(AnaGeneratorMessage, 0 , 7, 16, (Value), Immediate)

#define mDATWriteU16BitDIAG_DRIVER_HIGH_SIDEDefault(Value) \
  mDATPanWriteU16Bit(AnaGeneratorMessage, 0 , 7, 16, (Value), Delayed)


/*---------------------------------------------------------------------------
     Macro defined by the channel
  ---------------------------------------------------------------------------*/
// #define mDATPanReadU16Bit(Message, BytePos, BitPosd, BitSize, Mode)

#endif // IS_INCLUDED_DAT_PANx_H

