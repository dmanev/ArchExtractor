/**************************************************************************

  Component             DAT_POUx.H
  -------------------------------------------------------------------------
  Copyright     This software is JCI property. Duplication or
                disclosure is prohibited without JCI written permission
  -------------------------------------------------------------------------
   
   - This file should only contain data useful to the programmer to use
     this component
   - Component exported macros, constants and types are defined in this file
   - Component exported variables and functions are declared in this file
     with the "extern" keyword
   
  -------------------------------------------------------------------------
    This file was generated by DAT Generator.dll 01.08
	
	Generation date : 15/02/2011 13:28
	Reference File  : ..\SOURCES\LAP\lap_sup.jil
	
***************************************************************************/


#ifdef IS_INCLUDED_DAT_POUx_H
#else
#define IS_INCLUDED_DAT_POUx_H  (1)

/*---------------------------------------------------------------------------
     Included files
  ---------------------------------------------------------------------------*/
#include "deftypes.h"

/*---------------------------------------------------------------------------
     Message DouGeneratorMessage
  ---------------------------------------------------------------------------*/
#define cDATPouNumberOfDataDouGeneratorMessage   12
#define cDATPouSizeDouGeneratorMessage           4
#ifdef cFormatIntel
#define cDATPouInitBufferDouGeneratorMessage    {((U8)0x00UL), ((U8)0x00UL), ((U8)0x00UL), ((U8)0x00UL)}
#define cDATPouDefaultBufferDouGeneratorMessage {((U8)0x00UL), ((U8)0x00UL), ((U8)0x00UL), ((U8)0x00UL)}

#endif
#ifdef cFormatMotorola
#define cDATPouInitBufferDouGeneratorMessage    {((U8)0x00UL), ((U8)0x00UL), ((U8)0x00UL), ((U8)0x00UL)}
#define cDATPouDefaultBufferDouGeneratorMessage {((U8)0x00UL), ((U8)0x00UL), ((U8)0x00UL), ((U8)0x00UL)}

#endif
/* VERLOG_LED -- Message DouGeneratorMessage, Byte 0, MSB Bit 2, BitSize 1 */

#ifdef VERLOG_LED
#error "do not define VERLOG_LED. this token is used for macro concatenation." 
#endif

#define cDATPouVERLOG_LEDByteIndex ((U8) 0 )
#define cDATPouVERLOG_LEDBitIndex ((U8) 2 )

#define mDATReadU1BitVERLOG_LEDDelayed() \
  mDATPouReadU1Bit(DouGeneratorMessage, 0 , 2, Delayed)

#define mDATReadU1BitVERLOG_LEDImmediate() \
  mDATPouReadU1Bit(DouGeneratorMessage, 0 , 2, Immediate)

#define mDATReadU1BitVERLOG_LEDDefault() \
  mDATPouReadU1Bit(DouGeneratorMessage, 0 , 2, Delayed)

#define mDATWriteU1BitVERLOG_LEDDelayed(Value) \
  mDATPouWriteU1Bit(DouGeneratorMessage, 0 , 2, (Value), Delayed)

#define mDATWriteU1BitVERLOG_LEDImmediate(Value) \
  mDATPouWriteU1Bit(DouGeneratorMessage, 0 , 2, (Value), Immediate)

#define mDATWriteU1BitVERLOG_LEDDefault(Value) \
  mDATPouWriteU1Bit(DouGeneratorMessage, 0 , 2,(Value), Delayed)


/* OPEN_DOOR_LED -- Message DouGeneratorMessage, Byte 0, MSB Bit 3, BitSize 1 */

#ifdef OPEN_DOOR_LED
#error "do not define OPEN_DOOR_LED. this token is used for macro concatenation." 
#endif

#define cDATPouOPEN_DOOR_LEDByteIndex ((U8) 0 )
#define cDATPouOPEN_DOOR_LEDBitIndex ((U8) 3 )

#define mDATReadU1BitOPEN_DOOR_LEDDelayed() \
  mDATPouReadU1Bit(DouGeneratorMessage, 0 , 3, Delayed)

#define mDATReadU1BitOPEN_DOOR_LEDImmediate() \
  mDATPouReadU1Bit(DouGeneratorMessage, 0 , 3, Immediate)

#define mDATReadU1BitOPEN_DOOR_LEDDefault() \
  mDATPouReadU1Bit(DouGeneratorMessage, 0 , 3, Delayed)

#define mDATWriteU1BitOPEN_DOOR_LEDDelayed(Value) \
  mDATPouWriteU1Bit(DouGeneratorMessage, 0 , 3, (Value), Delayed)

#define mDATWriteU1BitOPEN_DOOR_LEDImmediate(Value) \
  mDATPouWriteU1Bit(DouGeneratorMessage, 0 , 3, (Value), Immediate)

#define mDATWriteU1BitOPEN_DOOR_LEDDefault(Value) \
  mDATPouWriteU1Bit(DouGeneratorMessage, 0 , 3,(Value), Delayed)


/* DEFROSTER -- Message DouGeneratorMessage, Byte 1, MSB Bit 1, BitSize 1 */

#ifdef DEFROSTER
#error "do not define DEFROSTER. this token is used for macro concatenation." 
#endif

#define cDATPouDEFROSTERByteIndex ((U8) 1 )
#define cDATPouDEFROSTERBitIndex ((U8) 1 )

#define mDATReadU1BitDEFROSTERDelayed() \
  mDATPouReadU1Bit(DouGeneratorMessage, 1 , 1, Delayed)

#define mDATReadU1BitDEFROSTERImmediate() \
  mDATPouReadU1Bit(DouGeneratorMessage, 1 , 1, Immediate)

#define mDATReadU1BitDEFROSTERDefault() \
  mDATPouReadU1Bit(DouGeneratorMessage, 1 , 1, Delayed)

#define mDATWriteU1BitDEFROSTERDelayed(Value) \
  mDATPouWriteU1Bit(DouGeneratorMessage, 1 , 1, (Value), Delayed)

#define mDATWriteU1BitDEFROSTERImmediate(Value) \
  mDATPouWriteU1Bit(DouGeneratorMessage, 1 , 1, (Value), Immediate)

#define mDATWriteU1BitDEFROSTERDefault(Value) \
  mDATPouWriteU1Bit(DouGeneratorMessage, 1 , 1,(Value), Delayed)


/* HORN_RL -- Message DouGeneratorMessage, Byte 2, MSB Bit 2, BitSize 1 */

#ifdef HORN_RL
#error "do not define HORN_RL. this token is used for macro concatenation." 
#endif

#define cDATPouHORN_RLByteIndex ((U8) 2 )
#define cDATPouHORN_RLBitIndex ((U8) 2 )

#define mDATReadU1BitHORN_RLDelayed() \
  mDATPouReadU1Bit(DouGeneratorMessage, 2 , 2, Delayed)

#define mDATReadU1BitHORN_RLImmediate() \
  mDATPouReadU1Bit(DouGeneratorMessage, 2 , 2, Immediate)

#define mDATReadU1BitHORN_RLDefault() \
  mDATPouReadU1Bit(DouGeneratorMessage, 2 , 2, Delayed)

#define mDATWriteU1BitHORN_RLDelayed(Value) \
  mDATPouWriteU1Bit(DouGeneratorMessage, 2 , 2, (Value), Delayed)

#define mDATWriteU1BitHORN_RLImmediate(Value) \
  mDATPouWriteU1Bit(DouGeneratorMessage, 2 , 2, (Value), Immediate)

#define mDATWriteU1BitHORN_RLDefault(Value) \
  mDATPouWriteU1Bit(DouGeneratorMessage, 2 , 2,(Value), Delayed)


/* LOCK_DOORS -- Message DouGeneratorMessage, Byte 3, MSB Bit 0, BitSize 1 */

#ifdef LOCK_DOORS
#error "do not define LOCK_DOORS. this token is used for macro concatenation." 
#endif

#define cDATPouLOCK_DOORSByteIndex ((U8) 3 )
#define cDATPouLOCK_DOORSBitIndex ((U8) 0 )

#define mDATReadU1BitLOCK_DOORSDelayed() \
  mDATPouReadU1Bit(DouGeneratorMessage, 3 , 0, Delayed)

#define mDATReadU1BitLOCK_DOORSImmediate() \
  mDATPouReadU1Bit(DouGeneratorMessage, 3 , 0, Immediate)

#define mDATReadU1BitLOCK_DOORSDefault() \
  mDATPouReadU1Bit(DouGeneratorMessage, 3 , 0, Delayed)

#define mDATWriteU1BitLOCK_DOORSDelayed(Value) \
  mDATPouWriteU1Bit(DouGeneratorMessage, 3 , 0, (Value), Delayed)

#define mDATWriteU1BitLOCK_DOORSImmediate(Value) \
  mDATPouWriteU1Bit(DouGeneratorMessage, 3 , 0, (Value), Immediate)

#define mDATWriteU1BitLOCK_DOORSDefault(Value) \
  mDATPouWriteU1Bit(DouGeneratorMessage, 3 , 0,(Value), Delayed)


/* UNLOCK_DOORS -- Message DouGeneratorMessage, Byte 3, MSB Bit 1, BitSize 1 */

#ifdef UNLOCK_DOORS
#error "do not define UNLOCK_DOORS. this token is used for macro concatenation." 
#endif

#define cDATPouUNLOCK_DOORSByteIndex ((U8) 3 )
#define cDATPouUNLOCK_DOORSBitIndex ((U8) 1 )

#define mDATReadU1BitUNLOCK_DOORSDelayed() \
  mDATPouReadU1Bit(DouGeneratorMessage, 3 , 1, Delayed)

#define mDATReadU1BitUNLOCK_DOORSImmediate() \
  mDATPouReadU1Bit(DouGeneratorMessage, 3 , 1, Immediate)

#define mDATReadU1BitUNLOCK_DOORSDefault() \
  mDATPouReadU1Bit(DouGeneratorMessage, 3 , 1, Delayed)

#define mDATWriteU1BitUNLOCK_DOORSDelayed(Value) \
  mDATPouWriteU1Bit(DouGeneratorMessage, 3 , 1, (Value), Delayed)

#define mDATWriteU1BitUNLOCK_DOORSImmediate(Value) \
  mDATPouWriteU1Bit(DouGeneratorMessage, 3 , 1, (Value), Immediate)

#define mDATWriteU1BitUNLOCK_DOORSDefault(Value) \
  mDATPouWriteU1Bit(DouGeneratorMessage, 3 , 1,(Value), Delayed)


/* BAT_LIGHT_TEMPO -- Message DouGeneratorMessage, Byte 3, MSB Bit 2, BitSize 1 */

#ifdef BAT_LIGHT_TEMPO
#error "do not define BAT_LIGHT_TEMPO. this token is used for macro concatenation." 
#endif

#define cDATPouBAT_LIGHT_TEMPOByteIndex ((U8) 3 )
#define cDATPouBAT_LIGHT_TEMPOBitIndex ((U8) 2 )

#define mDATReadU1BitBAT_LIGHT_TEMPODelayed() \
  mDATPouReadU1Bit(DouGeneratorMessage, 3 , 2, Delayed)

#define mDATReadU1BitBAT_LIGHT_TEMPOImmediate() \
  mDATPouReadU1Bit(DouGeneratorMessage, 3 , 2, Immediate)

#define mDATReadU1BitBAT_LIGHT_TEMPODefault() \
  mDATPouReadU1Bit(DouGeneratorMessage, 3 , 2, Delayed)

#define mDATWriteU1BitBAT_LIGHT_TEMPODelayed(Value) \
  mDATPouWriteU1Bit(DouGeneratorMessage, 3 , 2, (Value), Delayed)

#define mDATWriteU1BitBAT_LIGHT_TEMPOImmediate(Value) \
  mDATPouWriteU1Bit(DouGeneratorMessage, 3 , 2, (Value), Immediate)

#define mDATWriteU1BitBAT_LIGHT_TEMPODefault(Value) \
  mDATPouWriteU1Bit(DouGeneratorMessage, 3 , 2,(Value), Delayed)


/* UNLOCK_DRIVER_DOOR -- Message DouGeneratorMessage, Byte 3, MSB Bit 3, BitSize 1 */

#ifdef UNLOCK_DRIVER_DOOR
#error "do not define UNLOCK_DRIVER_DOOR. this token is used for macro concatenation." 
#endif

#define cDATPouUNLOCK_DRIVER_DOORByteIndex ((U8) 3 )
#define cDATPouUNLOCK_DRIVER_DOORBitIndex ((U8) 3 )

#define mDATReadU1BitUNLOCK_DRIVER_DOORDelayed() \
  mDATPouReadU1Bit(DouGeneratorMessage, 3 , 3, Delayed)

#define mDATReadU1BitUNLOCK_DRIVER_DOORImmediate() \
  mDATPouReadU1Bit(DouGeneratorMessage, 3 , 3, Immediate)

#define mDATReadU1BitUNLOCK_DRIVER_DOORDefault() \
  mDATPouReadU1Bit(DouGeneratorMessage, 3 , 3, Delayed)

#define mDATWriteU1BitUNLOCK_DRIVER_DOORDelayed(Value) \
  mDATPouWriteU1Bit(DouGeneratorMessage, 3 , 3, (Value), Delayed)

#define mDATWriteU1BitUNLOCK_DRIVER_DOORImmediate(Value) \
  mDATPouWriteU1Bit(DouGeneratorMessage, 3 , 3, (Value), Immediate)

#define mDATWriteU1BitUNLOCK_DRIVER_DOORDefault(Value) \
  mDATPouWriteU1Bit(DouGeneratorMessage, 3 , 3,(Value), Delayed)


/* FRONT_WIPER -- Message DouGeneratorMessage, Byte 3, MSB Bit 4, BitSize 1 */

#ifdef FRONT_WIPER
#error "do not define FRONT_WIPER. this token is used for macro concatenation." 
#endif

#define cDATPouFRONT_WIPERByteIndex ((U8) 3 )
#define cDATPouFRONT_WIPERBitIndex ((U8) 4 )

#define mDATReadU1BitFRONT_WIPERDelayed() \
  mDATPouReadU1Bit(DouGeneratorMessage, 3 , 4, Delayed)

#define mDATReadU1BitFRONT_WIPERImmediate() \
  mDATPouReadU1Bit(DouGeneratorMessage, 3 , 4, Immediate)

#define mDATReadU1BitFRONT_WIPERDefault() \
  mDATPouReadU1Bit(DouGeneratorMessage, 3 , 4, Delayed)

#define mDATWriteU1BitFRONT_WIPERDelayed(Value) \
  mDATPouWriteU1Bit(DouGeneratorMessage, 3 , 4, (Value), Delayed)

#define mDATWriteU1BitFRONT_WIPERImmediate(Value) \
  mDATPouWriteU1Bit(DouGeneratorMessage, 3 , 4, (Value), Immediate)

#define mDATWriteU1BitFRONT_WIPERDefault(Value) \
  mDATPouWriteU1Bit(DouGeneratorMessage, 3 , 4,(Value), Delayed)


/* RR_WIPER_RR_FOG_LAMP -- Message DouGeneratorMessage, Byte 3, MSB Bit 5, BitSize 1 */

#ifdef RR_WIPER_RR_FOG_LAMP
#error "do not define RR_WIPER_RR_FOG_LAMP. this token is used for macro concatenation." 
#endif

#define cDATPouRR_WIPER_RR_FOG_LAMPByteIndex ((U8) 3 )
#define cDATPouRR_WIPER_RR_FOG_LAMPBitIndex ((U8) 5 )

#define mDATReadU1BitRR_WIPER_RR_FOG_LAMPDelayed() \
  mDATPouReadU1Bit(DouGeneratorMessage, 3 , 5, Delayed)

#define mDATReadU1BitRR_WIPER_RR_FOG_LAMPImmediate() \
  mDATPouReadU1Bit(DouGeneratorMessage, 3 , 5, Immediate)

#define mDATReadU1BitRR_WIPER_RR_FOG_LAMPDefault() \
  mDATPouReadU1Bit(DouGeneratorMessage, 3 , 5, Delayed)

#define mDATWriteU1BitRR_WIPER_RR_FOG_LAMPDelayed(Value) \
  mDATPouWriteU1Bit(DouGeneratorMessage, 3 , 5, (Value), Delayed)

#define mDATWriteU1BitRR_WIPER_RR_FOG_LAMPImmediate(Value) \
  mDATPouWriteU1Bit(DouGeneratorMessage, 3 , 5, (Value), Immediate)

#define mDATWriteU1BitRR_WIPER_RR_FOG_LAMPDefault(Value) \
  mDATPouWriteU1Bit(DouGeneratorMessage, 3 , 5,(Value), Delayed)


/* DI_LEFT -- Message DouGeneratorMessage, Byte 3, MSB Bit 6, BitSize 1 */

#ifdef DI_LEFT
#error "do not define DI_LEFT. this token is used for macro concatenation." 
#endif

#define cDATPouDI_LEFTByteIndex ((U8) 3 )
#define cDATPouDI_LEFTBitIndex ((U8) 6 )

#define mDATReadU1BitDI_LEFTDelayed() \
  mDATPouReadU1Bit(DouGeneratorMessage, 3 , 6, Delayed)

#define mDATReadU1BitDI_LEFTImmediate() \
  mDATPouReadU1Bit(DouGeneratorMessage, 3 , 6, Immediate)

#define mDATReadU1BitDI_LEFTDefault() \
  mDATPouReadU1Bit(DouGeneratorMessage, 3 , 6, Delayed)

#define mDATWriteU1BitDI_LEFTDelayed(Value) \
  mDATPouWriteU1Bit(DouGeneratorMessage, 3 , 6, (Value), Delayed)

#define mDATWriteU1BitDI_LEFTImmediate(Value) \
  mDATPouWriteU1Bit(DouGeneratorMessage, 3 , 6, (Value), Immediate)

#define mDATWriteU1BitDI_LEFTDefault(Value) \
  mDATPouWriteU1Bit(DouGeneratorMessage, 3 , 6,(Value), Delayed)


/* DI_RIGHT -- Message DouGeneratorMessage, Byte 3, MSB Bit 7, BitSize 1 */

#ifdef DI_RIGHT
#error "do not define DI_RIGHT. this token is used for macro concatenation." 
#endif

#define cDATPouDI_RIGHTByteIndex ((U8) 3 )
#define cDATPouDI_RIGHTBitIndex ((U8) 7 )

#define mDATReadU1BitDI_RIGHTDelayed() \
  mDATPouReadU1Bit(DouGeneratorMessage, 3 , 7, Delayed)

#define mDATReadU1BitDI_RIGHTImmediate() \
  mDATPouReadU1Bit(DouGeneratorMessage, 3 , 7, Immediate)

#define mDATReadU1BitDI_RIGHTDefault() \
  mDATPouReadU1Bit(DouGeneratorMessage, 3 , 7, Delayed)

#define mDATWriteU1BitDI_RIGHTDelayed(Value) \
  mDATPouWriteU1Bit(DouGeneratorMessage, 3 , 7, (Value), Delayed)

#define mDATWriteU1BitDI_RIGHTImmediate(Value) \
  mDATPouWriteU1Bit(DouGeneratorMessage, 3 , 7, (Value), Immediate)

#define mDATWriteU1BitDI_RIGHTDefault(Value) \
  mDATPouWriteU1Bit(DouGeneratorMessage, 3 , 7,(Value), Delayed)


/*---------------------------------------------------------------------------
     Macro defined by the channel
  ---------------------------------------------------------------------------*/
// #define mDATPouReadU1Bit(Message, BytePos, BitPosd, Mode)
// #define mDATPouWriteU1Bit(Message, BytePos, BitPosd, Value, Mode)

#endif // IS_INCLUDED_DAT_POUx_H

