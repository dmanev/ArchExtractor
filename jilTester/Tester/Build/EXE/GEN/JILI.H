/**************************************************************************

  Component             JILI.H
  -------------------------------------------------------------------------
  Copyright     This software is JCI property. Duplication or
                disclosure is prohibited without JCI written permission
  -------------------------------------------------------------------------
   
   - This file should only contain data useful to the programmer to use
     this component
   - Component exported macros, constants and types are defined in this file
   - Component exported variables and functions are declared in this file
     with the "extern" keyword
   
  -------------------------------------------------------------------------
    This file was generated by TOS.dll 01.03
	
	Generation date : 15/02/2011 13:28
	Reference File  : ..\SOURCES\LAP\lap_sup.jil
	
***************************************************************************/


extern void DATCpuIdleTask(void);
extern void DATEepTask(void);
extern void DATCpuRefreshWatchDogTask(void);
extern void GraphEngineTaskSleep(void);
extern void DATBuzTask(void);
extern void DATDouRefreshOutputTask(void);
extern void GraphEngineTask80Ms(void);
extern void GraphEngineTask20Ms(void);
extern void GraphEngineTask(void);
extern void DATKwpTaskControl(void);
extern void DATRbgAirbagCrashDetection(void);
extern void DATDinReadTask(void);
extern void DATAnaTask(void);
extern void TOSClockTask(void);

extern const tTOSSeqGraphType EepromManager;
extern const tTOSSeqGraphType DATTrpAuthentication;
extern const tTOSSeqGraphType DATVlgOutputProtection;
extern const tTOSSeqGraphType LAPKwpTreatRequest;
extern const tTOSSeqGraphType LAPKwpTreatCommunication;
extern const tTOSSeqGraphType LAPAfsIOControlByLocalID;
extern const tTOSSeqGraphType LAPTfcAutoTestIO;
extern const tTOSSeqGraphType LAPTfcGraph;
extern const tTOSSeqGraphType LAPTfcEepTest;
extern const tTOSSeqGraphType DLKInputData;
extern const tTOSSeqGraphType DLKOutputData;
extern const tTOSSeqGraphType DLKMotorCommand;
extern const tTOSSeqGraphType DLKAirbagManagement;
extern const tTOSSeqGraphType LAPBuzMainGraph;
extern const tTOSSeqGraphType LAPFliProtectionManagement;
extern const tTOSSeqGraphType CARManageImmobiliserAndCarAntiTheft;
extern const tTOSSeqGraphType RDFRearDefoggerManagement;
extern const tTOSSeqGraphType RDFProtectionManagement;
extern const tTOSSeqGraphType LAPAlarms;
extern const tTOSSeqGraphType AlarmAfterReset;
extern const tTOSSeqGraphType LAPFrwEngineProtection;
extern const tTOSSeqGraphType LAPFrwIntermittentWipe;
extern const tTOSSeqGraphType LAPFrwWashing;
extern const tTOSSeqGraphType LAPFrwControl;
extern const tTOSSeqGraphType LAPRrwEngineProtection;
extern const tTOSSeqGraphType LAPRrwIntermittentWipe;
extern const tTOSSeqGraphType LAPRrwWashing;
extern const tTOSSeqGraphType LAPRrwInitialParking;
extern const tTOSSeqGraphType LAPRrwControl;
extern const tTOSSeqGraphType PerimeterAlarmManagement;
extern const tTOSSeqGraphType DATTrpWriteAccess;
extern const tTOSSeqGraphType DATTrpResynchronization;
extern const tTOSSeqGraphType DATTrpTfcDiag;
extern const tTOSSeqGraphType LAPIllInternalLightsManagement;
extern const tTOSSeqGraphType LAPIllInternalLightsController;
extern const tTOSSeqGraphType LAPFliInput;
extern const tTOSSeqGraphType LAPFliLampsState;
extern const tTOSSeqGraphType LRNUpdateLearningAuthorization;
extern const tTOSSeqGraphType LRNManageLearningService;
extern const tTOSSeqGraphType LAPExlGraph;
extern const tTOSSeqGraphType EepromNormalization;
extern const tTOSSeqGraphType DATVlgInput;
extern const tTOSSeqGraphType SpeedManagement;
extern const tTOSSeqGraphType RPMManagement;
extern const tTOSSeqGraphType DATRfReceptionManagement;
extern const tTOSSeqGraphType LAPVldPatternManagement;
extern const tTOSSeqGraphType Supervisor;

extern void TOSSeqInitialize(void);
extern void TOSSigInitialize(void);
extern void TOSAlaInitialize(void);
extern void TOSTpoInitialize(void);
extern void DATCpuInit(void);
extern void DATEepInit(void);
extern void DATEepIsMaintainActiveSleepState(void);
extern void DATDeaInitialize(void);
extern void DATSbkInit(void);
extern void DATDbkInit(void);
extern void DATPeeInit(void);
extern void DATPeeIsMaintainStartingStepState(void);
extern void DATPeeReadAllBanks(void);
extern void DATPeeCanRestoreBanks(void);
extern void DATPeeUpdateBanks(void);
extern void DATDinEnterActiveState(void);
extern void DATDinLeaveActiveState(void);
extern void DATDinLeaveStartingStepState(void);
extern void DATDinMaintainActiveSleepState(void);
extern void DATPinInit(void);
extern void DATPinIsMaintainActiveState(void);
extern void DATPinIsMaintainActiveSleepState(void);
extern void DATPinEnterActiveState(void);
extern void DATPinLeaveActiveState(void);
extern void DATPinLeaveStartingStepState(void);
extern void DATDouEnterNominalMode(void);
extern void DATDouEnterSleepMode(void);
extern void DATPouInit(void);
extern void DATPouActivateFinalTest(void);
extern void DATPouLeaveStartingStepState(void);
extern void DATPouLeaveActiveState(void);
extern void DATPouAirbagUnlockStarted(void);
extern void DATPouAirbagUnlockFinished(void);
extern void DATPanInit(void);
extern void DATAnaStart(void);
extern void DATAnaStop(void);
extern void DATCmnInitialize(void);
extern void DATCmnLeaveStartingStepState(void);
extern void DATCmnGetAprTrpResource(void);
extern void DATCmnReleaseAprTrpResource(void);
extern void DATCmnGetCarTrpResource(void);
extern void DATCmnReleaseCarTrpResource(void);
extern void DATKwpInit(void);
extern void DATKwpLeaveStartingStepState(void);
extern void DATKwpIsMaintainActiveState(void);
extern void DATPwmInit(void);
extern void DATPwmLeaveStartingStepState(void);
extern void DATRfInit(void);
extern void DATRfIsAnybodyMaintainActiveState(void);
extern void DATRfIsAnybodyMaintainActiveSleepState(void);
extern void DATBuzInit(void);
extern void DATBuzStart(void);
extern void DATBuzStop(void);
extern void DATTrpInit(void);
extern void DATTrpMaintainActiveState(void);
extern void DATVlgInit(void);
extern void DATVlgKeyIsAuthenticated(void);
extern void DATVlgKeyIsNotAuthenticated(void);
extern void DATVlgStartAuthentPermKey(void);
extern void DATVlgExitFromAuthentPermKey(void);
extern void DATVlgFalling_PWR_IGN(void);
extern void DATVlgIsAnybodyMaintainActiveState(void);
extern void DATAprInit(void);
extern void DATSpdInit(void);
extern void DATSpdEnterActiveState(void);
extern void DATSpdLeaveActiveState(void);
extern void DATAlaInit(void);
extern void DATRbgInit(void);
extern void LAPKwpInitialize(void);
extern void LAPAfsIsMaintainActiveState(void);
extern void LAPAfsClearFaultFlagsAndCounters(void);
extern void DLKInitialize(void);
extern void DLKIsAnybodyMaintainActiveState(void);
extern void DLKEnterActiveState(void);
extern void DLKLeaveActiveState(void);
extern void DLKUpdateByVerlogOfKeyIsAuthenticated(void);
extern void DLKLeaveStartingStepState(void);
extern void DLKProtectionSleepModeCallBack(void);
extern void LAPIllInitialize(void);
extern void LAPIllLeaveStartingStepState(void);
extern void LAPIllEnterActiveState(void);
extern void LAPIllLeaveActiveState(void);
extern void LAPIllIsAnybodyMaintainActiveState(void);
extern void LAPIllRKELock(void);
extern void LAPIllRKEUnlock(void);
extern void LAPIllRKELock(void);
extern void LAPBuzInitialize(void);
extern void LAPBuzEnterActiveState(void);
extern void LAPBuzLeaveActiveState(void);
extern void LAPFliInitialize(void);
extern void LAPFliEnterActiveState(void);
extern void LAPFliLeaveActiveState(void);
extern void LAPFliIsAnybodyMaintainActiveState(void);
extern void LAPFliLeftFlashingForTFC(void);
extern void LAPFliRightFlashingForTFC(void);
extern void LAPFliInputManagement(void);
extern void LRNExitFromLearningInFactoryMode(void);
extern void LRNGiveUpLearningInAfterSaleMode(void);
extern void LRNEnterActiveState(void);
extern void LRNInitialize(void);
extern void LRNLeaveActiveState(void);
extern void LRNStartLearningInAfterSaleMode(void);
extern void LRNStartLearningInFactoryMode(void);
extern void LRNValidateLearningInAfterSaleMode(void);
extern void CARInitialize(void);
extern void CARIsAnybodyMaintainActiveState(void);
extern void CAREnterActiveState(void);
extern void CARLeaveActiveState(void);
extern void CARAuthorizedStandByMode(void);
extern void CARStartAuthentPermKey(void);
extern void CARExitFromAuthentPermKey(void);
extern void CARStartTestVirginKey(void);
extern void LAPVldInitialize(void);
extern void LAPDfrInitialize(void);
extern void LAPDfrEnterActiveState(void);
extern void LAPDfrLeaveActiveState(void);
extern void LAPDfrIsAnybodyMaintainActiveState(void);
extern void LAPDfrLeaveStartingStepState(void);
extern void LAPAlaInitialize(void);
extern void LAPAlaEnterActiveState(void);
extern void LAPAlaLeaveActiveState(void);
extern void LAPAlaIsAnybodyMaintainActiveState(void);
extern void LAPAlaIsAnybodyMaintainActiveSleepState(void);
extern void LAPAlaLeaveStartingStepState(void);
extern void LAPAlaKeyIsAuthenticated(void);
extern void LAPAlaUnlockFromTheOutside(void);
extern void LAPAlaLockFromTheOutside(void);
extern void LAPAlaDiagEnable(void);
extern void LAPAlaDiagDisable(void);
extern void LAPAlaFallingEdgeForPWR_IGN(void);
extern void LAPAlaFallingEdgeForDS(void);
extern void LAPAlaFallingEdgeForDS(void);
extern void LAPFrwInitialize(void);
extern void LAPFrwEnterActiveState(void);
extern void LAPFrwLeaveActiveState(void);
extern void LAPRrwInitialize(void);
extern void LAPRrwEnterActiveState(void);
extern void LAPRrwLeaveActiveState(void);
extern void LAPExlEnterActiveState(void);
extern void LAPExlLeaveActiveState(void);
extern void LAPPalInitialize(void);
extern void LAPPalEnterActiveState(void);
extern void LAPPalLeaveActiveState(void);
extern void LAPPalLeaveStartingStepState(void);
extern void LAPPalIsAnybodyMaintainActiveState(void);
extern void LAPPalKeyIsAuthenticated(void);
extern void LAPPalUnlockFromTheOutside(void);
extern void LAPPalLockFromTheOutside(void);
extern void LAPPalRising_FR_DOORS_SW(void);
extern void LAPPalRising_RR_DOORS_SW(void);
extern void LAPSupActiveSleepRequest(void);
extern void LAPSupWakeUpRequest(void);

/*---------------------------------------------------------------------------
     Definition of the Task list
  ---------------------------------------------------------------------------*/
  #define mTOSTaskList \
  {\
    DATCpuIdleTask                  ,\
    DATEepTask                      ,\
    DATCpuRefreshWatchDogTask       ,\
    GraphEngineTaskSleep            ,\
    DATBuzTask                      ,\
    DATDouRefreshOutputTask         ,\
    GraphEngineTask80Ms             ,\
    GraphEngineTask20Ms             ,\
    GraphEngineTask                 ,\
    DATKwpTaskControl               ,\
    DATRbgAirbagCrashDetection      ,\
    DATDinReadTask                  ,\
    DATAnaTask                      ,\
    TOSClockTask                    ,\
  }

  #define mTOSForbiddenPreemptLevelList \
  {\
     0,\
     1,\
     2,\
     3,\
     4,\
     5,\
     6,\
     7,\
     8,\
     9,\
    10,\
    11,\
    12,\
    13,\
  }

// IDs
/*---------------------------------------------------------------------------
     Definition of the Graph list
  ---------------------------------------------------------------------------*/
#define mTOSGraphList \
{\
    &EepromManager,\
    &DATTrpAuthentication,\
    &DATVlgOutputProtection,\
    &LAPKwpTreatRequest,\
    &LAPKwpTreatCommunication,\
    &LAPAfsIOControlByLocalID,\
    &LAPTfcAutoTestIO,\
    &LAPTfcGraph,\
    &LAPTfcEepTest,\
    &DLKInputData,\
    &DLKOutputData,\
    &DLKMotorCommand,\
    &DLKAirbagManagement,\
    &LAPBuzMainGraph,\
    &LAPFliProtectionManagement,\
    &CARManageImmobiliserAndCarAntiTheft,\
    &RDFRearDefoggerManagement,\
    &RDFProtectionManagement,\
    &LAPAlarms,\
    &AlarmAfterReset,\
    &LAPFrwEngineProtection,\
    &LAPFrwIntermittentWipe,\
    &LAPFrwWashing,\
    &LAPFrwControl,\
    &LAPRrwEngineProtection,\
    &LAPRrwIntermittentWipe,\
    &LAPRrwWashing,\
    &LAPRrwInitialParking,\
    &LAPRrwControl,\
    &PerimeterAlarmManagement,\
    &DATTrpWriteAccess,\
    &DATTrpResynchronization,\
    &DATTrpTfcDiag,\
    &LAPIllInternalLightsManagement,\
    &LAPIllInternalLightsController,\
    &LAPFliInput,\
    &LAPFliLampsState,\
    &LRNUpdateLearningAuthorization,\
    &LRNManageLearningService,\
    &LAPExlGraph,\
    &EepromNormalization,\
    &DATVlgInput,\
    &SpeedManagement,\
    &RPMManagement,\
    &DATRfReceptionManagement,\
    &LAPVldPatternManagement,\
    &Supervisor,\
}

/*---------------------------------------------------------------------------
     Definition of the graph task list
  ---------------------------------------------------------------------------*/
#define mTOSGraphTaskList \
    void GraphEngineTask(void) { mTOSSeqMotorDefault(); }\
    void GraphEngineTask20Ms(void) { mTOSSeqMotorGraphGroup20Ms(); }\
    void GraphEngineTaskSleep(void) { mTOSSeqMotorGraphGroupSleep(); }\
    void GraphEngineTask80Ms(void) { mTOSSeqMotorGraphGroup80Ms(); }

/*---------------------------------------------------------------------------
     Definition of the Controls's Macro
  ---------------------------------------------------------------------------*/
#define mSignalControl(ControlId)\
{\
    switch(ControlId)\
    {\
    case(cTOSControlTOSInitialize):\
    TOSSeqInitialize();\
    TOSSigInitialize();\
    TOSAlaInitialize();\
    TOSTpoInitialize();\
    break;\
    \
    case(cTOSControlActiveSleepRequest):\
    LAPSupActiveSleepRequest();\
    break;\
    \
    case(cTOSControlWakeUpRequest):\
    LAPSupWakeUpRequest();\
    break;\
    \
    case(cTOSControlChanging_RR_DOORS_SW):\
    TOSPositionnerSignal(cTOSSignalChanging_RR_DOORS_SW_LAP_ILL);\
    TOSPositionnerSignal(cTOSSignalChanging_RR_DOORS_SW_LAP_DLK);\
    break;\
    \
    case(cTOSControlChanging_FR_DOORS_SW):\
    TOSPositionnerSignal(cTOSSignalChanging_FR_DOORS_SW_LAP_ILL);\
    TOSPositionnerSignal(cTOSSignalChanging_FR_DOORS_SW_LAP_DLK);\
    break;\
    \
    case(cTOSControlFalling_HAZARD_SW):\
    TOSPositionnerSignal(cTOSSignalFalling_HAZARD_SW_LAP_FLI);\
    break;\
    \
    case(cTOSControlFalling_PWR_IGN):\
    TOSPositionnerSignal(cTOSSignalFalling_PWR_IGN_LAP_ILL);\
    TOSPositionnerSignal(cTOSSignalFalling_PWR_IGN_LAP_BUZ);\
    TOSPositionnerSignal(cTOSSignalFalling_PWR_IGN_LAP_DLK);\
    DATVlgFalling_PWR_IGN();\
    LAPAlaFallingEdgeForPWR_IGN();\
    break;\
    \
    case(cTOSControlRising_PWR_IGN):\
    TOSPositionnerSignal(cTOSSignalRising_PWR_IGN_LAP_ILL);\
    TOSPositionnerSignal(cTOSSignalRising_PWR_IGN_LAP_FLI);\
    TOSPositionnerSignal(cTOSSignalRising_PWR_IGN_LAP_DLK);\
    break;\
    \
    case(cTOSControlFrontStopPositionDetected):\
    TOSPositionnerSignal(cTOSSignalFrontStopPositionDetected_LAP_FRW1);\
    TOSPositionnerSignal(cTOSSignalFrontStopPositionDetected_LAP_FRW2);\
    break;\
    \
    case(cTOSControlRearStopPositionDetected):\
    TOSPositionnerSignal(cTOSSignalRearStopPositionDetected_LAP_RRW1);\
    TOSPositionnerSignal(cTOSSignalRearStopPositionDetected_LAP_RRW2);\
    break;\
    \
    case(cTOSControlRising_DOOR_LOCK_SW):\
    TOSPositionnerSignal(cTOSSignalRising_DOOR_LOCK_SW_LAP_DLK);\
    break;\
    \
    case(cTOSControlRising_DOOR_UNLOCK_SW):\
    TOSPositionnerSignal(cTOSSignalRising_DOOR_UNLOCK_LOCK_SW_LAP_DLK);\
    break;\
    \
    case(cTOSControlFalling_FR_DOORS_SW):\
    TOSPositionnerSignal(cTOSSignalFalling_FR_DOORS_SW_LAP_DLK);\
    LAPAlaFallingEdgeForDS();\
    break;\
    \
    case(cTOSControlRising_FR_DOORS_SW):\
    TOSPositionnerSignal(cTOSSignalRising_FR_DOORS_SW_LAP_DLK);\
    LAPPalRising_FR_DOORS_SW();\
    break;\
    \
    case(cTOSControlFalling_RR_DOORS_SW):\
    TOSPositionnerSignal(cTOSSignalFalling_RR_DOORS_SW_LAP_DLK);\
    LAPAlaFallingEdgeForDS();\
    break;\
    \
    case(cTOSControlRising_RR_DOORS_SW):\
    TOSPositionnerSignal(cTOSSignalRising_RR_DOORS_SW_LAP_DLK);\
    LAPPalRising_RR_DOORS_SW();\
    break;\
    \
    case(cTOSControlInputsReadAfterStartingStepState):\
    DLKLeaveStartingStepState();\
    LAPPalLeaveStartingStepState();\
    break;\
    \
    case(cTOSControlProtectionLedVerlogSleepMode):\
    DLKProtectionSleepModeCallBack();\
    break;\
    \
    case(cTOSControlAirbagUnlock):\
    DATPouAirbagUnlockStarted();\
    TOSPositionnerSignal(cTOSSignalCrashIsDetectedByAirbag);\
    break;\
    \
    case(cTOSControlStartLearningInFactoryMode):\
    LRNStartLearningInFactoryMode();\
    break;\
    \
    case(cTOSControlExitFromLearningInFactoryMode):\
    LRNExitFromLearningInFactoryMode();\
    break;\
    \
    case(cTOSControlStartLearningInAfterSaleMode):\
    LRNStartLearningInAfterSaleMode();\
    break;\
    \
    case(cTOSControlValidateLearningInAfterSaleMode):\
    LRNValidateLearningInAfterSaleMode();\
    break;\
    \
    case(cTOSControlGiveUpLearningInAfterSaleMode):\
    LRNGiveUpLearningInAfterSaleMode();\
    break;\
    \
    case(cTOSControlStartPermanentAuthentication):\
    DATVlgStartAuthentPermKey();\
    CARStartAuthentPermKey();\
    break;\
    \
    case(cTOSControlStopPermanentAuthentication):\
    DATVlgExitFromAuthentPermKey();\
    CARExitFromAuthentPermKey();\
    break;\
    \
    case(cTOSControlStartTestVirginKey):\
    CARStartTestVirginKey();\
    break;\
    \
    case(cTOSControlAlaDiagEnable):\
    LAPAlaDiagEnable();\
    break;\
    \
    case(cTOSControlAlaDiagDisable):\
    LAPAlaDiagDisable();\
    break;\
    \
    case(cTOSControlRightFlashingForTFC):\
    LAPFliRightFlashingForTFC();\
    break;\
    \
    case(cTOSControlLeftFlashingForTFC):\
    LAPFliLeftFlashingForTFC();\
    break;\
    \
    case(cTOSControlActivateFinalTest):\
    DATPouActivateFinalTest();\
    break;\
    \
    case(cTOSControlClearFaultFlagsAndCounters):\
    LAPAfsClearFaultFlagsAndCounters();\
    break;\
    \
    case(cTOSControlRKE_LOCK_REQUEST):\
    LAPIllRKELock();\
    TOSPositionnerSignal(cTOSSignalLAPFliEventRfLockAll);\
    break;\
    \
    case(cTOSControlRKE_UNLOCK_REQUEST):\
    LAPIllRKEUnlock();\
    TOSPositionnerSignal(cTOSSignalLAPFliEventRfUnlockAll);\
    break;\
    \
    case(cTOSControlRfLockAllForAlarm):\
    LAPAlaLockFromTheOutside();\
    LAPPalLockFromTheOutside();\
    break;\
    \
    case(cTOSControlRfUnlockAllForAlarm):\
    LAPAlaUnlockFromTheOutside();\
    LAPPalUnlockFromTheOutside();\
    break;\
    \
    case(cTOSControlAutoRelock):\
    LAPIllRKELock();\
    break;\
    \
    case(cTOSControlCrashUnlockFinished):\
    DATPouAirbagUnlockFinished();\
    TOSPositionnerSignal(cTOSSignalLAPFliCrashUnlockFinished);\
    LAPFliInputManagement();\
    break;\
    \
    case(cTOSControlGetAprTrpResource):\
    DATCmnGetAprTrpResource();\
    break;\
    \
    case(cTOSControlReleaseAprTrpResource):\
    DATCmnReleaseAprTrpResource();\
    break;\
    \
    case(cTOSControlGetCarTrpResource):\
    DATCmnGetCarTrpResource();\
    break;\
    \
    case(cTOSControlKeyIsAuthenticated):\
    DATVlgKeyIsAuthenticated();\
    DLKUpdateByVerlogOfKeyIsAuthenticated();\
    LAPAlaKeyIsAuthenticated();\
    LAPPalKeyIsAuthenticated();\
    break;\
    \
    case(cTOSControlKeyIsNotAuthenticated):\
    DATVlgKeyIsNotAuthenticated();\
    break;\
    \
    case(cTOSControlReleaseCarTrpResource):\
    DATCmnReleaseCarTrpResource();\
    break;\
    \
    case(cTOSControlDATInitialize):\
    DATCpuInit();\
    DATEepInit();\
    DATDeaInitialize();\
    DATSbkInit();\
    DATDbkInit();\
    DATPeeInit();\
    DATPinInit();\
    DATPouInit();\
    DATPanInit();\
    DATCmnInitialize();\
    DATKwpInit();\
    DATPwmInit();\
    DATRfInit();\
    DATBuzInit();\
    DATTrpInit();\
    DATVlgInit();\
    DATAprInit();\
    DATSpdInit();\
    DATAlaInit();\
    DATRbgInit();\
    break;\
    \
    case(cTOSControlLAPInitialize):\
    LAPKwpInitialize();\
    DLKInitialize();\
    LAPIllInitialize();\
    LAPBuzInitialize();\
    LAPFliInitialize();\
    LRNInitialize();\
    CARInitialize();\
    LAPVldInitialize();\
    LAPDfrInitialize();\
    LAPAlaInitialize();\
    LAPFrwInitialize();\
    LAPRrwInitialize();\
    LAPPalInitialize();\
    break;\
    \
    case(cTOSControlEnterStartingStepState):\
    DATPeeReadAllBanks();\
    break;\
    \
    case(cTOSControlLeaveStartingStepState):\
    DATPeeCanRestoreBanks();\
    DATDinLeaveStartingStepState();\
    DATPinLeaveStartingStepState();\
    DATPouLeaveStartingStepState();\
    DATCmnLeaveStartingStepState();\
    DATKwpLeaveStartingStepState();\
    DATPwmLeaveStartingStepState();\
    LAPIllLeaveStartingStepState();\
    CARAuthorizedStandByMode();\
    LAPDfrLeaveStartingStepState();\
    LAPAlaLeaveStartingStepState();\
    break;\
    \
    case(cTOSControlDATEnterActiveState):\
    DATDinEnterActiveState();\
    DATPinEnterActiveState();\
    DATDouEnterNominalMode();\
    DATAnaStart();\
    DATBuzStart();\
    DATSpdEnterActiveState();\
    break;\
    \
    case(cTOSControlLAPEnterActiveState):\
    DLKEnterActiveState();\
    LAPIllEnterActiveState();\
    LAPBuzEnterActiveState();\
    LAPFliEnterActiveState();\
    LRNEnterActiveState();\
    CAREnterActiveState();\
    LAPDfrEnterActiveState();\
    LAPAlaEnterActiveState();\
    LAPFrwEnterActiveState();\
    LAPRrwEnterActiveState();\
    LAPExlEnterActiveState();\
    LAPPalEnterActiveState();\
    break;\
    \
    case(cTOSControlLAPLeaveActiveState):\
    DLKLeaveActiveState();\
    LAPIllLeaveActiveState();\
    LAPBuzLeaveActiveState();\
    LAPFliLeaveActiveState();\
    LRNLeaveActiveState();\
    CARLeaveActiveState();\
    LAPDfrLeaveActiveState();\
    LAPAlaLeaveActiveState();\
    LAPFrwLeaveActiveState();\
    LAPRrwLeaveActiveState();\
    LAPExlLeaveActiveState();\
    LAPPalLeaveActiveState();\
    break;\
    \
    case(cTOSControlDATLeaveActiveState):\
    DATPeeUpdateBanks();\
    DATDinLeaveActiveState();\
    DATPinLeaveActiveState();\
    DATDouEnterSleepMode();\
    DATPouLeaveActiveState();\
    DATAnaStop();\
    DATBuzStop();\
    DATSpdLeaveActiveState();\
    break;\
    \
    case(cTOSControlIsAnybodyMaintainStartingStepState):\
    DATPeeIsMaintainStartingStepState();\
    break;\
    \
    case(cTOSControlIsAnybodyMaintainActiveSleepState):\
    DATEepIsMaintainActiveSleepState();\
    DATDinMaintainActiveSleepState();\
    DATPinIsMaintainActiveSleepState();\
    DATRfIsAnybodyMaintainActiveSleepState();\
    LAPAlaIsAnybodyMaintainActiveSleepState();\
    break;\
    \
    case(cTOSControlIsAnybodyMaintainActiveState):\
    DATPinIsMaintainActiveState();\
    DATKwpIsMaintainActiveState();\
    DATRfIsAnybodyMaintainActiveState();\
    DATTrpMaintainActiveState();\
    DATVlgIsAnybodyMaintainActiveState();\
    LAPAfsIsMaintainActiveState();\
    DLKIsAnybodyMaintainActiveState();\
    LAPIllIsAnybodyMaintainActiveState();\
    LAPFliIsAnybodyMaintainActiveState();\
    CARIsAnybodyMaintainActiveState();\
    LAPDfrIsAnybodyMaintainActiveState();\
    LAPAlaIsAnybodyMaintainActiveState();\
    LAPPalIsAnybodyMaintainActiveState();\
    break;\
    \
    default:\
    mLIBassert(cFalse);\
    break;\
    }\
}

